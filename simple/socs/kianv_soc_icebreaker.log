
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3746 (git sha1 95c60866, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os)


-- Parsing `kianv_soc_icebreaker.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: kianv_soc_icebreaker.v
Parsing Verilog input from `kianv_soc_icebreaker.v' to AST representation.
Generating RTLIL representation for module `\kianv_soc'.
Generating RTLIL representation for module `\pll_icebreaker'.
Successfully finished Verilog frontend.

-- Parsing `../kianv.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ../kianv.v
Parsing Verilog input from `../kianv.v' to AST representation.
Generating RTLIL representation for module `\kianv'.
register_file:
Successfully finished Verilog frontend.

-- Parsing `bram.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: bram.v
Parsing Verilog input from `bram.v' to AST representation.
Generating RTLIL representation for module `\bram'.
WORDS:
Successfully finished Verilog frontend.

-- Parsing `register_file.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: register_file.v
Parsing Verilog input from `register_file.v' to AST representation.
Generating RTLIL representation for module `\register_file'.
Successfully finished Verilog frontend.

-- Parsing `my_tx_uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: my_tx_uart.v
Parsing Verilog input from `my_tx_uart.v' to AST representation.
Generating RTLIL representation for module `\my_tx_uart'.
SYSTEM_CLK:		
SYSTEM_CYCLES:		
BAUDRATE:		
CYCLES_PER_SYMBOL:	
WAITSTATES_BIT_WIDTH:	
Successfully finished Verilog frontend.

-- Parsing `spi_flash_mem.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: spi_flash_mem.v
Parsing Verilog input from `spi_flash_mem.v' to AST representation.
Generating RTLIL representation for module `\spi_flash_mem'.
Successfully finished Verilog frontend.

-- Parsing `ice40up5k_spram.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: ice40up5k_spram.v
Parsing Verilog input from `ice40up5k_spram.v' to AST representation.
Generating RTLIL representation for module `\ice40up5k_spram'.
Successfully finished Verilog frontend.

-- Parsing `oled_sdd1331.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: oled_sdd1331.v
Parsing Verilog input from `oled_sdd1331.v' to AST representation.
Generating RTLIL representation for module `\oled_ssd1331'.
SYSTEM_CLK:		
SYSTEM_CYCLES:		
MIN_CLOCK_CYCLE_TIME:		
CYCLES_PER_SYMBOL:	
CLK_DIV_WIDTH:	
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top kianv_soc -json kianv_soc_icebreaker.json' --

9. Executing SYNTH_ICE40 pass.

9.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

9.2. Executing HIERARCHY pass (managing design hierarchy).

9.2.1. Analyzing design hierarchy..
Top module:  \kianv_soc
Used module:     \kianv
Used module:         \register_file
Used module:     \ice40up5k_spram
Used module:     \bram
Used module:     \oled_ssd1331
Used module:     \spi_flash_mem
Used module:     \my_tx_uart
Used module:     \pll_icebreaker
Parameter \rv32e = 1'0
Parameter \rv32m = 1'1
Parameter \reset_addr = 537919488

9.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\kianv'.
Parameter \rv32e = 1'0
Parameter \rv32m = 1'1
Parameter \reset_addr = 537919488
Generating RTLIL representation for module `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488'.
register_file:
Parameter \WORDS = 32768

9.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40up5k_spram'.
Parameter \WORDS = 32768
Generating RTLIL representation for module `$paramod\ice40up5k_spram\WORDS=32768'.
Parameter \WORDS = 8192

9.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\bram'.
Parameter \WORDS = 8192
Generating RTLIL representation for module `$paramod\bram\WORDS=8192'.
WORDS:
Parameter \SYSTEM_CLK = 30000000

9.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\oled_ssd1331'.
Parameter \SYSTEM_CLK = 30000000
Generating RTLIL representation for module `$paramod\oled_ssd1331\SYSTEM_CLK=30000000'.
SYSTEM_CLK:		
SYSTEM_CYCLES:		
MIN_CLOCK_CYCLE_TIME:		
CYCLES_PER_SYMBOL:	
CLK_DIV_WIDTH:	
Parameter \SYSTEM_CLK = 30000000
Parameter \BAUDRATE = 115200

9.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\my_tx_uart'.
Parameter \SYSTEM_CLK = 30000000
Parameter \BAUDRATE = 115200
Generating RTLIL representation for module `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200'.
SYSTEM_CLK:		
SYSTEM_CYCLES:		
BAUDRATE:		
CYCLES_PER_SYMBOL:	
WAITSTATES_BIT_WIDTH:	
Parameter \freq = 30

9.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\pll_icebreaker'.
Parameter \freq = 30
Generating RTLIL representation for module `$paramod\pll_icebreaker\freq=30'.
Parameter 1 (\DEPTH) = 32

9.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\register_file'.
Parameter 1 (\DEPTH) = 32
Generating RTLIL representation for module `$paramod\register_file\DEPTH=32'.

9.2.9. Analyzing design hierarchy..
Top module:  \kianv_soc
Used module:     $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488
Used module:         \register_file
Used module:     $paramod\ice40up5k_spram\WORDS=32768
Used module:     $paramod\bram\WORDS=8192
Used module:     $paramod\oled_ssd1331\SYSTEM_CLK=30000000
Used module:     \spi_flash_mem
Used module:     $paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200
Used module:     $paramod\pll_icebreaker\freq=30
Parameter 1 (\DEPTH) = 32
Found cached RTLIL representation for module `$paramod\register_file\DEPTH=32'.

9.2.10. Analyzing design hierarchy..
Top module:  \kianv_soc
Used module:     $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488
Used module:         $paramod\register_file\DEPTH=32
Used module:     $paramod\ice40up5k_spram\WORDS=32768
Used module:     $paramod\bram\WORDS=8192
Used module:     $paramod\oled_ssd1331\SYSTEM_CLK=30000000
Used module:     \spi_flash_mem
Used module:     $paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200
Used module:     $paramod\pll_icebreaker\freq=30

9.2.11. Analyzing design hierarchy..
Top module:  \kianv_soc
Used module:     $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488
Used module:         $paramod\register_file\DEPTH=32
Used module:     $paramod\ice40up5k_spram\WORDS=32768
Used module:     $paramod\bram\WORDS=8192
Used module:     $paramod\oled_ssd1331\SYSTEM_CLK=30000000
Used module:     \spi_flash_mem
Used module:     $paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200
Used module:     $paramod\pll_icebreaker\freq=30
Removing unused module `\oled_ssd1331'.
Removing unused module `\ice40up5k_spram'.
Removing unused module `\my_tx_uart'.
Removing unused module `\register_file'.
Removing unused module `\bram'.
Removing unused module `\kianv'.
Removing unused module `\pll_icebreaker'.
Removed 7 unused modules.
Mapping positional arguments of cell kianv_soc.pll_i ($paramod\pll_icebreaker\freq=30).

9.3. Executing PROC pass (convert processes to netlists).

9.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:0$1441'.
Removing empty process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:0$1432'.
Removing empty process `$paramod\bram\WORDS=8192.$proc$bram.v:0$1402'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:0$1360'.
Cleaned up 0 empty switches.

9.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$886 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$879 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$875 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$868 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$865 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$862 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$859 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$856 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$848 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$841 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$837 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$830 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$827 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$824 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$821 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$818 in module SB_DFFSR.
Marked 2 switch rules as full_case in process $proc$spi_flash_mem.v:82$598 in module spi_flash_mem.
Marked 3 switch rules as full_case in process $proc$my_tx_uart.v:54$1433 in module $paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.
Marked 5 switch rules as full_case in process $proc$oled_sdd1331.v:98$1404 in module $paramod\oled_ssd1331\SYSTEM_CLK=30000000.
Marked 1 switch rules as full_case in process $proc$oled_sdd1331.v:70$1403 in module $paramod\oled_ssd1331\SYSTEM_CLK=30000000.
Marked 1 switch rules as full_case in process $proc$bram.v:45$1375 in module $paramod\bram\WORDS=8192.
Marked 2 switch rules as full_case in process $proc$../kianv.v:577$1345 in module $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.
Marked 3 switch rules as full_case in process $proc$../kianv.v:489$1294 in module $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.
Marked 3 switch rules as full_case in process $proc$../kianv.v:462$1272 in module $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.
Marked 2 switch rules as full_case in process $proc$../kianv.v:404$1256 in module $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.
Marked 1 switch rules as full_case in process $proc$../kianv.v:326$1217 in module $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.
Marked 9 switch rules as full_case in process $proc$kianv_soc_icebreaker.v:210$9 in module kianv_soc.
Removed a total of 0 dead cases.

9.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 66 assignments to connections.

9.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$889'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$885'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$878'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$874'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$867'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$864'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$861'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$858'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$855'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$853'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$851'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$847'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$840'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$836'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$829'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$826'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$823'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$820'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$817'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$815'.
  Set init value: \Q = 1'0
Found init rule in `\kianv_soc.$proc$kianv_soc_icebreaker.v:151$34'.
  Set init value: \reset_cnt = 16'0000000000000000
Found init rule in `\kianv_soc.$proc$kianv_soc_icebreaker.v:103$33'.
  Set init value: \pwm = 14'00000000000000

9.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$886'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$875'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$865'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$859'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$848'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$837'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$827'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$821'.

9.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$889'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$886'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$885'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$879'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$878'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$875'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$874'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$868'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$867'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$865'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$864'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$862'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$861'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$859'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$858'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$856'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$855'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$854'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$853'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$852'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$851'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$848'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$847'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$841'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$840'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$837'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$836'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$830'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$829'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$827'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$826'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$824'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$823'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$821'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$820'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$818'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$817'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$816'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$815'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$814'.
Creating decoders for process `$paramod\register_file\DEPTH=32.$proc$register_file.v:0$1619'.
Creating decoders for process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
     1/8: $0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543
     2/8: $0$memwr$\register_file0$register_file.v:49$1538_DATA[31:0]$1542
     3/8: $0$memwr$\register_file0$register_file.v:49$1538_ADDR[4:0]$1541
     4/8: $0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546
     5/8: $0$memwr$\register_file1$register_file.v:50$1539_DATA[31:0]$1545
     6/8: $0$memwr$\register_file1$register_file.v:50$1539_ADDR[4:0]$1544
     7/8: $0\rs2_reg_file[31:0]
     8/8: $0\rs1_reg_file[31:0]
Creating decoders for process `\spi_flash_mem.$proc$spi_flash_mem.v:0$606'.
Creating decoders for process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
     1/8: $0\rd_r[1:0]
     2/8: $0\rcv_buff[31:0]
     3/8: $0\shift_reg[31:0]
     4/8: $0\shift_cnt[4:0]
     5/8: $0\state[2:0]
     6/8: $0\spi_cs[0:0]
     7/8: $0\valid[0:0]
     8/8: $0\ready[0:0]
Creating decoders for process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
     1/7: $0\wait_states[24:0]
     2/7: $0\tx_data_reg[7:0]
     3/7: $0\bit_idx[2:0]
     4/7: $0\return_state[2:0]
     5/7: $0\state[2:0]
     6/7: $0\ready[0:0]
     7/7: $0\tx_out[0:0]
Creating decoders for process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
     1/12: $0\strobe_r[1:0]
     2/12: $0\setpixel_cmd_pos[6:0]
     3/12: $0\clk_div[1:0]
     4/12: $0\rom_addr[5:0]
     5/12: $0\spi_clk[0:0]
     6/12: $0\shift_reg[7:0]
     7/12: $0\shift_cnt[4:0]
     8/12: $0\state[2:0]
     9/12: $0\spi_dc[0:0]
    10/12: $0\spi_cs[0:0]
    11/12: $0\valid[0:0]
    12/12: $0\ready[0:0]
Creating decoders for process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:70$1403'.
     1/1: $1\data[7:0]
Creating decoders for process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
     1/12: $0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382
     2/12: $0$memwr$\mem$bram.v:51$1371_DATA[31:0]$1381
     3/12: $0$memwr$\mem$bram.v:51$1371_ADDR[12:0]$1380
     4/12: $0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385
     5/12: $0$memwr$\mem$bram.v:52$1372_DATA[31:0]$1384
     6/12: $0$memwr$\mem$bram.v:52$1372_ADDR[12:0]$1383
     7/12: $0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388
     8/12: $0$memwr$\mem$bram.v:53$1373_DATA[31:0]$1387
     9/12: $0$memwr$\mem$bram.v:53$1373_ADDR[12:0]$1386
    10/12: $0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391
    11/12: $0$memwr$\mem$bram.v:54$1374_DATA[31:0]$1390
    12/12: $0$memwr$\mem$bram.v:54$1374_ADDR[12:0]$1389
Creating decoders for process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
     1/13: $0\cycle_counter[63:0]
     2/13: $0\instr_reg[31:0]
     3/13: $0\div_start[0:0]
     4/13: $0\mul_start[0:0]
     5/13: $0\instr_counter[63:0]
     6/13: $0\rd_reg_file[31:0]
     7/13: $0\rd_wr[0:0]
     8/13: $0\cpu_state[6:0]
     9/13: $0\pc[31:0]
    10/13: $0\mem_din[31:0]
    11/13: $0\mem_addr[31:0]
    12/13: $0\mem_rd[0:0]
    13/13: $0\mem_wmask[3:0]
Creating decoders for process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:572$1343'.
Creating decoders for process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:515$1317'.
     1/2: $1\csr_timer_cnt_result[31:0]
     2/2: $1\is_csr_timer_cnt_error[0:0]
Creating decoders for process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:489$1294'.
     1/3: $3\rs2_load_rslt[31:0]
     2/3: $2\rs2_load_rslt[31:0]
     3/3: $1\rs2_load_rslt[31:0]
Creating decoders for process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:462$1272'.
     1/10: $3\rs2_store_rslt[31:0]
     2/10: $3\mem_wmask_store[3:0]
     3/10: $2\rs2_store_rslt[31:0] [31:16]
     4/10: $2\rs2_store_rslt[31:0] [15:0]
     5/10: $2\mem_wmask_store[3:0]
     6/10: $1\rs2_store_rslt[31:0] [31:24]
     7/10: $1\rs2_store_rslt[31:0] [23:16]
     8/10: $1\rs2_store_rslt[31:0] [15:8]
     9/10: $1\rs2_store_rslt[31:0] [7:0]
    10/10: $1\mem_wmask_store[3:0]
Creating decoders for process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
     1/6: $0\div_rslt[31:0]
     2/6: $0\div_bit[4:0]
     3/6: $0\div_valid[0:0]
     4/6: $0\div_ready[0:0]
     5/6: $0\rem_rslt[31:0]
     6/6: $0\div_state[2:0]
Creating decoders for process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
     1/7: $0\mul_state[2:0]
     2/7: $0\mul_valid[0:0]
     3/7: $0\mul_ready[0:0]
     4/7: $0\mul_bit[4:0]
     5/7: $0\rs2_mul_rslt[31:0]
     6/7: $0\rs1_mul_rslt[31:0]
     7/7: $0\mul_rslt[63:0]
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:151$34'.
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:103$33'.
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
     1/79: $6\mem_valid[0:0]
     2/79: $6\mem_ready[0:0]
     3/79: $6\oled_rgb[15:0]
     4/79: $6\oled_y_data[7:0]
     5/79: $6\oled_x_dc[7:0]
     6/79: $6\oled_setpixel_raw8tx[0:0]
     7/79: $6\oled_strobe[0:0]
     8/79: $5\mem_valid[0:0]
     9/79: $5\mem_ready[0:0]
    10/79: $5\oled_setpixel_raw8tx[0:0]
    11/79: $5\oled_strobe[0:0]
    12/79: $5\oled_rgb[15:0]
    13/79: $5\oled_y_data[7:0]
    14/79: $5\oled_x_dc[7:0]
    15/79: $5\mem_dout[31:0]
    16/79: $5\uart_tx_data[7:0]
    17/79: $5\uart_strobe[0:0]
    18/79: $4\mem_valid[0:0]
    19/79: $4\mem_ready[0:0]
    20/79: $4\mem_dout[31:0]
    21/79: $4\uart_tx_data[7:0]
    22/79: $4\uart_strobe[0:0]
    23/79: $4\oled_setpixel_raw8tx[0:0]
    24/79: $4\oled_strobe[0:0]
    25/79: $4\oled_rgb[15:0]
    26/79: $4\oled_y_data[7:0]
    27/79: $4\oled_x_dc[7:0]
    28/79: $3\mem_valid[0:0]
    29/79: $3\mem_dout[31:0]
    30/79: $3\mem_ready[0:0]
    31/79: $3\mem_spi_rd[0:0]
    32/79: $3\mem_spi_wmask[3:0]
    33/79: $3\mem_spi_addr[23:0]
    34/79: $3\mem_spi_cs[0:0]
    35/79: $3\oled_setpixel_raw8tx[0:0]
    36/79: $3\oled_strobe[0:0]
    37/79: $3\oled_rgb[15:0]
    38/79: $3\oled_y_data[7:0]
    39/79: $3\oled_x_dc[7:0]
    40/79: $3\uart_tx_data[7:0]
    41/79: $3\uart_strobe[0:0]
    42/79: $2\mem_valid[0:0]
    43/79: $2\mem_dout[31:0]
    44/79: $2\mem_ready[0:0]
    45/79: $2\mem_spram_data_in[31:0]
    46/79: $2\mem_spram_wmask[3:0]
    47/79: $2\mem_spram_addr[21:0]
    48/79: $2\oled_setpixel_raw8tx[0:0]
    49/79: $2\oled_strobe[0:0]
    50/79: $2\oled_rgb[15:0]
    51/79: $2\oled_y_data[7:0]
    52/79: $2\oled_x_dc[7:0]
    53/79: $2\mem_spi_wmask[3:0]
    54/79: $2\mem_spi_rd[0:0]
    55/79: $2\mem_spi_cs[0:0]
    56/79: $2\mem_spi_addr[23:0]
    57/79: $2\uart_tx_data[7:0]
    58/79: $2\uart_strobe[0:0]
    59/79: $1\mem_valid[0:0]
    60/79: $1\mem_dout[31:0]
    61/79: $1\mem_ready[0:0]
    62/79: $1\mem_bram_rd[0:0]
    63/79: $1\mem_bram_data_in[31:0]
    64/79: $1\mem_bram_wmask[3:0]
    65/79: $1\mem_bram_addr[31:0]
    66/79: $1\oled_setpixel_raw8tx[0:0]
    67/79: $1\oled_strobe[0:0]
    68/79: $1\oled_rgb[15:0]
    69/79: $1\oled_y_data[7:0]
    70/79: $1\oled_x_dc[7:0]
    71/79: $1\mem_spram_data_in[31:0]
    72/79: $1\mem_spram_wmask[3:0]
    73/79: $1\mem_spram_addr[21:0]
    74/79: $1\mem_spi_wmask[3:0]
    75/79: $1\mem_spi_rd[0:0]
    76/79: $1\mem_spi_cs[0:0]
    77/79: $1\mem_spi_addr[23:0]
    78/79: $1\uart_tx_data[7:0]
    79/79: $1\uart_strobe[0:0]
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:153$6'.
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:104$3'.

9.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\register_file\DEPTH=32.\i' from process `$paramod\register_file\DEPTH=32.$proc$register_file.v:0$1619'.
No latch inferred for signal `\spi_flash_mem.$func$\adjust_word$spi_flash_mem.v:69$593$\adjust_word' from process `\spi_flash_mem.$proc$spi_flash_mem.v:0$606'.
No latch inferred for signal `\spi_flash_mem.$func$\adjust_word$spi_flash_mem.v:69$594$\adjust_word' from process `\spi_flash_mem.$proc$spi_flash_mem.v:0$606'.
No latch inferred for signal `\spi_flash_mem.$func$\adjust_word$spi_flash_mem.v:69$594$\data' from process `\spi_flash_mem.$proc$spi_flash_mem.v:0$606'.
No latch inferred for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\data' from process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:70$1403'.
No latch inferred for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\instr' from process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:572$1343'.
No latch inferred for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\csr_timer_cnt_result' from process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:515$1317'.
No latch inferred for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\is_csr_timer_cnt_error' from process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:515$1317'.
No latch inferred for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\rs2_load_rslt' from process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:489$1294'.
No latch inferred for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\rs2_store_rslt' from process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:462$1272'.
No latch inferred for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mem_wmask_store' from process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:462$1272'.
No latch inferred for signal `\kianv_soc.\mem_dout' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_valid' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_ready' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_bram_wmask' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_bram_rd' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_bram_addr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_bram_data_in' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\uart_strobe' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\uart_tx_data' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_spi_addr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_spi_cs' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_spi_rd' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_spi_wmask' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_spram_addr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_spram_wmask' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\mem_spram_data_in' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\oled_x_dc' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\oled_y_data' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\oled_rgb' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\oled_strobe' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
No latch inferred for signal `\kianv_soc.\oled_setpixel_raw8tx' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.

9.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$886'.
  created $adff cell `$procdff$3225' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$879'.
  created $dff cell `$procdff$3226' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$875'.
  created $adff cell `$procdff$3227' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$868'.
  created $dff cell `$procdff$3228' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$865'.
  created $adff cell `$procdff$3229' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$862'.
  created $dff cell `$procdff$3230' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$859'.
  created $adff cell `$procdff$3231' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$856'.
  created $dff cell `$procdff$3232' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$854'.
  created $dff cell `$procdff$3233' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$852'.
  created $dff cell `$procdff$3234' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$848'.
  created $adff cell `$procdff$3235' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$841'.
  created $dff cell `$procdff$3236' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$837'.
  created $adff cell `$procdff$3237' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$830'.
  created $dff cell `$procdff$3238' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$827'.
  created $adff cell `$procdff$3239' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$824'.
  created $dff cell `$procdff$3240' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$821'.
  created $adff cell `$procdff$3241' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$818'.
  created $dff cell `$procdff$3242' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$816'.
  created $dff cell `$procdff$3243' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$814'.
  created $dff cell `$procdff$3244' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.\rs1_reg_file' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3245' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.\rs2_reg_file' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3246' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.$memwr$\register_file0$register_file.v:49$1538_ADDR' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3247' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.$memwr$\register_file0$register_file.v:49$1538_DATA' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3248' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.$memwr$\register_file0$register_file.v:49$1538_EN' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3249' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.$memwr$\register_file1$register_file.v:50$1539_ADDR' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3250' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.$memwr$\register_file1$register_file.v:50$1539_DATA' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3251' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=32.$memwr$\register_file1$register_file.v:50$1539_EN' using process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
  created $dff cell `$procdff$3252' with positive edge clock.
Creating register for signal `\spi_flash_mem.\ready' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3253' with positive edge clock.
Creating register for signal `\spi_flash_mem.\valid' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3254' with positive edge clock.
Creating register for signal `\spi_flash_mem.\spi_cs' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3255' with positive edge clock.
Creating register for signal `\spi_flash_mem.\state' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3256' with positive edge clock.
Creating register for signal `\spi_flash_mem.\shift_cnt' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3257' with positive edge clock.
Creating register for signal `\spi_flash_mem.\shift_reg' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3258' with positive edge clock.
Creating register for signal `\spi_flash_mem.\rd_r' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3259' with positive edge clock.
Creating register for signal `\spi_flash_mem.\rcv_buff' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
  created $dff cell `$procdff$3260' with positive edge clock.
Creating register for signal `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.\tx_out' using process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
  created $dff cell `$procdff$3261' with positive edge clock.
Creating register for signal `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.\ready' using process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
  created $dff cell `$procdff$3262' with positive edge clock.
Creating register for signal `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.\state' using process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
  created $dff cell `$procdff$3263' with positive edge clock.
Creating register for signal `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.\return_state' using process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
  created $dff cell `$procdff$3264' with positive edge clock.
Creating register for signal `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.\bit_idx' using process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
  created $dff cell `$procdff$3265' with positive edge clock.
Creating register for signal `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.\tx_data_reg' using process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
  created $dff cell `$procdff$3266' with positive edge clock.
Creating register for signal `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.\wait_states' using process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
  created $dff cell `$procdff$3267' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\ready' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3268' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\valid' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3269' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\spi_cs' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3270' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\spi_dc' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3271' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\state' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3272' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\shift_cnt' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3273' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\shift_reg' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3274' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\strobe_r' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3275' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\spi_clk' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3276' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\rom_addr' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3277' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\clk_div' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3278' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.\setpixel_cmd_pos' using process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
  created $dff cell `$procdff$3279' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.\out' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3280' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$mem2bits$\mem$bram.v:58$1367' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3281' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$mem2bits$\mem$bram.v:58$1368' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3282' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$mem2bits$\mem$bram.v:58$1369' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3283' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$mem2bits$\mem$bram.v:58$1370' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3284' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:51$1371_ADDR' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3285' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:51$1371_DATA' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3286' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:51$1371_EN' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3287' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:52$1372_ADDR' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3288' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:52$1372_DATA' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3289' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:52$1372_EN' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3290' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:53$1373_ADDR' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3291' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:53$1373_DATA' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3292' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:53$1373_EN' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3293' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:54$1374_ADDR' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3294' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:54$1374_DATA' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3295' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=8192.$memwr$\mem$bram.v:54$1374_EN' using process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
  created $dff cell `$procdff$3296' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mem_wmask' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3297' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mem_rd' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3298' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mem_addr' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3299' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mem_din' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3300' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\pc' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3301' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\cpu_state' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3302' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\rd_wr' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3303' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\rd_reg_file' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3304' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\cycle_counter' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3305' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\instr_counter' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3306' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mul_start' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3307' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\div_start' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3308' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\instr_reg' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
  created $dff cell `$procdff$3309' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\div_state' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
  created $dff cell `$procdff$3310' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\rem_rslt' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
  created $dff cell `$procdff$3311' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\div_ready' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
  created $dff cell `$procdff$3312' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\div_valid' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
  created $dff cell `$procdff$3313' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\div_bit' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
  created $dff cell `$procdff$3314' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\div_rslt' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
  created $dff cell `$procdff$3315' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mul_rslt' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
  created $dff cell `$procdff$3316' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\rs1_mul_rslt' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
  created $dff cell `$procdff$3317' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\rs2_mul_rslt' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
  created $dff cell `$procdff$3318' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mul_bit' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
  created $dff cell `$procdff$3319' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mul_ready' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
  created $dff cell `$procdff$3320' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mul_valid' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
  created $dff cell `$procdff$3321' with positive edge clock.
Creating register for signal `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.\mul_state' using process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
  created $dff cell `$procdff$3322' with positive edge clock.
Creating register for signal `\kianv_soc.\reset_cnt' using process `\kianv_soc.$proc$kianv_soc_icebreaker.v:153$6'.
  created $dff cell `$procdff$3323' with positive edge clock.
Creating register for signal `\kianv_soc.\pwm' using process `\kianv_soc.$proc$kianv_soc_icebreaker.v:104$3'.
  created $dff cell `$procdff$3324' with positive edge clock.

9.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$889'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$886'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$886'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$885'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$879'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$879'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$878'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$875'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$875'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$874'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$868'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$868'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$867'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$865'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$864'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$862'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$862'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$861'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$859'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$858'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$856'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$856'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$855'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$854'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$854'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$853'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$852'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$851'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$848'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$848'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$847'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$841'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$841'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$840'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$837'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$837'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$836'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$830'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$830'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$829'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$827'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$826'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$824'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$824'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$823'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$821'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$820'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$818'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$818'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$817'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$816'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$816'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$815'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$814'.
Removing empty process `$paramod\register_file\DEPTH=32.$proc$register_file.v:0$1619'.
Found and cleaned up 3 empty switches in `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
Removing empty process `$paramod\register_file\DEPTH=32.$proc$register_file.v:46$1540'.
Removing empty process `spi_flash_mem.$proc$spi_flash_mem.v:0$606'.
Found and cleaned up 5 empty switches in `\spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
Removing empty process `spi_flash_mem.$proc$spi_flash_mem.v:82$598'.
Found and cleaned up 4 empty switches in `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
Removing empty process `$paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.$proc$my_tx_uart.v:54$1433'.
Found and cleaned up 12 empty switches in `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
Removing empty process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:98$1404'.
Found and cleaned up 1 empty switch in `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:70$1403'.
Removing empty process `$paramod\oled_ssd1331\SYSTEM_CLK=30000000.$proc$oled_sdd1331.v:70$1403'.
Found and cleaned up 6 empty switches in `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
Removing empty process `$paramod\bram\WORDS=8192.$proc$bram.v:45$1375'.
Found and cleaned up 11 empty switches in `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:577$1345'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:572$1343'.
Found and cleaned up 1 empty switch in `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:515$1317'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:515$1317'.
Found and cleaned up 3 empty switches in `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:489$1294'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:489$1294'.
Found and cleaned up 3 empty switches in `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:462$1272'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:462$1272'.
Found and cleaned up 5 empty switches in `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:404$1256'.
Found and cleaned up 4 empty switches in `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
Removing empty process `$paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.$proc$../kianv.v:326$1217'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:151$34'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:103$33'.
Found and cleaned up 9 empty switches in `\kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:210$9'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:153$6'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:104$3'.
Cleaned up 85 empty switches.

9.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\register_file\DEPTH=32.
Deleting now unused module $paramod\pll_icebreaker\freq=30.
Deleting now unused module spi_flash_mem.
Deleting now unused module $paramod\my_tx_uart\SYSTEM_CLK=30000000\BAUDRATE=115200.
Deleting now unused module $paramod\oled_ssd1331\SYSTEM_CLK=30000000.
Deleting now unused module $paramod\bram\WORDS=8192.
Deleting now unused module $paramod\ice40up5k_spram\WORDS=32768.
Deleting now unused module $paramod\kianv\rv32e=1'0\rv32m=1'1\reset_addr=537919488.
<suppressed ~8 debug messages>

9.5. Executing TRIBUF pass.

9.6. Executing DEMINOUT pass (demote inout ports to input or output).

9.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~179 debug messages>

9.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 31 unused cells and 903 unused wires.
<suppressed ~59 debug messages>

9.9. Executing CHECK pass (checking for obvious problems).
Checking module kianv_soc...
Found and reported 0 problems.

9.10. Executing OPT pass (performing simple optimizations).

9.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

9.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2274: \kianv_i.cpu_state -> 7'1000000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2278: \kianv_i.cpu_state -> 7'0100000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2282: \kianv_i.cpu_state -> 7'0010000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2295: \kianv_i.cpu_state -> 7'0001000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2288: \kianv_i.cpu_state -> 7'0001000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2292: \kianv_i.cpu_state -> 7'0001000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2300: \kianv_i.cpu_state -> 7'0000001
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2456: \kianv_i.rem_rslt_sub_divident -> { 1'0 \kianv_i.rem_rslt_sub_divident [30:0] }
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2465: \kianv_i.div_state -> 3'000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2467: \kianv_i.div_state -> 3'010
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2470: \kianv_i.div_state -> 3'001
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2476: \kianv_i.mul_state -> 3'000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2478: \kianv_i.mul_state -> 3'010
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2481: \kianv_i.mul_state -> 3'001
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\kianv_i.$ternary$../kianv.v:504$1313.
    dead port 1/2 on $mux $procmux$2542.
    dead port 1/2 on $mux $procmux$2545.
    dead port 1/2 on $mux $procmux$2548.
    dead port 1/2 on $mux $procmux$2551.
    dead port 1/2 on $mux $procmux$2554.
    dead port 1/2 on $mux $procmux$2560.
    dead port 1/2 on $mux $procmux$2563.
    dead port 1/2 on $mux $procmux$2566.
    dead port 1/2 on $mux $procmux$2569.
    dead port 1/2 on $mux $procmux$2572.
    dead port 2/2 on $mux $procmux$2578.
    dead port 1/2 on $mux $procmux$2581.
    dead port 1/2 on $mux $procmux$2584.
    dead port 1/2 on $mux $procmux$2587.
    dead port 1/2 on $mux $procmux$2590.
    dead port 2/2 on $mux $procmux$2596.
    dead port 1/2 on $mux $procmux$2599.
    dead port 1/2 on $mux $procmux$2602.
    dead port 1/2 on $mux $procmux$2605.
    dead port 1/2 on $mux $procmux$2608.
    dead port 2/2 on $mux $procmux$2614.
    dead port 1/2 on $mux $procmux$2617.
    dead port 1/2 on $mux $procmux$2620.
    dead port 1/2 on $mux $procmux$2623.
    dead port 1/2 on $mux $procmux$2626.
    dead port 2/2 on $mux $procmux$2632.
    dead port 1/2 on $mux $procmux$2635.
    dead port 1/2 on $mux $procmux$2638.
    dead port 1/2 on $mux $procmux$2641.
    dead port 1/2 on $mux $procmux$2644.
    dead port 2/2 on $mux $procmux$2650.
    dead port 1/2 on $mux $procmux$2653.
    dead port 1/2 on $mux $procmux$2656.
    dead port 1/2 on $mux $procmux$2659.
    dead port 1/2 on $mux $procmux$2662.
    dead port 1/2 on $mux $procmux$2668.
    dead port 1/2 on $mux $procmux$2671.
    dead port 1/2 on $mux $procmux$2674.
    dead port 1/2 on $mux $procmux$2677.
    dead port 1/2 on $mux $procmux$2683.
    dead port 1/2 on $mux $procmux$2686.
    dead port 1/2 on $mux $procmux$2689.
    dead port 1/2 on $mux $procmux$2692.
    dead port 1/2 on $mux $procmux$2698.
    dead port 1/2 on $mux $procmux$2701.
    dead port 1/2 on $mux $procmux$2704.
    dead port 1/2 on $mux $procmux$2707.
    dead port 1/2 on $mux $procmux$2713.
    dead port 1/2 on $mux $procmux$2716.
    dead port 1/2 on $mux $procmux$2719.
    dead port 1/2 on $mux $procmux$2722.
    dead port 1/2 on $mux $procmux$2728.
    dead port 1/2 on $mux $procmux$2731.
    dead port 1/2 on $mux $procmux$2734.
    dead port 1/2 on $mux $procmux$2737.
    dead port 1/2 on $mux $procmux$2743.
    dead port 1/2 on $mux $procmux$2746.
    dead port 1/2 on $mux $procmux$2749.
    dead port 1/2 on $mux $procmux$2752.
    dead port 1/2 on $mux $procmux$2758.
    dead port 1/2 on $mux $procmux$2761.
    dead port 1/2 on $mux $procmux$2764.
    dead port 1/2 on $mux $procmux$2767.
    dead port 2/2 on $mux $procmux$2773.
    dead port 1/2 on $mux $procmux$2776.
    dead port 1/2 on $mux $procmux$2779.
    dead port 1/2 on $mux $procmux$2782.
    dead port 2/2 on $mux $procmux$2788.
    dead port 1/2 on $mux $procmux$2791.
    dead port 1/2 on $mux $procmux$2794.
    dead port 1/2 on $mux $procmux$2797.
    dead port 2/2 on $mux $procmux$2803.
    dead port 1/2 on $mux $procmux$2806.
    dead port 1/2 on $mux $procmux$2809.
    dead port 1/2 on $mux $procmux$2812.
    dead port 1/2 on $mux $procmux$2818.
    dead port 1/2 on $mux $procmux$2821.
    dead port 1/2 on $mux $procmux$2824.
    dead port 1/2 on $mux $procmux$2830.
    dead port 1/2 on $mux $procmux$2833.
    dead port 1/2 on $mux $procmux$2836.
    dead port 1/2 on $mux $procmux$2842.
    dead port 1/2 on $mux $procmux$2845.
    dead port 1/2 on $mux $procmux$2848.
    dead port 1/2 on $mux $procmux$2854.
    dead port 1/2 on $mux $procmux$2857.
    dead port 1/2 on $mux $procmux$2860.
    dead port 1/2 on $mux $procmux$2866.
    dead port 1/2 on $mux $procmux$2869.
    dead port 1/2 on $mux $procmux$2872.
    dead port 1/2 on $mux $procmux$2878.
    dead port 1/2 on $mux $procmux$2881.
    dead port 1/2 on $mux $procmux$2884.
    dead port 1/2 on $mux $procmux$2890.
    dead port 1/2 on $mux $procmux$2893.
    dead port 1/2 on $mux $procmux$2896.
    dead port 1/2 on $mux $procmux$2902.
    dead port 1/2 on $mux $procmux$2905.
    dead port 1/2 on $mux $procmux$2908.
    dead port 1/2 on $mux $procmux$2914.
    dead port 1/2 on $mux $procmux$2917.
    dead port 1/2 on $mux $procmux$2920.
    dead port 1/2 on $mux $procmux$2926.
    dead port 1/2 on $mux $procmux$2929.
    dead port 1/2 on $mux $procmux$2932.
    dead port 1/2 on $mux $procmux$2938.
    dead port 1/2 on $mux $procmux$2941.
    dead port 1/2 on $mux $procmux$2947.
    dead port 1/2 on $mux $procmux$2950.
    dead port 1/2 on $mux $procmux$2956.
    dead port 1/2 on $mux $procmux$2959.
    dead port 1/2 on $mux $procmux$2965.
    dead port 1/2 on $mux $procmux$2968.
    dead port 1/2 on $mux $procmux$2983.
    dead port 1/2 on $mux $procmux$2986.
    dead port 1/2 on $mux $procmux$2992.
    dead port 1/2 on $mux $procmux$2995.
    dead port 1/2 on $mux $procmux$3001.
    dead port 1/2 on $mux $procmux$3004.
    dead port 1/2 on $mux $procmux$3010.
    dead port 1/2 on $mux $procmux$3013.
    dead port 1/2 on $mux $procmux$3019.
    dead port 1/2 on $mux $procmux$3022.
    dead port 1/2 on $mux $procmux$3028.
    dead port 1/2 on $mux $procmux$3031.
    dead port 1/2 on $mux $procmux$3037.
    dead port 1/2 on $mux $procmux$3040.
    dead port 1/2 on $mux $procmux$3046.
    dead port 1/2 on $mux $procmux$3049.
    dead port 1/2 on $mux $procmux$3055.
    dead port 1/2 on $mux $procmux$3058.
    dead port 1/2 on $mux $procmux$3064.
    dead port 1/2 on $mux $procmux$3070.
    dead port 1/2 on $mux $procmux$3076.
    dead port 1/2 on $mux $procmux$3082.
    dead port 1/2 on $mux $procmux$3088.
    dead port 1/2 on $mux $procmux$3094.
    dead port 1/2 on $mux $procmux$3100.
    dead port 1/2 on $mux $procmux$3106.
    dead port 1/2 on $mux $procmux$3112.
    dead port 1/2 on $mux $procmux$3118.
    dead port 1/2 on $mux $procmux$3124.
    dead port 1/2 on $mux $procmux$3136.
    dead port 1/2 on $mux $procmux$3142.
    dead port 1/2 on $mux $procmux$3148.
    dead port 1/2 on $mux $procmux$3154.
    dead port 1/2 on $mux $procmux$3160.
Removed 148 multiplexer ports.
<suppressed ~97 debug messages>

9.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New ctrl vector for $pmux cell $flatten\kianv_i.$procmux$2340: { \kianv_i.cpu_state [0] $auto$opt_reduce.cc:134:opt_mux$3326 \kianv_i.cpu_state [4] \kianv_i.cpu_state [5] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.\register_file_i.$procmux$1664:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543
      New ports: A=1'0, B=1'1, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0]
      New connections: $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [31:1] = { $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$1538_EN[31:0]$1543 [0] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.\register_file_i.$procmux$1670:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546
      New ports: A=1'0, B=1'1, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0]
      New connections: $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [31:1] = { $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$1539_EN[31:0]$1546 [0] }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2108:
      Old ports: A=0, B=255, Y=$flatten\bram_i.$procmux$2108_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$2108_Y [0]
      New connections: $flatten\bram_i.$procmux$2108_Y [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$procmux$2108_Y [0] $flatten\bram_i.$procmux$2108_Y [0] $flatten\bram_i.$procmux$2108_Y [0] $flatten\bram_i.$procmux$2108_Y [0] $flatten\bram_i.$procmux$2108_Y [0] $flatten\bram_i.$procmux$2108_Y [0] $flatten\bram_i.$procmux$2108_Y [0] }
    New ctrl vector for $pmux cell $flatten\my_tx_uart_i.$procmux$1801: { $flatten\my_tx_uart_i.$procmux$1762_CMP $auto$opt_reduce.cc:134:opt_mux$3328 $flatten\my_tx_uart_i.$procmux$1756_CMP }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2129:
      Old ports: A=0, B=65280, Y=$flatten\bram_i.$procmux$2129_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$2129_Y [8]
      New connections: { $flatten\bram_i.$procmux$2129_Y [31:9] $flatten\bram_i.$procmux$2129_Y [7:0] } = { 16'0000000000000000 $flatten\bram_i.$procmux$2129_Y [8] $flatten\bram_i.$procmux$2129_Y [8] $flatten\bram_i.$procmux$2129_Y [8] $flatten\bram_i.$procmux$2129_Y [8] $flatten\bram_i.$procmux$2129_Y [8] $flatten\bram_i.$procmux$2129_Y [8] $flatten\bram_i.$procmux$2129_Y [8] 8'00000000 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1855: { $flatten\oled_ssd1331_i.$procmux$1850_CMP $flatten\oled_ssd1331_i.$procmux$1844_CMP $flatten\oled_ssd1331_i.$procmux$1860_CMP $auto$opt_reduce.cc:134:opt_mux$3330 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2150:
      Old ports: A=0, B=16711680, Y=$flatten\bram_i.$procmux$2150_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$2150_Y [16]
      New connections: { $flatten\bram_i.$procmux$2150_Y [31:17] $flatten\bram_i.$procmux$2150_Y [15:0] } = { 8'00000000 $flatten\bram_i.$procmux$2150_Y [16] $flatten\bram_i.$procmux$2150_Y [16] $flatten\bram_i.$procmux$2150_Y [16] $flatten\bram_i.$procmux$2150_Y [16] $flatten\bram_i.$procmux$2150_Y [16] $flatten\bram_i.$procmux$2150_Y [16] $flatten\bram_i.$procmux$2150_Y [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2171:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$flatten\bram_i.$procmux$2171_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$2171_Y [24]
      New connections: { $flatten\bram_i.$procmux$2171_Y [31:25] $flatten\bram_i.$procmux$2171_Y [23:0] } = { $flatten\bram_i.$procmux$2171_Y [24] $flatten\bram_i.$procmux$2171_Y [24] $flatten\bram_i.$procmux$2171_Y [24] $flatten\bram_i.$procmux$2171_Y [24] $flatten\bram_i.$procmux$2171_Y [24] $flatten\bram_i.$procmux$2171_Y [24] $flatten\bram_i.$procmux$2171_Y [24] 24'000000000000000000000000 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$2062: { $flatten\oled_ssd1331_i.$procmux$2107_CMP $flatten\oled_ssd1331_i.$procmux$2106_CMP $flatten\oled_ssd1331_i.$procmux$2105_CMP $flatten\oled_ssd1331_i.$procmux$2104_CMP $flatten\oled_ssd1331_i.$procmux$2103_CMP $flatten\oled_ssd1331_i.$procmux$2102_CMP $flatten\oled_ssd1331_i.$procmux$2100_CMP $flatten\oled_ssd1331_i.$procmux$2098_CMP $flatten\oled_ssd1331_i.$procmux$2097_CMP $flatten\oled_ssd1331_i.$procmux$2095_CMP $flatten\oled_ssd1331_i.$procmux$2094_CMP $flatten\oled_ssd1331_i.$procmux$2093_CMP $flatten\oled_ssd1331_i.$procmux$2092_CMP $flatten\oled_ssd1331_i.$procmux$2091_CMP $flatten\oled_ssd1331_i.$procmux$2090_CMP $flatten\oled_ssd1331_i.$procmux$2089_CMP $flatten\oled_ssd1331_i.$procmux$2088_CMP $flatten\oled_ssd1331_i.$procmux$2087_CMP $flatten\oled_ssd1331_i.$procmux$2085_CMP $flatten\oled_ssd1331_i.$procmux$2084_CMP $flatten\oled_ssd1331_i.$procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$3336 $flatten\oled_ssd1331_i.$procmux$2081_CMP $flatten\oled_ssd1331_i.$procmux$2080_CMP $flatten\oled_ssd1331_i.$procmux$2079_CMP $flatten\oled_ssd1331_i.$procmux$2078_CMP $flatten\oled_ssd1331_i.$procmux$2077_CMP $flatten\oled_ssd1331_i.$procmux$2076_CMP $flatten\oled_ssd1331_i.$procmux$2075_CMP $flatten\oled_ssd1331_i.$procmux$2074_CMP $flatten\oled_ssd1331_i.$procmux$2073_CMP $flatten\oled_ssd1331_i.$procmux$2072_CMP $flatten\oled_ssd1331_i.$procmux$2071_CMP $flatten\oled_ssd1331_i.$procmux$2070_CMP $flatten\oled_ssd1331_i.$procmux$2069_CMP $flatten\oled_ssd1331_i.$procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$3334 $flatten\oled_ssd1331_i.$procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$3332 $flatten\oled_ssd1331_i.$procmux$2063_CMP }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2110:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2108_Y, Y=$flatten\bram_i.$procmux$2110_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2108_Y [0], Y=$flatten\bram_i.$procmux$2110_Y [0]
      New connections: $flatten\bram_i.$procmux$2110_Y [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$procmux$2110_Y [0] $flatten\bram_i.$procmux$2110_Y [0] $flatten\bram_i.$procmux$2110_Y [0] $flatten\bram_i.$procmux$2110_Y [0] $flatten\bram_i.$procmux$2110_Y [0] $flatten\bram_i.$procmux$2110_Y [0] $flatten\bram_i.$procmux$2110_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2131:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2129_Y, Y=$flatten\bram_i.$procmux$2131_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2129_Y [8], Y=$flatten\bram_i.$procmux$2131_Y [8]
      New connections: { $flatten\bram_i.$procmux$2131_Y [31:9] $flatten\bram_i.$procmux$2131_Y [7:0] } = { 16'0000000000000000 $flatten\bram_i.$procmux$2131_Y [8] $flatten\bram_i.$procmux$2131_Y [8] $flatten\bram_i.$procmux$2131_Y [8] $flatten\bram_i.$procmux$2131_Y [8] $flatten\bram_i.$procmux$2131_Y [8] $flatten\bram_i.$procmux$2131_Y [8] $flatten\bram_i.$procmux$2131_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2152:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2150_Y, Y=$flatten\bram_i.$procmux$2152_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2150_Y [16], Y=$flatten\bram_i.$procmux$2152_Y [16]
      New connections: { $flatten\bram_i.$procmux$2152_Y [31:17] $flatten\bram_i.$procmux$2152_Y [15:0] } = { 8'00000000 $flatten\bram_i.$procmux$2152_Y [16] $flatten\bram_i.$procmux$2152_Y [16] $flatten\bram_i.$procmux$2152_Y [16] $flatten\bram_i.$procmux$2152_Y [16] $flatten\bram_i.$procmux$2152_Y [16] $flatten\bram_i.$procmux$2152_Y [16] $flatten\bram_i.$procmux$2152_Y [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2173:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2171_Y, Y=$flatten\bram_i.$procmux$2173_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2171_Y [24], Y=$flatten\bram_i.$procmux$2173_Y [24]
      New connections: { $flatten\bram_i.$procmux$2173_Y [31:25] $flatten\bram_i.$procmux$2173_Y [23:0] } = { $flatten\bram_i.$procmux$2173_Y [24] $flatten\bram_i.$procmux$2173_Y [24] $flatten\bram_i.$procmux$2173_Y [24] $flatten\bram_i.$procmux$2173_Y [24] $flatten\bram_i.$procmux$2173_Y [24] $flatten\bram_i.$procmux$2173_Y [24] $flatten\bram_i.$procmux$2173_Y [24] 24'000000000000000000000000 }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2113:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2110_Y, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2110_Y [0], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0]
      New connections: $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382 [0] }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2134:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2131_Y, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2131_Y [8], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [31:9] $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [7:0] } = { 16'0000000000000000 $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2155:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2152_Y, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2152_Y [16], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [31:17] $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [15:0] } = { 8'00000000 $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$2176:
      Old ports: A=0, B=$flatten\bram_i.$procmux$2173_Y, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391
      New ports: A=1'0, B=$flatten\bram_i.$procmux$2173_Y [24], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [31:25] $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [23:0] } = { $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_EN[31:0]$1391 [24] 24'000000000000000000000000 }
  Optimizing cells in module \kianv_soc.
Performed a total of 18 changes.

9.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

9.10.6. Executing OPT_DFF pass (perform DFF optimizations).

9.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 254 unused wires.
<suppressed ~1 debug messages>

9.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.10.9. Rerunning OPT passes. (Maybe there is more to do..)

9.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

9.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1890: { $flatten\oled_ssd1331_i.$procmux$1860_CMP $auto$opt_reduce.cc:134:opt_mux$3338 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1907: { $flatten\oled_ssd1331_i.$procmux$1850_CMP $flatten\oled_ssd1331_i.$procmux$1844_CMP $flatten\oled_ssd1331_i.$procmux$1860_CMP $auto$opt_reduce.cc:134:opt_mux$3340 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1936: { $flatten\oled_ssd1331_i.$procmux$1850_CMP $flatten\oled_ssd1331_i.$procmux$1844_CMP $flatten\oled_ssd1331_i.$procmux$1860_CMP $auto$opt_reduce.cc:134:opt_mux$3342 }
  Optimizing cells in module \kianv_soc.
Performed a total of 3 changes.

9.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.10.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 1 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 2 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 3 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 4 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 5 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 6 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 7 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 8 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 9 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 10 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 11 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 12 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 13 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 14 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 15 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 16 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 17 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 18 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 19 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 20 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 21 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 22 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 23 on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc.
Setting constant 0-bit at position 0 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 1 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 2 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 3 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 4 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 5 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 6 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 7 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 8 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 9 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 10 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 11 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 12 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 13 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 14 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 15 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 24 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 25 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 26 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 27 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 28 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 29 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 30 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 31 on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc.
Setting constant 0-bit at position 0 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 1 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 2 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 3 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 4 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 5 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 6 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 7 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 16 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 17 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 18 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 19 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 20 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 21 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 22 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 23 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 24 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 25 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 26 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 27 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 28 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 29 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 30 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 31 on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc.
Setting constant 0-bit at position 8 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 9 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 10 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 11 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 12 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 13 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 14 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 15 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 16 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 17 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 18 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 19 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 20 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 21 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 22 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 23 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 24 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 25 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 26 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 27 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 28 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 29 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 30 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.
Setting constant 0-bit at position 31 on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc.

9.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

9.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.10.16. Rerunning OPT passes. (Maybe there is more to do..)

9.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

9.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.10.20. Executing OPT_DFF pass (perform DFF optimizations).

9.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.10.23. Finished OPT passes. (There is nothing left to do.)

9.11. Executing FSM pass (extract and optimize FSM).

9.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking kianv_soc.$flatten\kianv_i.\register_file_i.$memwr$\register_file0$register_file.v:49$1538_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking kianv_soc.kianv_i.cpu_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking kianv_soc.kianv_i.div_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking kianv_soc.kianv_i.mul_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking kianv_soc.my_tx_uart_i.return_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register kianv_soc.oled_ssd1331_i.state.
Found FSM state register kianv_soc.spi_flash_mem_i.state.

9.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\oled_ssd1331_i.state' from module `\kianv_soc'.
  found $dff cell for state register: $flatten\oled_ssd1331_i.$procdff$3272
  root of input selection tree: $flatten\oled_ssd1331_i.$0\state[2:0]
  found reset state: 3'011 (guessed from mux tree)
  found ctrl input: \resetn
  found state code: 3'011
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1856_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1860_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1861_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1844_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1850_CMP
  found state code: 3'000
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1881_CMP
  found ctrl input: \oled_ssd1331_i.spi_clk
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$1422_Y
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:176$1425_Y
  found state code: 3'100
  found ctrl input: \oled_ssd1331_i.setpixel_raw8tx
  found state code: 3'001
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:147$1411_Y
  found state code: 3'010
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$1409_Y
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1861_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1860_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1856_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1850_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1844_CMP
  ctrl inputs: { \oled_ssd1331_i.setpixel_raw8tx \oled_ssd1331_i.spi_clk $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$1409_Y $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:147$1411_Y $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$1422_Y $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:176$1425_Y $flatten\oled_ssd1331_i.$procmux$1881_CMP \resetn }
  ctrl outputs: { $flatten\oled_ssd1331_i.$0\state[2:0] $flatten\oled_ssd1331_i.$procmux$1844_CMP $flatten\oled_ssd1331_i.$procmux$1850_CMP $flatten\oled_ssd1331_i.$procmux$1856_CMP $flatten\oled_ssd1331_i.$procmux$1860_CMP $flatten\oled_ssd1331_i.$procmux$1861_CMP }
  transition:      3'000 8'-------0 ->      3'011 8'01101000
  transition:      3'000 8'--0----1 ->      3'000 8'00001000
  transition:      3'000 8'0-1----1 ->      3'010 8'01001000
  transition:      3'000 8'1-1----1 ->      3'001 8'00101000
  transition:      3'100 8'-------0 ->      3'011 8'01100100
  transition:      3'100 8'------01 ->      3'100 8'10000100
  transition:      3'100 8'-0----11 ->      3'100 8'10000100
  transition:      3'100 8'-1--0-11 ->      3'100 8'10000100
  transition:      3'100 8'-1--1-11 ->      3'011 8'01100100
  transition:      3'010 8'-------0 ->      3'011 8'01100001
  transition:      3'010 8'------01 ->      3'010 8'01000001
  transition:      3'010 8'-0----11 ->      3'010 8'01000001
  transition:      3'010 8'-1--0-11 ->      3'010 8'01000001
  transition:      3'010 8'01--1-11 ->      3'000 8'00000001
  transition:      3'010 8'11--1-11 ->      3'001 8'00100001
  transition:      3'001 8'-------0 ->      3'011 8'01110000
  transition:      3'001 8'---0---1 ->      3'010 8'01010000
  transition:      3'001 8'---1---1 ->      3'000 8'00010000
  transition:      3'011 8'-------0 ->      3'011 8'01100010
  transition:      3'011 8'-----0-1 ->      3'100 8'10000010
  transition:      3'011 8'-----1-1 ->      3'000 8'00000010
Extracting FSM `\spi_flash_mem_i.state' from module `\kianv_soc'.
  found $dff cell for state register: $flatten\spi_flash_mem_i.$procdff$3256
  root of input selection tree: $flatten\spi_flash_mem_i.$0\state[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \resetn
  found state code: 3'000
  found ctrl input: $flatten\spi_flash_mem_i.$procmux$1685_CMP
  found ctrl input: $flatten\spi_flash_mem_i.$procmux$1692_CMP
  found ctrl input: $flatten\spi_flash_mem_i.$procmux$1695_CMP
  found ctrl input: $flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:117$603_Y
  found state code: 3'010
  found ctrl input: $flatten\spi_flash_mem_i.$logic_and$spi_flash_mem.v:104$601_Y
  found state code: 3'001
  found ctrl output: $flatten\spi_flash_mem_i.$procmux$1695_CMP
  found ctrl output: $flatten\spi_flash_mem_i.$procmux$1692_CMP
  found ctrl output: $flatten\spi_flash_mem_i.$procmux$1685_CMP
  ctrl inputs: { $flatten\spi_flash_mem_i.$logic_and$spi_flash_mem.v:104$601_Y $flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:117$603_Y \resetn }
  ctrl outputs: { $flatten\spi_flash_mem_i.$0\state[2:0] $flatten\spi_flash_mem_i.$procmux$1685_CMP $flatten\spi_flash_mem_i.$procmux$1692_CMP $flatten\spi_flash_mem_i.$procmux$1695_CMP }
  transition:      3'000 3'--0 ->      3'000 6'000001
  transition:      3'000 3'0-1 ->      3'000 6'000001
  transition:      3'000 3'1-1 ->      3'001 6'001001
  transition:      3'010 3'--0 ->      3'000 6'000100
  transition:      3'010 3'-01 ->      3'010 6'010100
  transition:      3'010 3'-11 ->      3'000 6'000100
  transition:      3'001 3'--0 ->      3'000 6'000010
  transition:      3'001 3'-01 ->      3'001 6'001010
  transition:      3'001 3'-11 ->      3'010 6'010010

9.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\spi_flash_mem_i.state$3350' from module `\kianv_soc'.
Optimizing FSM `$fsm$\oled_ssd1331_i.state$3343' from module `\kianv_soc'.

9.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 28 unused cells and 28 unused wires.
<suppressed ~29 debug messages>

9.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\oled_ssd1331_i.state$3343' from module `\kianv_soc'.
  Removing unused output signal $flatten\oled_ssd1331_i.$0\state[2:0] [0].
  Removing unused output signal $flatten\oled_ssd1331_i.$0\state[2:0] [1].
  Removing unused output signal $flatten\oled_ssd1331_i.$0\state[2:0] [2].
Optimizing FSM `$fsm$\spi_flash_mem_i.state$3350' from module `\kianv_soc'.
  Removing unused output signal $flatten\spi_flash_mem_i.$0\state[2:0] [0].
  Removing unused output signal $flatten\spi_flash_mem_i.$0\state[2:0] [1].
  Removing unused output signal $flatten\spi_flash_mem_i.$0\state[2:0] [2].

9.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\oled_ssd1331_i.state$3343' from module `\kianv_soc' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ---1-
  100 -> --1--
  010 -> -1---
  001 -> 1----
  011 -> ----1
Recoding FSM `$fsm$\spi_flash_mem_i.state$3350' from module `\kianv_soc' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> --1
  010 -> -1-
  001 -> 1--

9.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\oled_ssd1331_i.state$3343' from module `kianv_soc':
-------------------------------------

  Information on FSM $fsm$\oled_ssd1331_i.state$3343 (\oled_ssd1331_i.state):

  Number of input signals:    8
  Number of output signals:   5
  Number of state bits:       5

  Input signals:
    0: \resetn
    1: $flatten\oled_ssd1331_i.$procmux$1881_CMP
    2: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:176$1425_Y
    3: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$1422_Y
    4: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:147$1411_Y
    5: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$1409_Y
    6: \oled_ssd1331_i.spi_clk
    7: \oled_ssd1331_i.setpixel_raw8tx

  Output signals:
    0: $flatten\oled_ssd1331_i.$procmux$1861_CMP
    1: $flatten\oled_ssd1331_i.$procmux$1860_CMP
    2: $flatten\oled_ssd1331_i.$procmux$1856_CMP
    3: $flatten\oled_ssd1331_i.$procmux$1850_CMP
    4: $flatten\oled_ssd1331_i.$procmux$1844_CMP

  State encoding:
    0:    5'---1-
    1:    5'--1--
    2:    5'-1---
    3:    5'1----
    4:    5'----1  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'--0----1   ->     0 5'01000
      1:     0 8'0-1----1   ->     2 5'01000
      2:     0 8'1-1----1   ->     3 5'01000
      3:     0 8'-------0   ->     4 5'01000
      4:     1 8'------01   ->     1 5'00100
      5:     1 8'-1--0-11   ->     1 5'00100
      6:     1 8'-0----11   ->     1 5'00100
      7:     1 8'-------0   ->     4 5'00100
      8:     1 8'-1--1-11   ->     4 5'00100
      9:     2 8'01--1-11   ->     0 5'00001
     10:     2 8'------01   ->     2 5'00001
     11:     2 8'-1--0-11   ->     2 5'00001
     12:     2 8'-0----11   ->     2 5'00001
     13:     2 8'11--1-11   ->     3 5'00001
     14:     2 8'-------0   ->     4 5'00001
     15:     3 8'---1---1   ->     0 5'10000
     16:     3 8'---0---1   ->     2 5'10000
     17:     3 8'-------0   ->     4 5'10000
     18:     4 8'-----1-1   ->     0 5'00010
     19:     4 8'-----0-1   ->     1 5'00010
     20:     4 8'-------0   ->     4 5'00010

-------------------------------------

FSM `$fsm$\spi_flash_mem_i.state$3350' from module `kianv_soc':
-------------------------------------

  Information on FSM $fsm$\spi_flash_mem_i.state$3350 (\spi_flash_mem_i.state):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: $flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:117$603_Y
    2: $flatten\spi_flash_mem_i.$logic_and$spi_flash_mem.v:104$601_Y

  Output signals:
    0: $flatten\spi_flash_mem_i.$procmux$1695_CMP
    1: $flatten\spi_flash_mem_i.$procmux$1692_CMP
    2: $flatten\spi_flash_mem_i.$procmux$1685_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 3'001
      1:     0 3'0-1   ->     0 3'001
      2:     0 3'1-1   ->     2 3'001
      3:     1 3'--0   ->     0 3'100
      4:     1 3'-11   ->     0 3'100
      5:     1 3'-01   ->     1 3'100
      6:     2 3'--0   ->     0 3'010
      7:     2 3'-11   ->     1 3'010
      8:     2 3'-01   ->     2 3'010

-------------------------------------

9.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\oled_ssd1331_i.state$3343' from module `\kianv_soc'.
Mapping FSM `$fsm$\spi_flash_mem_i.state$3350' from module `\kianv_soc'.

9.12. Executing OPT pass (performing simple optimizations).

9.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~2 debug messages>

9.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

9.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

9.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3260 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1684_Y, Q = \spi_flash_mem_i.rcv_buff, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$3463 ($sdff) from module kianv_soc (D = { \spi_flash_mem_i.rcv_buff [30:0] \spi_mem_flash_miso }, Q = \spi_flash_mem_i.rcv_buff).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3259 ($dff) from module kianv_soc (D = \spi_flash_mem_i.rd_r [0], Q = \spi_flash_mem_i.rd_r [1], rval = 1'0).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3259 ($dff) from module kianv_soc (D = \kianv_i.mem_rd, Q = \spi_flash_mem_i.rd_r [0], rval = 1'0).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3258 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1691_Y, Q = \spi_flash_mem_i.shift_reg, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$3473 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1691_Y, Q = \spi_flash_mem_i.shift_reg).
Adding EN signal on $flatten\spi_flash_mem_i.$procdff$3257 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1700_Y, Q = \spi_flash_mem_i.shift_cnt).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3255 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1730_Y, Q = \spi_flash_mem_i.spi_cs, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$3488 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1728_Y, Q = \spi_flash_mem_i.spi_cs).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3254 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1738_Y, Q = \spi_flash_mem_i.valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3490 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1738_Y, Q = \spi_flash_mem_i.valid).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3253 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1749_Y, Q = \spi_flash_mem_i.ready, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3498 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1728_Y, Q = \spi_flash_mem_i.ready).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3279 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1843_Y, Q = \oled_ssd1331_i.setpixel_cmd_pos, rval = 7'1000000).
Adding EN signal on $auto$opt_dff.cc:702:run$3500 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1843_Y, Q = \oled_ssd1331_i.setpixel_cmd_pos).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3278 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1855_Y, Q = \oled_ssd1331_i.clk_div, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$3510 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1855_Y, Q = \oled_ssd1331_i.clk_div).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3277 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1882_Y, Q = \oled_ssd1331_i.rom_addr, rval = 6'000000).
Adding EN signal on $auto$opt_dff.cc:702:run$3524 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$1431_Y [5:0], Q = \oled_ssd1331_i.rom_addr).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3276 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1890_Y, Q = \oled_ssd1331_i.spi_clk, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3528 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1890_Y, Q = \oled_ssd1331_i.spi_clk).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3275 ($dff) from module kianv_soc (D = { \oled_ssd1331_i.strobe_r [0] \oled_ssd1331_i.strobe }, Q = \oled_ssd1331_i.strobe_r, rval = 2'01).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3274 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1907_Y, Q = \oled_ssd1331_i.shift_reg, rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$3539 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1907_Y, Q = \oled_ssd1331_i.shift_reg).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3273 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1936_Y, Q = \oled_ssd1331_i.shift_cnt, rval = 5'01100).
Adding EN signal on $auto$opt_dff.cc:702:run$3557 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1936_Y, Q = \oled_ssd1331_i.shift_cnt).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3271 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1998_Y, Q = \oled_ssd1331_i.spi_dc, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$3575 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1998_Y, Q = \oled_ssd1331_i.spi_dc).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3270 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$2018_Y, Q = \oled_ssd1331_i.spi_cs, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$3589 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$2018_Y, Q = \oled_ssd1331_i.spi_cs).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3269 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$2037_Y, Q = \oled_ssd1331_i.valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3597 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$2037_Y, Q = \oled_ssd1331_i.valid).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3268 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$2056_Y, Q = \oled_ssd1331_i.ready, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3611 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$2054_Y, Q = \oled_ssd1331_i.ready).
Adding EN signal on $flatten\my_tx_uart_i.$procdff$3267 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755_Y, Q = \my_tx_uart_i.wait_states).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3266 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1773_Y, Q = \my_tx_uart_i.tx_data_reg, rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$3620 ($sdff) from module kianv_soc (D = \my_tx_uart_i.tx_data, Q = \my_tx_uart_i.tx_data_reg).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3265 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1781_Y, Q = \my_tx_uart_i.bit_idx, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$3624 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$1436_Y [2:0], Q = \my_tx_uart_i.bit_idx).
Adding EN signal on $flatten\my_tx_uart_i.$procdff$3264 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1788_Y, Q = \my_tx_uart_i.return_state).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3263 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1801_Y, Q = \my_tx_uart_i.state, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$3633 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1801_Y, Q = \my_tx_uart_i.state).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3262 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1819_Y, Q = \my_tx_uart_i.ready, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3641 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1817_Y, Q = \my_tx_uart_i.ready).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3261 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1826_Y, Q = \my_tx_uart_i.tx_out, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$3643 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1826_Y, Q = \my_tx_uart_i.tx_out).
Adding SRST signal on $flatten\kianv_i.$procdff$3322 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2476_Y, Q = \kianv_i.mul_state, rval = 3'001).
Adding SRST signal on $flatten\kianv_i.$procdff$3321 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2487_Y, Q = \kianv_i.mul_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3648 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2487_Y, Q = \kianv_i.mul_valid).
Adding SRST signal on $flatten\kianv_i.$procdff$3320 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2497_Y, Q = \kianv_i.mul_ready, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3652 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2495_Y, Q = \kianv_i.mul_ready).
Adding SRST signal on $flatten\kianv_i.$procdff$3319 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2503_Y, Q = \kianv_i.mul_bit, rval = 5'00000).
Adding EN signal on $auto$opt_dff.cc:702:run$3654 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2503_Y, Q = \kianv_i.mul_bit).
Adding EN signal on $flatten\kianv_i.$procdff$3318 ($dff) from module kianv_soc (D = $flatten\kianv_i.$ternary$../kianv.v:343$1226_Y, Q = \kianv_i.rs2_mul_rslt).
Adding EN signal on $flatten\kianv_i.$procdff$3317 ($dff) from module kianv_soc (D = $flatten\kianv_i.$ternary$../kianv.v:342$1222_Y, Q = \kianv_i.rs1_mul_rslt).
Adding EN signal on $flatten\kianv_i.$procdff$3316 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529_Y, Q = \kianv_i.mul_rslt).
Adding SRST signal on $flatten\kianv_i.$procdff$3315 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2417_Y, Q = \kianv_i.div_rslt, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$3675 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2417_Y, Q = \kianv_i.div_rslt).
Adding SRST signal on $flatten\kianv_i.$procdff$3314 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2430_Y, Q = \kianv_i.div_bit, rval = 5'00000).
Adding EN signal on $auto$opt_dff.cc:702:run$3685 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2430_Y, Q = \kianv_i.div_bit).
Adding SRST signal on $flatten\kianv_i.$procdff$3313 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2438_Y, Q = \kianv_i.div_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3693 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2438_Y, Q = \kianv_i.div_valid).
Adding SRST signal on $flatten\kianv_i.$procdff$3312 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2448_Y, Q = \kianv_i.div_ready, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3697 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2446_Y, Q = \kianv_i.div_ready).
Adding SRST signal on $flatten\kianv_i.$procdff$3311 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2453_Y, Q = \kianv_i.rem_rslt, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$3699 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2453_Y, Q = \kianv_i.rem_rslt).
Adding SRST signal on $flatten\kianv_i.$procdff$3310 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2465_Y, Q = \kianv_i.div_state, rval = 3'001).
Adding EN signal on $flatten\kianv_i.$procdff$3309 ($dff) from module kianv_soc (D = $flatten\kianv_i.$0\instr_reg[31:0], Q = \kianv_i.instr_reg).
Adding EN signal on $flatten\kianv_i.$procdff$3308 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2207_Y, Q = \kianv_i.div_start).
Adding EN signal on $flatten\kianv_i.$procdff$3307 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2221_Y, Q = \kianv_i.mul_start).
Adding SRST signal on $flatten\kianv_i.$procdff$3306 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2244_Y, Q = \kianv_i.instr_counter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$3735 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$add$../kianv.v:611$1348_Y, Q = \kianv_i.instr_counter).
Adding SRST signal on $flatten\kianv_i.$procdff$3305 ($dff) from module kianv_soc (D = $flatten\kianv_i.$add$../kianv.v:601$1347_Y, Q = \kianv_i.cycle_counter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $flatten\kianv_i.$procdff$3304 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2255_Y, Q = \kianv_i.rd_reg_file, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$3740 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$ternary$../kianv.v:681$1355_Y, Q = \kianv_i.rd_reg_file).
Adding SRST signal on $flatten\kianv_i.$procdff$3303 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2264_Y, Q = \kianv_i.rd_wr, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$3746 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2264_Y, Q = \kianv_i.rd_wr).
Adding SRST signal on $flatten\kianv_i.$procdff$3302 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2276_Y, Q = \kianv_i.cpu_state, rval = 7'0000001).
Adding SRST signal on $flatten\kianv_i.$procdff$3301 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2310_Y, Q = \kianv_i.pc, rval = 537919488).
Adding EN signal on $auto$opt_dff.cc:702:run$3757 ($sdff) from module kianv_soc (D = \kianv_i.next_pc, Q = \kianv_i.pc).
Adding SRST signal on $flatten\kianv_i.$procdff$3300 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2321_Y, Q = \kianv_i.mem_din, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$3761 ($sdff) from module kianv_soc (D = \kianv_i.rs2_store_rslt, Q = \kianv_i.mem_din).
Adding SRST signal on $flatten\kianv_i.$procdff$3299 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2330_Y, Q = \kianv_i.mem_addr, rval = 537919488).
Adding EN signal on $auto$opt_dff.cc:702:run$3765 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2330_Y, Q = \kianv_i.mem_addr).
Adding SRST signal on $flatten\kianv_i.$procdff$3298 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2340_Y, Q = \kianv_i.mem_rd, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$3773 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2340_Y, Q = \kianv_i.mem_rd).
Adding SRST signal on $flatten\kianv_i.$procdff$3297 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2355_Y, Q = \kianv_i.mem_wmask, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$3783 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2355_Y, Q = \kianv_i.mem_wmask).

9.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 79 unused cells and 98 unused wires.
<suppressed ~80 debug messages>

9.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~27 debug messages>

9.12.9. Rerunning OPT passes. (Maybe there is more to do..)

9.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~87 debug messages>

9.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3733: { $auto$opt_dff.cc:217:make_patterns_logic$3724 $auto$opt_dff.cc:217:make_patterns_logic$3730 $auto$opt_dff.cc:217:make_patterns_logic$3728 $auto$opt_dff.cc:217:make_patterns_logic$3726 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3722: { $auto$opt_dff.cc:217:make_patterns_logic$3713 $auto$opt_dff.cc:217:make_patterns_logic$3719 $auto$opt_dff.cc:217:make_patterns_logic$3717 $auto$opt_dff.cc:217:make_patterns_logic$3715 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3673: { $auto$opt_dff.cc:217:make_patterns_logic$3668 $auto$opt_dff.cc:217:make_patterns_logic$3670 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3666: { \kianv_i.mul_start \kianv_i.mul_state [0] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3663: { \kianv_i.mul_start \kianv_i.mul_state [0] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3631: { $auto$opt_dff.cc:217:make_patterns_logic$3626 $auto$opt_dff.cc:217:make_patterns_logic$3628 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3618: { $auto$opt_dff.cc:217:make_patterns_logic$3613 $auto$opt_dff.cc:217:make_patterns_logic$3615 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3526: { \oled_ssd1331_i.state [2] \oled_ssd1331_i.spi_clk \oled_ssd1331_i.clk_div $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$1422_Y }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$3486: { $auto$opt_dff.cc:217:make_patterns_logic$3483 $auto$opt_dff.cc:217:make_patterns_logic$3481 \reset_cnt }
  Optimizing cells in module \kianv_soc.
Performed a total of 9 changes.

9.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

9.12.13. Executing OPT_DFF pass (perform DFF optimizations).

9.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

9.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.12.16. Rerunning OPT passes. (Maybe there is more to do..)

9.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~88 debug messages>

9.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.12.20. Executing OPT_DFF pass (perform DFF optimizations).

9.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.12.23. Finished OPT passes. (There is nothing left to do.)

9.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1553 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1555 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1557 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1559 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1561 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1563 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1565 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1567 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1569 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1571 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1573 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1575 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1577 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1579 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1581 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1583 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1585 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1587 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1589 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1591 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1593 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1595 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1597 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1599 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1601 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1603 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1605 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1607 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1609 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1611 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1613 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:0$1615 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1554 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1556 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1558 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1560 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1562 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1564 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1566 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1568 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1570 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1572 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1574 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1576 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1578 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1580 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1582 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1584 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1586 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1588 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1590 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1592 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1594 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1596 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1598 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1600 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1602 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1604 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1606 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1608 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1610 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1612 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1614 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:0$1616 (kianv_i.register_file_i.register_file1).
Removed top 25 bits (of 32) from port B of cell kianv_soc.$add$kianv_soc_icebreaker.v:104$4 ($add).
Removed top 18 bits (of 32) from port Y of cell kianv_soc.$add$kianv_soc_icebreaker.v:104$4 ($add).
Removed top 15 bits (of 16) from port B of cell kianv_soc.$add$kianv_soc_icebreaker.v:154$8 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$ge$kianv_soc_icebreaker.v:244$10 ($ge).
Removed top 18 bits (of 32) from port B of cell kianv_soc.$lt$kianv_soc_icebreaker.v:244$11 ($lt).
Removed top 3 bits (of 32) from port B of cell kianv_soc.$ge$kianv_soc_icebreaker.v:255$14 ($ge).
Removed top 3 bits (of 32) from port B of cell kianv_soc.$lt$kianv_soc_icebreaker.v:255$15 ($lt).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$ge$kianv_soc_icebreaker.v:267$18 ($ge).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$lt$kianv_soc_icebreaker.v:267$19 ($lt).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:277$22 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:289$24 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:289$25 ($eq).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3532 ($ne).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3545 ($ne).
Removed top 31 bits (of 32) from mux cell kianv_soc.$procmux$2771 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3616 ($ne).
Removed top 31 bits (of 32) from mux cell kianv_soc.$procmux$2839 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3637 ($ne).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3658 ($ne).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3791 ($ne).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3789 ($ne).
Removed top 2 bits (of 24) from mux cell kianv_soc.$procmux$2980 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3779 ($ne).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3711 ($ne).
Removed top 7 bits (of 22) from mux cell kianv_soc.$procmux$3091 ($mux).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3718 ($ne).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3360 ($eq).
Removed top 2 bits (of 24) from mux cell kianv_soc.$procmux$3145 ($mux).
Removed top 21 bits (of 32) from mux cell kianv_soc.$procmux$3181 ($mux).
Removed top 7 bits (of 22) from mux cell kianv_soc.$procmux$3205 ($mux).
Removed top 2 bits (of 24) from mux cell kianv_soc.$procmux$3217 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3441 ($eq).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1806 ($mux).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1799 ($mux).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1792 ($mux).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1760 ($mux).
Removed top 2 bits (of 3) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1758_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1757_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1756_CMP0 ($eq).
Removed top 24 bits (of 25) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$eq$my_tx_uart.v:102$1440 ($eq).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$1439 ($sub).
Removed top 7 bits (of 32) from port Y of cell kianv_soc.$flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$1439 ($sub).
Removed top 30 bits (of 32) from mux cell kianv_soc.$flatten\my_tx_uart_i.$ternary$my_tx_uart.v:87$1438 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$add$my_tx_uart.v:84$1436 ($add).
Removed top 29 bits (of 32) from port Y of cell kianv_soc.$flatten\my_tx_uart_i.$add$my_tx_uart.v:84$1436 ($add).
Removed cell kianv_soc.$flatten\spi_flash_mem_i.$procmux$1736 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3406 ($eq).
Removed cell kianv_soc.$flatten\spi_flash_mem_i.$procmux$1705 ($mux).
Removed cell kianv_soc.$flatten\spi_flash_mem_i.$procmux$1693 ($mux).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3402 ($eq).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$602 ($sub).
Removed top 27 bits (of 32) from port Y of cell kianv_soc.$flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$602 ($sub).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:104$600 ($eq).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3372 ($eq).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3455 ($eq).
Removed top 5 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2106_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2105_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2104_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2103_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2102_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2101_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2100_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2099_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2098_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2097_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2096_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2095_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2094_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2093_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2092_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2091_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2090_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2089_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2088_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2087_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2086_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2085_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2084_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2083_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2082_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2081_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2080_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2079_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2078_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2077_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2076_CMP0 ($eq).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2040 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2035 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2033 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2031 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2007 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2005 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$2001 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3394 ($eq).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3389 ($eq).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1954 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1952 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1948 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1939 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1934 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1932 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1925 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1923 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1919 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1910 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1905 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1903 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1893 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1888 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1869 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1867 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1863 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1858 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1848 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1846 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$1431 ($add).
Removed top 26 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$1431 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$1421 ($sub).
Removed top 27 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$1421 ($sub).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$1418 ($add).
Removed top 30 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$1418 ($add).
Removed top 28 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$1416 ($sub).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:0$1415 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414 ($sub).
Removed top 24 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414 ($sub).
Removed top 27 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$gt$oled_sdd1331.v:151$1412 ($gt).
Removed top 28 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$1410 ($sub).
Removed top 25 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$1410 ($sub).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$1409 ($eq).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$ternary$oled_sdd1331.v:125$1408 ($mux).
Removed top 7 bits (of 8) from FF cell kianv_soc.$flatten\bram_i.$procdff$3296 ($dff).
Removed top 7 bits (of 8) from FF cell kianv_soc.$flatten\bram_i.$procdff$3293 ($dff).
Removed top 7 bits (of 8) from FF cell kianv_soc.$flatten\bram_i.$procdff$3290 ($dff).
Removed top 7 bits (of 8) from FF cell kianv_soc.$flatten\bram_i.$procdff$3287 ($dff).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2190 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2187 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2185 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2183 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2180 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2178 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2169 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2166 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2164 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2162 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2159 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2157 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2148 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2145 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2143 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2141 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2138 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2136 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2127 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2124 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2122 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2120 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2117 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$2115 ($mux).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$fsm_map.cc:77:implement_pattern_cache$3410 ($eq).
Removed cell kianv_soc.$flatten\kianv_i.\register_file_i.$procmux$1666 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.\register_file_i.$procmux$1668 ($mux).
Removed top 31 bits (of 32) from FF cell kianv_soc.$flatten\kianv_i.\register_file_i.$procdff$3249 ($dff).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:218:make_patterns_logic$3729 ($ne).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2532 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2505 ($mux).
Removed top 1 bits (of 3) from mux cell kianv_soc.$flatten\kianv_i.$procmux$2481 ($mux).
Removed top 1 bits (of 3) from mux cell kianv_soc.$flatten\kianv_i.$procmux$2470 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2459 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2432 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2423 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2412 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2409 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2406 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2403 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2385 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2360 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2358 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2353 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2345 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2338 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2328 ($mux).
Removed top 5 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$procmux$2300 ($mux).
Removed top 1 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$procmux$2282 ($mux).
Removed top 1 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$procmux$2278 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2267 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2262 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2229 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2227 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2225 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2214 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2212 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2210 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2204 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2201 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:611$1348 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:601$1347 ($add).
Removed top 16 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:503$1315 ($mux).
Removed top 24 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:495$1307 ($mux).
Removed top 24 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:496$1305 ($mux).
Removed top 24 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:497$1303 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:498$1301 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:478$1293 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:477$1290 ($mux).
Removed top 3 bits (of 4) from port A of cell kianv_soc.$flatten\kianv_i.$shl$../kianv.v:472$1285 ($shl).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:471$1284 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:471$1282 ($eq).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:470$1281 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:469$1278 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:469$1276 ($eq).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:468$1275 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:447$1271 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:447$1270 ($add).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:446$1267 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:446$1266 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:360$1238 ($add).
Removed top 32 bits (of 64) from port A of cell kianv_soc.$flatten\kianv_i.$not$../kianv.v:360$1237 ($not).
Removed top 32 bits (of 64) from port B of cell kianv_soc.$flatten\kianv_i.$and$../kianv.v:351$1228 ($and).
Removed top 32 bits (of 64) from port Y of cell kianv_soc.$flatten\kianv_i.$and$../kianv.v:351$1228 ($and).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:343$1225 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:342$1221 ($add).
Removed top 31 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:282$1181 ($mux).
Removed top 31 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:280$1179 ($mux).
Removed top 29 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:278$1176 ($add).
Removed top 32 bits (of 64) from port Y of cell kianv_soc.$flatten\kianv_i.$shr$../kianv.v:257$1159 ($shr).
Removed top 32 bits (of 64) from port Y of cell kianv_soc.$flatten\kianv_i.$shr$../kianv.v:256$1158 ($shr).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:244$1149 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:243$1148 ($eq).
Removed top 8 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:242$1147 ($eq).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:237$1144 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:236$1143 ($eq).
Removed top 4 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:235$1142 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:228$1135 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:227$1134 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:226$1133 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:225$1132 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:224$1131 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:223$1130 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:222$1129 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:221$1128 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:217$1127 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:216$1126 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:215$1125 ($eq).
Removed top 3 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:214$1124 ($eq).
Removed top 6 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:212$1122 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:206$1113 ($eq).
Removed top 3 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:205$1112 ($eq).
Removed top 4 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:204$1111 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:201$1104 ($eq).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:195$1099 ($eq).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:194$1098 ($eq).
Removed top 5 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:193$1097 ($eq).
Removed top 3 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:190$1096 ($eq).
Removed top 2 bits (of 7) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:186$1094 ($eq).
Removed top 1 bits (of 7) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:185$1093 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:178$1088 ($eq).
Removed top 3 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:177$1087 ($eq).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:160$1068 ($eq).
Removed top 1 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:148$1062 ($mux).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:114$1051 ($eq).
Removed top 2 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:113$1050 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:109$1047 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:108$1046 ($eq).
Removed top 2 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:104$1040 ($eq).
Removed top 2 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:103$1038 ($eq).
Removed top 4 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:102$1036 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:94$1029 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:93$1027 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:92$1026 ($eq).
Removed top 2 bits (of 24) from wire kianv_soc.$2\mem_spi_addr[23:0].
Removed top 7 bits (of 22) from wire kianv_soc.$2\mem_spram_addr[21:0].
Removed top 2 bits (of 24) from wire kianv_soc.$3\mem_spi_addr[23:0].
Removed top 31 bits (of 32) from wire kianv_soc.$4\mem_dout[31:0].
Removed top 31 bits (of 32) from wire kianv_soc.$5\mem_dout[31:0].
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_ADDR[12:0]$1380.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_DATA[31:0]$1381.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:51$1371_EN[31:0]$1382.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_ADDR[12:0]$1383.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_DATA[31:0]$1384.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:52$1372_EN[31:0]$1385.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_ADDR[12:0]$1386.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_DATA[31:0]$1387.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:53$1373_EN[31:0]$1388.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:54$1374_ADDR[12:0]$1389.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$memwr$\mem$bram.v:51$1371_EN.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$memwr$\mem$bram.v:52$1372_EN.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$memwr$\mem$bram.v:53$1373_EN.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2108_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2110_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2115_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2117_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2122_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2124_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2129_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2131_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2136_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2138_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2143_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2145_Y.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2150_Y.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2152_Y.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2157_Y.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$procmux$2159_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2164_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2166_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2185_Y.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$procmux$2187_Y.
Removed top 32 bits (of 64) from wire kianv_soc.$flatten\kianv_i.$and$../kianv.v:351$1228_Y.
Removed top 1 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2278_Y.
Removed top 2 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2282_Y.
Removed top 1 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2284_Y.
Removed top 2 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2288_Y.
Removed top 1 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2290_Y.
Removed top 2 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2292_Y.
Removed top 3 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2295_Y.
Removed top 6 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$2300_Y.
Removed top 1 bits (of 3) from wire kianv_soc.$flatten\kianv_i.$procmux$2470_Y.
Removed top 1 bits (of 3) from wire kianv_soc.$flatten\kianv_i.$procmux$2476_Y.
Removed top 1 bits (of 3) from wire kianv_soc.$flatten\kianv_i.$procmux$2481_Y.
Removed top 12 bits (of 64) from wire kianv_soc.$flatten\kianv_i.$shl$../kianv.v:351$1229_Y.
Removed top 31 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:280$1179_Y.
Removed top 31 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:282$1181_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:468$1275_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:469$1278_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:470$1281_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:471$1284_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:477$1290_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:478$1293_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:495$1307_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:496$1305_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:497$1303_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:498$1301_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:503$1315_Y.
Removed top 29 bits (of 32) from wire kianv_soc.$flatten\my_tx_uart_i.$add$my_tx_uart.v:84$1436_Y.
Removed top 7 bits (of 32) from wire kianv_soc.$flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$1439_Y.
Removed top 30 bits (of 32) from wire kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$1418_Y.
Removed top 26 bits (of 32) from wire kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$1431_Y.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\spi_flash_mem_i.$procmux$1693_Y.
Removed top 27 bits (of 32) from wire kianv_soc.$flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$602_Y.
Removed top 21 bits (of 32) from wire kianv_soc.mem_bram_addr.
Removed top 7 bits (of 22) from wire kianv_soc.mem_spram_addr.

9.14. Executing PEEPOPT pass (run peephole optimizers).

9.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 167 unused wires.
<suppressed ~1 debug messages>

9.16. Executing SHARE pass (SAT-based resource sharing).
Found 7 cells in module kianv_soc that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\kianv_i.$shr$../kianv.v:273$1174 ($shr):
    Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
    Found 3 candidates: $flatten\kianv_i.$shr$../kianv.v:266$1167 $flatten\kianv_i.$shr$../kianv.v:257$1159 $flatten\kianv_i.$shr$../kianv.v:256$1158
    Analyzing resource sharing with $flatten\kianv_i.$shr$../kianv.v:266$1167 ($shr):
      Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$eq$../kianv.v:470$1279_Y }
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:273$1174: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 18'000000010000000101
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:273$1174: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 17'00000010000010010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:273$1174: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00000001000000100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:273$1174: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 18'000000010000000100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:273$1174: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 16'0000000100000010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:273$1174: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 15'000000010000000
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:273$1174: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 14'00000010000010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:266$1167: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 7'0000110
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:266$1167: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 8'00000100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:266$1167: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 9'000001010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:266$1167: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 10'0000010100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:266$1167: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 11'00000100100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:266$1167: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 10'0000110010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:266$1167: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 11'00000100101
      Adding exclusive control bits: \kianv_i.cpu_state [2] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [2]
      Adding exclusive control bits: \kianv_i.is_instreth vs. \kianv_i.is_instret
      Size of SAT problem: 175 cells, 13619 variables, 36216 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\kianv_i.$shr$../kianv.v:266$1167: $auto$share.cc:986:make_cell_activation_logic$3875
      New cell: $auto$share.cc:666:make_supercell$3882 ($shr)
  Analyzing resource sharing options for $auto$share.cc:666:make_supercell$3882 ($shr):
    Found 14 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
    Found 2 candidates: $flatten\kianv_i.$shr$../kianv.v:257$1159 $flatten\kianv_i.$shr$../kianv.v:256$1158
    Analyzing resource sharing with $flatten\kianv_i.$shr$../kianv.v:257$1159 ($shr):
      Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$eq$../kianv.v:470$1279_Y }
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 18'000000010000000101
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 17'00000010000010010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00000001000000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 18'000000010000000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 16'0000000100000010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 15'000000010000000
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 14'00000010000010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 7'0000110
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 8'00000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 9'000001010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 10'0000010100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 11'00000100100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 10'0000110010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3882: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 11'00000100101
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:257$1159: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 28'0000000000001000000000000101
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:257$1159: { \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 27'000000000001000000000010010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:257$1159: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 27'000000000000100000000000100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:257$1159: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 28'0000000000001000000000000100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:257$1159: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 26'00000000000010000000000010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:257$1159: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 25'0000000000001000000000000
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:257$1159: { \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 24'000000000001000000000010
      Adding exclusive control bits: \kianv_i.cpu_state [2] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [2]
      Adding exclusive control bits: \kianv_i.is_instreth vs. \kianv_i.is_instret
      Size of SAT problem: 175 cells, 13613 variables, 36270 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $auto$share.cc:666:make_supercell$3882: $auto$share.cc:986:make_cell_activation_logic$3900
      New cell: $auto$share.cc:666:make_supercell$3907 ($shr)
  Analyzing resource sharing options for $auto$share.cc:666:make_supercell$3907 ($shr):
    Found 21 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
    Found 1 candidates: $flatten\kianv_i.$shr$../kianv.v:256$1158
    Analyzing resource sharing with $flatten\kianv_i.$shr$../kianv.v:256$1158 ($shr):
      Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$eq$../kianv.v:470$1279_Y }
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 18'000000010000000101
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 17'00000010000010010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00000001000000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 18'000000010000000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 16'0000000100000010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 15'000000010000000
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_srl \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 14'00000010000010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 7'0000110
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 8'00000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 9'000001010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 10'0000010100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 11'00000100100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 10'0000110010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 11'00000100101
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 28'0000000000001000000000000101
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 27'000000000001000000000010010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 27'000000000000100000000000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 28'0000000000001000000000000100
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 26'00000000000010000000000010
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 25'0000000000001000000000000
      Activation pattern for cell $auto$share.cc:666:make_supercell$3907: { \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 24'000000000001000000000010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$1158: { \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 23'00000000000000100000010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$1158: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 24'000000000000000100000000
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$1158: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 25'0000000000000001000000010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$1158: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 26'00000000000000010000000100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$1158: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 27'000000000000000100000000100
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$1158: { \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 26'00000000000000100000010010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$1158: { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 27'000000000000000100000000101
      Adding exclusive control bits: \kianv_i.cpu_state [2] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [2]
      Adding exclusive control bits: \kianv_i.is_instreth vs. \kianv_i.is_instret
      Size of SAT problem: 175 cells, 13634 variables, 36815 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\kianv_i.$shr$../kianv.v:256$1158: $auto$share.cc:986:make_cell_activation_logic$3918
      New cell: $auto$share.cc:666:make_supercell$3925 ($shr)
  Analyzing resource sharing options for $auto$share.cc:666:make_supercell$3925 ($shr):
    Found 28 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_lui \kianv_i.is_auipc \kianv_i.is_jal \kianv_i.is_jalr \kianv_i.is_slti \kianv_i.is_sltiu \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_srai \kianv_i.is_sll \kianv_i.is_slt \kianv_i.is_srl \kianv_i.is_sra \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_sltu \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
    No candidates found.
  Analyzing resource sharing options for $flatten\kianv_i.$shl$../kianv.v:351$1229 ($shl):
    Found 1 activation_patterns using ctrl signal \kianv_i.mul_state [1].
    Found 2 candidates: $flatten\kianv_i.$shl$../kianv.v:272$1173 $flatten\kianv_i.$shl$../kianv.v:265$1166
    Analyzing resource sharing with $flatten\kianv_i.$shl$../kianv.v:272$1173 ($shl):
      Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$eq$../kianv.v:470$1279_Y }
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:351$1229: \kianv_i.mul_state [1] = 1'1
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 13'0000010000010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 14'00000010000000
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 15'000000100000010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 16'0000001000000100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00000010000000100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 16'0000010000010010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00000010000000101
      Adding exclusive control bits: \kianv_i.cpu_state [2] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [2]
      Adding exclusive control bits: \kianv_i.is_instreth vs. \kianv_i.is_instret
      Size of SAT problem: 175 cells, 13569 variables, 35893 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.mul_state [1] \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 24'000000100000000000010000
    Analyzing resource sharing with $flatten\kianv_i.$shl$../kianv.v:265$1166 ($shl):
      Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$eq$../kianv.v:470$1279_Y }
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:351$1229: \kianv_i.mul_state [1] = 1'1
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 10'0000100101
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 9'000110010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 9'000010100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 10'0000100100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 8'00001010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 7'0000100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 6'000110
      Adding exclusive control bits: \kianv_i.cpu_state [2] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [2]
      Adding exclusive control bits: \kianv_i.is_instreth vs. \kianv_i.is_instret
      Size of SAT problem: 175 cells, 13555 variables, 35802 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.mul_state [1] \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00001000000010000
  Analyzing resource sharing options for $flatten\kianv_i.$shl$../kianv.v:272$1173 ($shl):
    Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
    Found 1 candidates: $flatten\kianv_i.$shl$../kianv.v:265$1166
    Analyzing resource sharing with $flatten\kianv_i.$shl$../kianv.v:265$1166 ($shl):
      Found 10 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:468$1273_Y $flatten\kianv_i.$eq$../kianv.v:469$1276_Y $flatten\kianv_i.$eq$../kianv.v:470$1279_Y }
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 13'0000010000010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 14'00000010000000
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 15'000000100000010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 16'0000001000000100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00000010000000100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 16'0000010000010010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:272$1173: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 17'00000010000000101
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 10'0000100101
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 9'000110010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 9'000010100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y } = 10'0000100100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 8'00001010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 7'0000100
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:265$1166: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y } = 6'000110
      Adding exclusive control bits: \kianv_i.cpu_state [2] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [4]
      Adding exclusive control bits: \kianv_i.cpu_state [1] vs. \kianv_i.cpu_state [2]
      Adding exclusive control bits: \kianv_i.is_instreth vs. \kianv_i.is_instret
      Size of SAT problem: 175 cells, 13617 variables, 36189 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\kianv_i.$shl$../kianv.v:265$1166: $auto$share.cc:986:make_cell_activation_logic$3936
      New cell: $auto$share.cc:666:make_supercell$3943 ($shl)
  Analyzing resource sharing options for $auto$share.cc:666:make_supercell$3943 ($shl):
    Found 14 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_slli \kianv_i.is_srli \kianv_i.is_sll \kianv_i.is_add \kianv_i.is_sub \kianv_i.is_xor \kianv_i.is_or \kianv_i.is_and \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:261$1161_Y $flatten\kianv_i.$or$../kianv.v:502$1309_Y }.
    No candidates found.
Removing 8 cells in module kianv_soc:
  Removing cell $flatten\kianv_i.$shl$../kianv.v:265$1166 ($shl).
  Removing cell $flatten\kianv_i.$shl$../kianv.v:272$1173 ($shl).
  Removing cell $flatten\kianv_i.$shr$../kianv.v:256$1158 ($shr).
  Removing cell $auto$share.cc:666:make_supercell$3907 ($shr).
  Removing cell $flatten\kianv_i.$shr$../kianv.v:257$1159 ($shr).
  Removing cell $auto$share.cc:666:make_supercell$3882 ($shr).
  Removing cell $flatten\kianv_i.$shr$../kianv.v:266$1167 ($shr).
  Removing cell $flatten\kianv_i.$shr$../kianv.v:273$1174 ($shr).

9.17. Executing TECHMAP pass (map to technology primitives).

9.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

9.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~244 debug messages>

9.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~2 debug messages>

9.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 9 unused wires.
<suppressed ~9 debug messages>

9.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module kianv_soc:
  creating $macc model for $add$kianv_soc_icebreaker.v:104$4 ($add).
  creating $macc model for $add$kianv_soc_icebreaker.v:154$8 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:261$1162 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:270$1171 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:277$1175 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:278$1176 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:342$1221 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:343$1225 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:351$1230 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:352$1231 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:360$1238 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:431$1258 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:446$1266 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:447$1270 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:601$1347 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:611$1348 ($add).
  creating $macc model for $flatten\kianv_i.$sub$../kianv.v:271$1172 ($sub).
  creating $macc model for $flatten\kianv_i.$sub$../kianv.v:402$1255 ($sub).
  creating $macc model for $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$1436 ($add).
  creating $macc model for $flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$1439 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:0$1415 ($add).
  creating $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$1418 ($add).
  creating $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$1431 ($add).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$1416 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$1410 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$1421 ($sub).
  creating $macc model for $flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$602 ($sub).
  merging $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:0$1415 into $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$1416.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$1421.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$1410.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$1431.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$1418.
  creating $alu model for $macc $flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$602.
  creating $alu model for $macc $flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$1439.
  creating $alu model for $macc $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$1436.
  creating $alu model for $macc $flatten\kianv_i.$sub$../kianv.v:402$1255.
  creating $alu model for $macc $flatten\kianv_i.$sub$../kianv.v:271$1172.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:611$1348.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:601$1347.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:447$1270.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:446$1266.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:431$1258.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:360$1238.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:352$1231.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:351$1230.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:343$1225.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:342$1221.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:278$1176.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:277$1175.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:270$1171.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:261$1162.
  creating $alu model for $macc $add$kianv_soc_icebreaker.v:154$8.
  creating $alu model for $macc $add$kianv_soc_icebreaker.v:104$4.
  creating $macc cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$1416: $auto$alumacc.cc:365:replace_macc$3946
  creating $alu model for $flatten\kianv_i.$ge$../kianv.v:540$1326 ($ge): merged with $flatten\kianv_i.$sub$../kianv.v:271$1172.
  creating $alu model for $flatten\kianv_i.$lt$../kianv.v:252$1156 ($lt): merged with $flatten\kianv_i.$sub$../kianv.v:271$1172.
  creating $alu model for $flatten\kianv_i.$lt$../kianv.v:253$1157 ($lt): new $alu
  creating $alu model for $flatten\oled_ssd1331_i.$gt$oled_sdd1331.v:151$1412 ($gt): new $alu
  creating $alu model for $ge$kianv_soc_icebreaker.v:244$10 ($ge): new $alu
  creating $alu model for $ge$kianv_soc_icebreaker.v:255$14 ($ge): new $alu
  creating $alu model for $ge$kianv_soc_icebreaker.v:267$18 ($ge): new $alu
  creating $alu model for $lt$kianv_soc_icebreaker.v:244$11 ($lt): new $alu
  creating $alu model for $lt$kianv_soc_icebreaker.v:255$15 ($lt): new $alu
  creating $alu model for $lt$kianv_soc_icebreaker.v:267$19 ($lt): new $alu
  creating $alu model for $flatten\kianv_i.$eq$../kianv.v:537$1321 ($eq): merged with $flatten\kianv_i.$sub$../kianv.v:271$1172.
  creating $alu model for $flatten\kianv_i.$ne$../kianv.v:538$1322 ($ne): merged with $flatten\kianv_i.$sub$../kianv.v:271$1172.
  creating $alu cell for $lt$kianv_soc_icebreaker.v:267$19: $auto$alumacc.cc:485:replace_alu$3955
  creating $alu cell for $lt$kianv_soc_icebreaker.v:255$15: $auto$alumacc.cc:485:replace_alu$3966
  creating $alu cell for $lt$kianv_soc_icebreaker.v:244$11: $auto$alumacc.cc:485:replace_alu$3977
  creating $alu cell for $ge$kianv_soc_icebreaker.v:267$18: $auto$alumacc.cc:485:replace_alu$3988
  creating $alu cell for $ge$kianv_soc_icebreaker.v:255$14: $auto$alumacc.cc:485:replace_alu$3997
  creating $alu cell for $ge$kianv_soc_icebreaker.v:244$10: $auto$alumacc.cc:485:replace_alu$4006
  creating $alu cell for $flatten\oled_ssd1331_i.$gt$oled_sdd1331.v:151$1412: $auto$alumacc.cc:485:replace_alu$4015
  creating $alu cell for $add$kianv_soc_icebreaker.v:104$4: $auto$alumacc.cc:485:replace_alu$4020
  creating $alu cell for $add$kianv_soc_icebreaker.v:154$8: $auto$alumacc.cc:485:replace_alu$4023
  creating $alu cell for $flatten\kianv_i.$lt$../kianv.v:253$1157: $auto$alumacc.cc:485:replace_alu$4026
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:261$1162: $auto$alumacc.cc:485:replace_alu$4031
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:277$1175: $auto$alumacc.cc:485:replace_alu$4034
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:278$1176: $auto$alumacc.cc:485:replace_alu$4037
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:342$1221: $auto$alumacc.cc:485:replace_alu$4040
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:343$1225: $auto$alumacc.cc:485:replace_alu$4043
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:351$1230: $auto$alumacc.cc:485:replace_alu$4046
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:352$1231: $auto$alumacc.cc:485:replace_alu$4049
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:360$1238: $auto$alumacc.cc:485:replace_alu$4052
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:431$1258: $auto$alumacc.cc:485:replace_alu$4055
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:446$1266: $auto$alumacc.cc:485:replace_alu$4058
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:447$1270: $auto$alumacc.cc:485:replace_alu$4061
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:601$1347: $auto$alumacc.cc:485:replace_alu$4064
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:611$1348: $auto$alumacc.cc:485:replace_alu$4067
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:270$1171: $auto$alumacc.cc:485:replace_alu$4070
  creating $alu cell for $flatten\kianv_i.$sub$../kianv.v:271$1172, $flatten\kianv_i.$ge$../kianv.v:540$1326, $flatten\kianv_i.$lt$../kianv.v:252$1156, $flatten\kianv_i.$eq$../kianv.v:537$1321, $flatten\kianv_i.$ne$../kianv.v:538$1322: $auto$alumacc.cc:485:replace_alu$4073
  creating $alu cell for $flatten\kianv_i.$sub$../kianv.v:402$1255: $auto$alumacc.cc:485:replace_alu$4088
  creating $alu cell for $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$1436: $auto$alumacc.cc:485:replace_alu$4091
  creating $alu cell for $flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$1439: $auto$alumacc.cc:485:replace_alu$4094
  creating $alu cell for $flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$602: $auto$alumacc.cc:485:replace_alu$4097
  creating $alu cell for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$1418: $auto$alumacc.cc:485:replace_alu$4100
  creating $alu cell for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$1431: $auto$alumacc.cc:485:replace_alu$4103
  creating $alu cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$1410: $auto$alumacc.cc:485:replace_alu$4106
  creating $alu cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414: $auto$alumacc.cc:485:replace_alu$4109
  creating $alu cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$1421: $auto$alumacc.cc:485:replace_alu$4112
  created 34 $alu and 1 $macc cells.

9.21. Executing OPT pass (performing simple optimizations).

9.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

9.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~79 debug messages>

9.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New ctrl vector for $pmux cell $flatten\kianv_i.$procmux$2340: { $auto$opt_reduce.cc:134:opt_mux$3326 $auto$opt_reduce.cc:134:opt_mux$4116 \kianv_i.cpu_state [5] }
    New ctrl vector for $pmux cell $flatten\my_tx_uart_i.$procmux$1755: { $auto$opt_reduce.cc:134:opt_mux$4118 $flatten\my_tx_uart_i.$procmux$1757_CMP $flatten\my_tx_uart_i.$procmux$1756_CMP }
    New ctrl vector for $pmux cell $flatten\my_tx_uart_i.$procmux$1801: { $auto$opt_reduce.cc:134:opt_mux$4120 $flatten\my_tx_uart_i.$procmux$1756_CMP }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1855: { $auto$opt_reduce.cc:134:opt_mux$4122 $auto$opt_reduce.cc:134:opt_mux$3330 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1936: { $auto$opt_reduce.cc:134:opt_mux$4124 $auto$opt_reduce.cc:134:opt_mux$3330 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$4119: { $flatten\my_tx_uart_i.$procmux$1757_CMP $flatten\my_tx_uart_i.$procmux$1758_CMP $flatten\my_tx_uart_i.$procmux$1762_CMP }
  Optimizing cells in module \kianv_soc.
Performed a total of 6 changes.

9.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.21.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\bram_i.$procdff$3296 ($dff) from module kianv_soc (D = $flatten\bram_i.$procmux$2171_Y [31], Q = $flatten\bram_i.$memwr$\mem$bram.v:54$1374_EN [31], rval = 1'0).
Setting constant 1-bit at position 0 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 1 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 2 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 3 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 4 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 5 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 6 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 7 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 8 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 9 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 10 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 11 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 12 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 13 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 14 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 15 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 16 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 17 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 18 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 19 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 20 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 21 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 22 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Setting constant 1-bit at position 23 on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc.
Adding SRST signal on $flatten\bram_i.$procdff$3295 ($dff) from module kianv_soc (D = \kianv_i.mem_din [31:24], Q = $flatten\bram_i.$memwr$\mem$bram.v:54$1374_DATA [31:24], rval = 8'00000000).
Adding SRST signal on $flatten\bram_i.$procdff$3293 ($dff) from module kianv_soc (D = $auto$wreduce.cc:454:run$3825 [23], Q = $auto$wreduce.cc:454:run$3812 [23], rval = 1'0).
Setting constant 1-bit at position 0 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 1 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 2 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 3 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 4 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 5 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 6 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 7 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 8 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 9 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 10 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 11 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 12 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 13 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 14 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 1-bit at position 15 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 24 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 25 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 26 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 27 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 28 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 29 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 30 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Setting constant 0-bit at position 31 on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc.
Adding SRST signal on $flatten\bram_i.$procdff$3292 ($dff) from module kianv_soc (D = \kianv_i.mem_din [23:16], Q = $flatten\bram_i.$memwr$\mem$bram.v:53$1373_DATA [23:16], rval = 8'00000000).
Adding SRST signal on $flatten\bram_i.$procdff$3290 ($dff) from module kianv_soc (D = $auto$wreduce.cc:454:run$3819 [15], Q = $auto$wreduce.cc:454:run$3811 [15], rval = 1'0).
Setting constant 1-bit at position 0 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 1-bit at position 1 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 1-bit at position 2 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 1-bit at position 3 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 1-bit at position 4 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 1-bit at position 5 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 1-bit at position 6 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 1-bit at position 7 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 16 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 17 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 18 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 19 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 20 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 21 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 22 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 23 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 24 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 25 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 26 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 27 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 28 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 29 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 30 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Setting constant 0-bit at position 31 on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc.
Adding SRST signal on $flatten\bram_i.$procdff$3289 ($dff) from module kianv_soc (D = \kianv_i.mem_din [15:8], Q = $flatten\bram_i.$memwr$\mem$bram.v:52$1372_DATA [15:8], rval = 8'00000000).
Adding SRST signal on $flatten\bram_i.$procdff$3287 ($dff) from module kianv_soc (D = $auto$wreduce.cc:454:run$3813 [7], Q = $auto$wreduce.cc:454:run$3810 [7], rval = 1'0).
Setting constant 0-bit at position 8 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 9 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 10 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 11 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 12 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 13 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 14 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 15 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 16 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 17 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 18 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 19 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 20 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 21 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 22 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 23 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 24 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 25 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 26 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 27 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 28 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 29 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 30 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Setting constant 0-bit at position 31 on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc.
Adding SRST signal on $flatten\bram_i.$procdff$3286 ($dff) from module kianv_soc (D = \kianv_i.mem_din [7:0], Q = $flatten\bram_i.$memwr$\mem$bram.v:51$1371_DATA [7:0], rval = 8'00000000).
Setting constant 0-bit at position 11 on $flatten\bram_i.$procdff$3285 ($dff) from module kianv_soc.
Setting constant 0-bit at position 12 on $flatten\bram_i.$procdff$3285 ($dff) from module kianv_soc.

9.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 12 unused cells and 30 unused wires.
<suppressed ~15 debug messages>

9.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.21.9. Rerunning OPT passes. (Maybe there is more to do..)

9.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

9.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New input vector for $reduce_and cell $auto$opt_dff.cc:277:combine_resets$4138: { $flatten\bram_i.$procmux$2111_CMP \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:277:combine_resets$4134: { $flatten\bram_i.$procmux$2111_CMP \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:277:combine_resets$4130: { $flatten\bram_i.$procmux$2111_CMP \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:277:combine_resets$4126: { $flatten\bram_i.$procmux$2111_CMP \reset_cnt }
  Optimizing cells in module \kianv_soc.
Performed a total of 4 changes.

9.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.21.13. Executing OPT_DFF pass (perform DFF optimizations).

9.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

9.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.21.16. Rerunning OPT passes. (Maybe there is more to do..)

9.21.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

9.21.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.21.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.21.20. Executing OPT_DFF pass (perform DFF optimizations).

9.21.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.21.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.21.23. Finished OPT passes. (There is nothing left to do.)

9.22. Executing MEMORY pass.

9.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

9.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\bram_i.$memwr$\mem$bram.v:0$1398' in module `\kianv_soc': merged $dff to cell.
Checking cell `$flatten\bram_i.$memwr$\mem$bram.v:0$1399' in module `\kianv_soc': merged $dff to cell.
Checking cell `$flatten\bram_i.$memwr$\mem$bram.v:0$1400' in module `\kianv_soc': merged $dff to cell.
Checking cell `$flatten\bram_i.$memwr$\mem$bram.v:0$1401' in module `\kianv_soc': merged $dff to cell.
Checking cell `$flatten\kianv_i.\register_file_i.$memwr$\register_file0$register_file.v:0$1617' in module `\kianv_soc': merged $dff to cell.
Checking cell `$flatten\kianv_i.\register_file_i.$memwr$\register_file1$register_file.v:0$1618' in module `\kianv_soc': merged $dff to cell.
Checking cell `$flatten\bram_i.$memrd$\mem$bram.v:58$1394' in module `\kianv_soc': merged data $dff to cell.
Checking cell `$flatten\kianv_i.\register_file_i.$memrd$\register_file0$register_file.v:54$1549' in module `\kianv_soc': merged data $dff to cell.
Checking cell `$flatten\kianv_i.\register_file_i.$memrd$\register_file1$register_file.v:58$1551' in module `\kianv_soc': merged data $dff to cell.

9.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 15 unused cells and 18 unused wires.
<suppressed ~16 debug messages>

9.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory kianv_soc.bram_i.mem by address:
  New clock domain: posedge \bram_i.clk
    Port 0 ($flatten\bram_i.$memwr$\mem$bram.v:0$1398) has addr { 2'00 \mem_bram_addr }.
      Active bits: 00000000000000000000000011111111
    Port 1 ($flatten\bram_i.$memwr$\mem$bram.v:0$1399) has addr { 2'00 \mem_bram_addr }.
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($flatten\bram_i.$memwr$\mem$bram.v:0$1400) has addr { 2'00 \mem_bram_addr }.
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($flatten\bram_i.$memwr$\mem$bram.v:0$1401) has addr { 2'00 \mem_bram_addr }.
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

9.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

9.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing kianv_soc.bram_i.mem:
  Properties: ports=2 bits=262144 rports=1 wports=1 dbits=32 abits=13 words=8192
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=100, cells=64, acells=4
    Efficiency for rule 4.2: efficiency=100, cells=64, acells=8
    Efficiency for rule 4.1: efficiency=100, cells=64, acells=16
    Efficiency for rule 1.1: efficiency=100, cells=64, acells=32
    Selected rule 4.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: bram_i.mem.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 1 0>: bram_i.mem.0.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 2 0>: bram_i.mem.0.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 3 0>: bram_i.mem.0.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: bram_i.mem.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 1 0>: bram_i.mem.1.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 2 0>: bram_i.mem.1.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 3 0>: bram_i.mem.1.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: bram_i.mem.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 1 0>: bram_i.mem.2.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 2 0>: bram_i.mem.2.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 3 0>: bram_i.mem.2.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: bram_i.mem.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 1 0>: bram_i.mem.3.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 2 0>: bram_i.mem.3.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 3 0>: bram_i.mem.3.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: bram_i.mem.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 1 0>: bram_i.mem.4.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 2 0>: bram_i.mem.4.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 3 0>: bram_i.mem.4.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: bram_i.mem.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 1 0>: bram_i.mem.5.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 2 0>: bram_i.mem.5.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 3 0>: bram_i.mem.5.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: bram_i.mem.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 1 0>: bram_i.mem.6.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 2 0>: bram_i.mem.6.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 3 0>: bram_i.mem.6.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: bram_i.mem.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 1 0>: bram_i.mem.7.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 2 0>: bram_i.mem.7.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 3 0>: bram_i.mem.7.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: bram_i.mem.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 1 0>: bram_i.mem.8.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 2 0>: bram_i.mem.8.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 3 0>: bram_i.mem.8.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: bram_i.mem.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 1 0>: bram_i.mem.9.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 2 0>: bram_i.mem.9.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 3 0>: bram_i.mem.9.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: bram_i.mem.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 1 0>: bram_i.mem.10.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 2 0>: bram_i.mem.10.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 3 0>: bram_i.mem.10.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: bram_i.mem.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 1 0>: bram_i.mem.11.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 2 0>: bram_i.mem.11.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 3 0>: bram_i.mem.11.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: bram_i.mem.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 1 0>: bram_i.mem.12.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 2 0>: bram_i.mem.12.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 3 0>: bram_i.mem.12.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: bram_i.mem.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 1 0>: bram_i.mem.13.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 2 0>: bram_i.mem.13.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 3 0>: bram_i.mem.13.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: bram_i.mem.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 1 0>: bram_i.mem.14.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 2 0>: bram_i.mem.14.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 3 0>: bram_i.mem.14.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: bram_i.mem.15.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 1 0>: bram_i.mem.15.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 2 0>: bram_i.mem.15.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 3 0>: bram_i.mem.15.3.0
Processing kianv_soc.kianv_i.register_file_i.register_file0:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: kianv_i.register_file_i.register_file0.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: kianv_i.register_file_i.register_file0.1.0.0
Processing kianv_soc.kianv_i.register_file_i.register_file1:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: kianv_i.register_file_i.register_file1.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: kianv_i.register_file_i.register_file1.1.0.0

9.25. Executing TECHMAP pass (map to technology primitives).

9.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

9.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$732cb071c562212ef3fc6e2f3380ae189ce1250d\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6aa27761b0b72336c8f5da0e2970c81894ec70e6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~271 debug messages>

9.26. Executing ICE40_BRAMINIT pass.

9.27. Executing OPT pass (performing simple optimizations).

9.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~805 debug messages>

9.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

9.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$opt_dff.cc:764:run$3509 ($sdffe) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1843_Y [2:0], Q = \oled_ssd1331_i.setpixel_cmd_pos [2:0]).

9.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 6 unused cells and 1978 unused wires.
<suppressed ~7 debug messages>

9.27.5. Rerunning OPT passes. (Removed registers in this run.)

9.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$3324 ($dff) from module kianv_soc (D = \pwm [1:0], Q = \pwm [1:0]).
Handling D = Q on $auto$opt_dff.cc:764:run$5238 ($dffe) from module kianv_soc (removing D path).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$5238 ($dffe) from module kianv_soc.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$5238 ($dffe) from module kianv_soc.
Setting constant 0-bit at position 0 on $auto$memory_bram.cc:1012:replace_memory$4913 ($dff) from module kianv_soc.
Setting constant 1-bit at position 0 on $auto$memory_bram.cc:1012:replace_memory$4432 ($dff) from module kianv_soc.

9.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

9.27.10. Rerunning OPT passes. (Removed registers in this run.)

9.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.27.13. Executing OPT_DFF pass (perform DFF optimizations).

9.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.27.15. Finished fast OPT passes.

9.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

9.29. Executing OPT pass (performing simple optimizations).

9.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5048.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5048.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5048.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5049.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5049.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5049.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5050.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5050.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5050.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5051.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5051.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5051.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5052.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5052.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5052.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5053.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5053.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5053.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5054.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5054.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5054.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5055.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5055.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5055.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5056.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5056.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5056.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5057.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5057.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5057.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5058.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5058.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5058.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5059.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5059.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5059.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5060.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5060.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5060.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5061.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5061.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5061.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5062.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5062.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5062.
    dead port 2/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5063.
    dead port 3/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5063.
    dead port 4/4 on $pmux $auto$memory_bram.cc:1032:replace_memory$5063.
Removed 48 multiplexer ports.
<suppressed ~103 debug messages>

9.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$5234: { $auto$opt_dff.cc:217:make_patterns_logic$3501 $auto$opt_dff.cc:217:make_patterns_logic$3503 $auto$opt_dff.cc:217:make_patterns_logic$3505 $auto$opt_dff.cc:217:make_patterns_logic$5231 }
    Consolidated identical input bits for $mux cell $auto$share.cc:659:make_supercell$3904:
      Old ports: A={ \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file }, B={ 32'00000000000000000000000000000000 \kianv_i.register_file_i.rs1_reg_file }, Y=$auto$share.cc:656:make_supercell$3902
      New ports: A=\kianv_i.register_file_i.rs1_reg_file [31], B=1'0, Y=$auto$share.cc:656:make_supercell$3902 [32]
      New connections: { $auto$share.cc:656:make_supercell$3902 [63:33] $auto$share.cc:656:make_supercell$3902 [31:0] } = { $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] $auto$share.cc:656:make_supercell$3902 [32] \kianv_i.register_file_i.rs1_reg_file }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2274:
      Old ports: A=7'1000000, B=7'0010000, Y=$flatten\kianv_i.$procmux$2274_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\kianv_i.$procmux$2274_Y [6] $flatten\kianv_i.$procmux$2274_Y [4] }
      New connections: { $flatten\kianv_i.$procmux$2274_Y [5] $flatten\kianv_i.$procmux$2274_Y [3:0] } = 5'00000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2278:
      Old ports: A=6'100000, B=6'000001, Y=$auto$wreduce.cc:454:run$3834 [5:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$3834 [5] $auto$wreduce.cc:454:run$3834 [0] }
      New connections: $auto$wreduce.cc:454:run$3834 [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2282:
      Old ports: A=6'010000, B=6'100000, Y=$auto$wreduce.cc:454:run$3835 [5:0]
      New ports: A=2'01, B=2'10, Y=$auto$wreduce.cc:454:run$3835 [5:4]
      New connections: $auto$wreduce.cc:454:run$3835 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2284:
      Old ports: A=7'0100000, B={ 1'0 $auto$wreduce.cc:454:run$3835 [5:0] }, Y=$auto$wreduce.cc:454:run$3836
      New ports: A=6'100000, B=$auto$wreduce.cc:454:run$3835 [5:0], Y=$auto$wreduce.cc:454:run$3836 [5:0]
      New connections: $auto$wreduce.cc:454:run$3836 [6] = 1'0
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2288:
      Old ports: A=7'0001000, B=7'1000000, Y=$auto$wreduce.cc:454:run$3837
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$3837 [6] $auto$wreduce.cc:454:run$3837 [3] }
      New connections: { $auto$wreduce.cc:454:run$3837 [5:4] $auto$wreduce.cc:454:run$3837 [2:0] } = 5'00000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2292:
      Old ports: A=7'0001000, B=7'1000000, Y=$auto$wreduce.cc:454:run$3839
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$3839 [6] $auto$wreduce.cc:454:run$3839 [3] }
      New connections: { $auto$wreduce.cc:454:run$3839 [5:4] $auto$wreduce.cc:454:run$3839 [2:0] } = 5'00000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2397:
      Old ports: A={ \kianv_i.register_file_i.rs2_reg_file [7:0] \kianv_i.register_file_i.rs2_reg_file [7:0] }, B=\kianv_i.register_file_i.rs2_reg_file [15:0], Y=$flatten\kianv_i.$2\rs2_store_rslt[31:0] [15:0]
      New ports: A=\kianv_i.register_file_i.rs2_reg_file [7:0], B=\kianv_i.register_file_i.rs2_reg_file [15:8], Y=$flatten\kianv_i.$2\rs2_store_rslt[31:0] [15:8]
      New connections: $flatten\kianv_i.$2\rs2_store_rslt[31:0] [7:0] = \kianv_i.register_file_i.rs2_reg_file [7:0]
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2420:
      Old ports: A={ \kianv_i.div_rslt [30:0] 1'1 }, B={ \kianv_i.div_rslt [30:0] 1'0 }, Y=$flatten\kianv_i.$procmux$2420_Y
      New ports: A=1'1, B=1'0, Y=$flatten\kianv_i.$procmux$2420_Y [0]
      New connections: $flatten\kianv_i.$procmux$2420_Y [31:1] = \kianv_i.div_rslt [30:0]
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2467:
      Old ports: A=3'010, B=3'100, Y=$flatten\kianv_i.$procmux$2467_Y
      New ports: A=2'01, B=2'10, Y=$flatten\kianv_i.$procmux$2467_Y [2:1]
      New connections: $flatten\kianv_i.$procmux$2467_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2478:
      Old ports: A=3'010, B=3'100, Y=$flatten\kianv_i.$procmux$2478_Y
      New ports: A=2'01, B=2'10, Y=$flatten\kianv_i.$procmux$2478_Y [2:1]
      New connections: $flatten\kianv_i.$procmux$2478_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:144$1057:
      Old ports: A=0, B={ \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [19:12] \kianv_i.instr [20] \kianv_i.instr [30:21] 1'0 }, Y=$flatten\kianv_i.$ternary$../kianv.v:144$1057_Y
      New ports: A=20'00000000000000000000, B={ \kianv_i.instr [31] \kianv_i.instr [19:12] \kianv_i.instr [20] \kianv_i.instr [30:21] }, Y=$flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20:1]
      New connections: { $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [31:21] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [0] } = { $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:499$1308:
      Old ports: A={ $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] $auto$wreduce.cc:454:run$3854 [7] }, B=24'000000000000000000000000, Y=$flatten\kianv_i.$1\rs2_load_rslt[31:0] [31:8]
      New ports: A=$auto$wreduce.cc:454:run$3854 [7], B=1'0, Y=$flatten\kianv_i.$1\rs2_load_rslt[31:0] [8]
      New connections: $flatten\kianv_i.$1\rs2_load_rslt[31:0] [31:9] = { $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:505$1316:
      Old ports: A={ $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] $auto$wreduce.cc:454:run$3858 [15] }, B=16'0000000000000000, Y=$flatten\kianv_i.$ternary$../kianv.v:505$1316_Y
      New ports: A=$auto$wreduce.cc:454:run$3858 [15], B=1'0, Y=$flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0]
      New connections: $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [15:1] = { $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] }
    Consolidated identical input bits for $pmux cell $flatten\my_tx_uart_i.$procmux$1788:
      Old ports: A=3'001, B={ 1'0 $flatten\my_tx_uart_i.$ternary$my_tx_uart.v:87$1438_Y [1:0] 3'000 }, Y=$flatten\my_tx_uart_i.$procmux$1788_Y
      New ports: A=2'01, B={ $flatten\my_tx_uart_i.$ternary$my_tx_uart.v:87$1438_Y [1:0] 2'00 }, Y=$flatten\my_tx_uart_i.$procmux$1788_Y [1:0]
      New connections: $flatten\my_tx_uart_i.$procmux$1788_Y [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\oled_ssd1331_i.$procmux$1843:
      Old ports: A=7'1000000, B={ $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$1410_Y [6:3] 3'xxx }, Y=$flatten\oled_ssd1331_i.$procmux$1843_Y
      New ports: A=5'10000, B={ $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$1410_Y [6:3] 1'x }, Y={ $flatten\oled_ssd1331_i.$procmux$1843_Y [6:3] $flatten\oled_ssd1331_i.$procmux$1843_Y [0] }
      New connections: $flatten\oled_ssd1331_i.$procmux$1843_Y [2:1] = { $flatten\oled_ssd1331_i.$procmux$1843_Y [0] $flatten\oled_ssd1331_i.$procmux$1843_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\spi_flash_mem_i.$procmux$1691:
      Old ports: A={ 8'00000011 \spi_flash_mem_i.addr 2'00 }, B={ \spi_flash_mem_i.shift_reg [30:0] 1'0 }, Y=$flatten\spi_flash_mem_i.$procmux$1691_Y
      New ports: A={ 8'00000011 \spi_flash_mem_i.addr 1'0 }, B=\spi_flash_mem_i.shift_reg [30:0], Y=$flatten\spi_flash_mem_i.$procmux$1691_Y [31:1]
      New connections: $flatten\spi_flash_mem_i.$procmux$1691_Y [0] = 1'0
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $auto$share.cc:659:make_supercell$3922:
      Old ports: A=$auto$share.cc:656:make_supercell$3902, B={ \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file }, Y=$auto$share.cc:656:make_supercell$3920
      New ports: A=$auto$share.cc:656:make_supercell$3902 [32], B=\kianv_i.register_file_i.rs1_reg_file [31], Y=$auto$share.cc:656:make_supercell$3920 [32]
      New connections: { $auto$share.cc:656:make_supercell$3920 [63:33] $auto$share.cc:656:make_supercell$3920 [31:0] } = { $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] $auto$share.cc:656:make_supercell$3920 [32] \kianv_i.register_file_i.rs1_reg_file }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2284:
      Old ports: A=6'100000, B=$auto$wreduce.cc:454:run$3835 [5:0], Y=$auto$wreduce.cc:454:run$3836 [5:0]
      New ports: A=2'10, B=$auto$wreduce.cc:454:run$3835 [5:4], Y=$auto$wreduce.cc:454:run$3836 [5:4]
      New connections: $auto$wreduce.cc:454:run$3836 [3:0] = 4'0000
    Consolidated identical input bits for $pmux cell $flatten\kianv_i.$procmux$2290:
      Old ports: A=7'0010000, B={ $auto$wreduce.cc:454:run$3839 $auto$wreduce.cc:454:run$3837 }, Y=$auto$wreduce.cc:454:run$3838
      New ports: A=3'010, B={ $auto$wreduce.cc:454:run$3839 [6] 1'0 $auto$wreduce.cc:454:run$3839 [3] $auto$wreduce.cc:454:run$3837 [6] 1'0 $auto$wreduce.cc:454:run$3837 [3] }, Y={ $auto$wreduce.cc:454:run$3838 [6] $auto$wreduce.cc:454:run$3838 [4:3] }
      New connections: { $auto$wreduce.cc:454:run$3838 [5] $auto$wreduce.cc:454:run$3838 [2:0] } = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2382:
      Old ports: A={ $flatten\kianv_i.$1\rs2_load_rslt[31:0] [31:8] $auto$wreduce.cc:454:run$3854 [7:0] }, B={ $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y $auto$wreduce.cc:454:run$3858 [15:0] }, Y=$flatten\kianv_i.$2\rs2_load_rslt[31:0]
      New ports: A={ $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $flatten\kianv_i.$1\rs2_load_rslt[31:0] [8] $auto$wreduce.cc:454:run$3854 [7:0] }, B={ $flatten\kianv_i.$ternary$../kianv.v:505$1316_Y [0] $auto$wreduce.cc:454:run$3858 [15:0] }, Y=$flatten\kianv_i.$2\rs2_load_rslt[31:0] [16:0]
      New connections: $flatten\kianv_i.$2\rs2_load_rslt[31:0] [31:17] = { $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2388:
      Old ports: A=$flatten\kianv_i.$2\rs2_store_rslt[31:0], B=\kianv_i.register_file_i.rs2_reg_file, Y=\kianv_i.rs2_store_rslt
      New ports: A=$flatten\kianv_i.$2\rs2_store_rslt[31:0] [31:8], B=\kianv_i.register_file_i.rs2_reg_file [31:8], Y=\kianv_i.rs2_store_rslt [31:8]
      New connections: \kianv_i.rs2_store_rslt [7:0] = \kianv_i.register_file_i.rs2_reg_file [7:0]
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:143$1058:
      Old ports: A=$flatten\kianv_i.$ternary$../kianv.v:144$1057_Y, B={ \kianv_i.instr [31:12] 12'000000000000 }, Y=$flatten\kianv_i.$ternary$../kianv.v:143$1058_Y
      New ports: A={ $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$1057_Y [20:1] }, B={ \kianv_i.instr [31:12] 11'00000000000 }, Y=$flatten\kianv_i.$ternary$../kianv.v:143$1058_Y [31:1]
      New connections: $flatten\kianv_i.$ternary$../kianv.v:143$1058_Y [0] = 1'0
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2295:
      Old ports: A=7'0001000, B=$auto$wreduce.cc:454:run$3838, Y=$auto$wreduce.cc:454:run$3840
      New ports: A=3'001, B={ $auto$wreduce.cc:454:run$3838 [6] $auto$wreduce.cc:454:run$3838 [4:3] }, Y={ $auto$wreduce.cc:454:run$3840 [6] $auto$wreduce.cc:454:run$3840 [4:3] }
      New connections: { $auto$wreduce.cc:454:run$3840 [5] $auto$wreduce.cc:454:run$3840 [2:0] } = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:142$1059:
      Old ports: A=$flatten\kianv_i.$ternary$../kianv.v:143$1058_Y, B={ \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [7] \kianv_i.instr [30:25] \kianv_i.instr [11:8] 1'0 }, Y=$flatten\kianv_i.$ternary$../kianv.v:142$1059_Y
      New ports: A=$flatten\kianv_i.$ternary$../kianv.v:143$1058_Y [31:1], B={ \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [7] \kianv_i.instr [30:25] \kianv_i.instr [11:8] }, Y=$flatten\kianv_i.$ternary$../kianv.v:142$1059_Y [31:1]
      New connections: $flatten\kianv_i.$ternary$../kianv.v:142$1059_Y [0] = 1'0
  Optimizing cells in module \kianv_soc.
Performed a total of 26 changes.

9.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.29.6. Executing OPT_DFF pass (perform DFF optimizations).

9.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 48 unused cells and 112 unused wires.
<suppressed ~49 debug messages>

9.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.29.9. Rerunning OPT passes. (Maybe there is more to do..)

9.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~103 debug messages>

9.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$3632 ($dffe) from module kianv_soc.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$3480 ($sdffe) from module kianv_soc.

9.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.29.16. Rerunning OPT passes. (Maybe there is more to do..)

9.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~103 debug messages>

9.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $pmux cell $flatten\my_tx_uart_i.$procmux$1801:
      Old ports: A=3'000, B={ 4'0110 \my_tx_uart_i.return_state [1:0] }, Y=$flatten\my_tx_uart_i.$procmux$1801_Y
      New ports: A=2'00, B={ 2'11 \my_tx_uart_i.return_state [1:0] }, Y=$flatten\my_tx_uart_i.$procmux$1801_Y [1:0]
      New connections: $flatten\my_tx_uart_i.$procmux$1801_Y [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\spi_flash_mem_i.$procmux$1691:
      Old ports: A={ 8'00000011 \spi_flash_mem_i.addr 1'0 }, B={ \spi_flash_mem_i.shift_reg [30:1] 1'0 }, Y=$flatten\spi_flash_mem_i.$procmux$1691_Y [31:1]
      New ports: A={ 8'00000011 \spi_flash_mem_i.addr }, B=\spi_flash_mem_i.shift_reg [30:1], Y=$flatten\spi_flash_mem_i.$procmux$1691_Y [31:2]
      New connections: $flatten\spi_flash_mem_i.$procmux$1691_Y [1] = 1'0
  Optimizing cells in module \kianv_soc.
Performed a total of 2 changes.

9.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.29.20. Executing OPT_DFF pass (perform DFF optimizations).

9.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.29.23. Rerunning OPT passes. (Maybe there is more to do..)

9.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~103 debug messages>

9.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.29.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$3640 ($sdffe) from module kianv_soc.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$3480 ($sdffe) from module kianv_soc.

9.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.29.30. Rerunning OPT passes. (Maybe there is more to do..)

9.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~103 debug messages>

9.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.29.34. Executing OPT_DFF pass (perform DFF optimizations).

9.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.29.37. Finished OPT passes. (There is nothing left to do.)

9.30. Executing ICE40_WRAPCARRY pass (wrap carries).

9.31. Executing TECHMAP pass (map to technology primitives).

9.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

9.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=29\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$da4b7a069bab2d2cb126ab511d2c5f5d67aa4129\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=25\B_WIDTH=1\Y_WIDTH=25 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=25\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper maccmap for cells of type $macc.
  add { $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$1414_Y [6:0] } (32 bits, unsigned)
  add 32'11111111111111111111111111111001 (32 bits, unsigned)
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=40 for cells of type $pmux.
Using template $paramod$constmap:902addbe43b529906d88c60bd6ede384c28df4ef$paramod$6230793eebe04ad83c8503ac734cfafc82049e04\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=11\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:33b894a087f593659774904bb52656098f4c6cf0$paramod$03a8a65dc979377017db9af221c782691965a564\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:1a987e06140b8e46c2ffc4db3cf9131af5625a71$paramod$287c41139d0d42b7c5909a434205abfe2f2d17ea\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=64\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$70c4eba548f8011e647fa410bb9937e224a61f0e\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.
<suppressed ~4324 debug messages>

9.32. Executing OPT pass (performing simple optimizations).

9.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~5626 debug messages>

9.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~6732 debug messages>
Removed a total of 2244 cells.

9.32.3. Executing OPT_DFF pass (perform DFF optimizations).

9.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1396 unused cells and 2948 unused wires.
<suppressed ~1405 debug messages>

9.32.5. Finished fast OPT passes.

9.33. Executing ICE40_OPT pass (performing simple optimizations).

9.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$3955.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3955.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$3966.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3955.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$3977.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3955.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$3988.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3955.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$3997.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3955.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4006.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3955.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4015.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4015.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4020.slice[0].carry: CO=\pwm [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4020.slice[11].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4037.slice[0].carry: CO=\kianv_i.pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4040.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4040.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4043.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4043.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4049.slice[0].carry: CO=\kianv_i.mul_bit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[33].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [33]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[34].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [34]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[35].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [35]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[36].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [36]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[37].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [37]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[38].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [38]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[39].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [39]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[40].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [40]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[41].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [41]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[42].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [42]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[43].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [43]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[44].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [44]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[45].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [45]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[46].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [46]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[47].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [47]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[48].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [48]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[49].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [49]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[50].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [50]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[51].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [51]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[52].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [52]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[53].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [53]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[54].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [54]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[55].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [55]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[56].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [56]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[57].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [57]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[58].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [58]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[59].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [59]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[60].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [60]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[61].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [61]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[62].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [62]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[63].carry: CO=$auto$alumacc.cc:485:replace_alu$4052.C [63]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4055.slice[0].carry: CO=\kianv_i.div_bit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4058.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4058.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4061.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4061.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4064.slice[0].carry: CO=\kianv_i.cycle_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4067.slice[0].carry: CO=\kianv_i.instr_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4091.slice[0].carry: CO=\my_tx_uart_i.bit_idx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4094.slice[0].carry: CO=\my_tx_uart_i.wait_states [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4097.slice[0].carry: CO=\spi_flash_mem_i.shift_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4103.slice[0].carry: CO=\oled_ssd1331_i.rom_addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4106.slice[0].carry: CO=\oled_ssd1331_i.setpixel_cmd_pos [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[0].carry: CO=\oled_ssd1331_i.setpixel_cmd_pos [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$4109.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4112.slice[0].carry: CO=\oled_ssd1331_i.shift_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4109.Y [0]

9.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~92 debug messages>

9.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

9.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$7103 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2476.B_AND_S [5], Q = \kianv_i.mul_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$7102 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2476.Y_B [1], Q = \kianv_i.mul_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11738 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2276.Y_B [6], Q = \kianv_i.cpu_state [6], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11737 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2276.Y_B [5], Q = \kianv_i.cpu_state [5], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11736 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2276.Y_B [4], Q = \kianv_i.cpu_state [4], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11735 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2276.Y_B [3], Q = \kianv_i.cpu_state [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11734 ($_SDFF_PN0_) from module kianv_soc (D = \kianv_i.cpu_state [1], Q = \kianv_i.cpu_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11733 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2276.B_AND_S [43], Q = \kianv_i.cpu_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11732 ($_SDFF_PN1_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2276.Y_B [0], Q = \kianv_i.cpu_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11666 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2465.B_AND_S [5], Q = \kianv_i.div_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$11665 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2465.Y_B [1], Q = \kianv_i.div_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$7541 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1700.Y_B [4], Q = \spi_flash_mem_i.shift_cnt [4], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$7540 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1700.Y_B [3], Q = \spi_flash_mem_i.shift_cnt [3], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$7539 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1700.Y_B [2], Q = \spi_flash_mem_i.shift_cnt [2], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$7538 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1700.Y_B [1], Q = \spi_flash_mem_i.shift_cnt [1], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$7537 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1700.Y_B [0], Q = \spi_flash_mem_i.shift_cnt [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6233 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [63], Q = \kianv_i.mul_rslt [63], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6232 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [62], Q = \kianv_i.mul_rslt [62], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6231 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [61], Q = \kianv_i.mul_rslt [61], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6230 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [60], Q = \kianv_i.mul_rslt [60], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6229 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [59], Q = \kianv_i.mul_rslt [59], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6228 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [58], Q = \kianv_i.mul_rslt [58], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6227 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [57], Q = \kianv_i.mul_rslt [57], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6226 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [56], Q = \kianv_i.mul_rslt [56], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6225 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [55], Q = \kianv_i.mul_rslt [55], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6224 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [54], Q = \kianv_i.mul_rslt [54], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6223 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [53], Q = \kianv_i.mul_rslt [53], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6222 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [52], Q = \kianv_i.mul_rslt [52], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6221 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [51], Q = \kianv_i.mul_rslt [51], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6220 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [50], Q = \kianv_i.mul_rslt [50], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6219 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [49], Q = \kianv_i.mul_rslt [49], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6218 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [48], Q = \kianv_i.mul_rslt [48], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6217 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [47], Q = \kianv_i.mul_rslt [47], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6216 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [46], Q = \kianv_i.mul_rslt [46], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6215 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [45], Q = \kianv_i.mul_rslt [45], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6214 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [44], Q = \kianv_i.mul_rslt [44], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6213 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [43], Q = \kianv_i.mul_rslt [43], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6212 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [42], Q = \kianv_i.mul_rslt [42], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6211 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [41], Q = \kianv_i.mul_rslt [41], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6210 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [40], Q = \kianv_i.mul_rslt [40], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6209 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [39], Q = \kianv_i.mul_rslt [39], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6208 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [38], Q = \kianv_i.mul_rslt [38], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6207 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [37], Q = \kianv_i.mul_rslt [37], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6206 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [36], Q = \kianv_i.mul_rslt [36], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6205 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [35], Q = \kianv_i.mul_rslt [35], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6204 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [34], Q = \kianv_i.mul_rslt [34], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6203 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [33], Q = \kianv_i.mul_rslt [33], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6202 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [32], Q = \kianv_i.mul_rslt [32], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6201 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [31], Q = \kianv_i.mul_rslt [31], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6200 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [30], Q = \kianv_i.mul_rslt [30], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6199 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [29], Q = \kianv_i.mul_rslt [29], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6198 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [28], Q = \kianv_i.mul_rslt [28], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6197 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [27], Q = \kianv_i.mul_rslt [27], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6196 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [26], Q = \kianv_i.mul_rslt [26], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6195 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [25], Q = \kianv_i.mul_rslt [25], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6194 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [24], Q = \kianv_i.mul_rslt [24], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6193 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [23], Q = \kianv_i.mul_rslt [23], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6192 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [22], Q = \kianv_i.mul_rslt [22], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6191 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [21], Q = \kianv_i.mul_rslt [21], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6190 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [20], Q = \kianv_i.mul_rslt [20], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6189 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [19], Q = \kianv_i.mul_rslt [19], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6188 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [18], Q = \kianv_i.mul_rslt [18], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6187 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [17], Q = \kianv_i.mul_rslt [17], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6186 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [16], Q = \kianv_i.mul_rslt [16], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6185 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [15], Q = \kianv_i.mul_rslt [15], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6184 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [14], Q = \kianv_i.mul_rslt [14], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6183 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [13], Q = \kianv_i.mul_rslt [13], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6182 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [12], Q = \kianv_i.mul_rslt [12], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6181 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [11], Q = \kianv_i.mul_rslt [11], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6180 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [10], Q = \kianv_i.mul_rslt [10], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6179 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [9], Q = \kianv_i.mul_rslt [9], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6178 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [8], Q = \kianv_i.mul_rslt [8], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6177 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [7], Q = \kianv_i.mul_rslt [7], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6176 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [6], Q = \kianv_i.mul_rslt [6], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6175 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [5], Q = \kianv_i.mul_rslt [5], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6174 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [4], Q = \kianv_i.mul_rslt [4], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6173 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [3], Q = \kianv_i.mul_rslt [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6172 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [2], Q = \kianv_i.mul_rslt [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6171 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [1], Q = \kianv_i.mul_rslt [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6170 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2529.Y_B [0], Q = \kianv_i.mul_rslt [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5972 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1788.B_AND_S [3], Q = \my_tx_uart_i.return_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5971 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1788.B_AND_S [2], Q = \my_tx_uart_i.return_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5931 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [24], Q = \my_tx_uart_i.wait_states [24], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5930 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [23], Q = \my_tx_uart_i.wait_states [23], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5929 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [22], Q = \my_tx_uart_i.wait_states [22], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5928 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [21], Q = \my_tx_uart_i.wait_states [21], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5927 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [20], Q = \my_tx_uart_i.wait_states [20], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5926 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [19], Q = \my_tx_uart_i.wait_states [19], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5925 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [18], Q = \my_tx_uart_i.wait_states [18], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5924 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [17], Q = \my_tx_uart_i.wait_states [17], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5923 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [16], Q = \my_tx_uart_i.wait_states [16], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5922 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [15], Q = \my_tx_uart_i.wait_states [15], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5921 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [14], Q = \my_tx_uart_i.wait_states [14], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5920 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [13], Q = \my_tx_uart_i.wait_states [13], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5919 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [12], Q = \my_tx_uart_i.wait_states [12], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5918 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [11], Q = \my_tx_uart_i.wait_states [11], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5917 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [10], Q = \my_tx_uart_i.wait_states [10], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5916 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.Y_B [9], Q = \my_tx_uart_i.wait_states [9], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5915 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [8], Q = \my_tx_uart_i.wait_states [8], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5914 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [7], Q = \my_tx_uart_i.wait_states [7], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5913 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [6], Q = \my_tx_uart_i.wait_states [6], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5912 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [5], Q = \my_tx_uart_i.wait_states [5], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5911 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [4], Q = \my_tx_uart_i.wait_states [4], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5910 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.Y_B [3], Q = \my_tx_uart_i.wait_states [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5909 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [2], Q = \my_tx_uart_i.wait_states [2], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5908 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [1], Q = \my_tx_uart_i.wait_states [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5907 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1755.B_AND_S [0], Q = \my_tx_uart_i.wait_states [0], rval = 1'0).

9.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 109 unused cells and 20 unused wires.
<suppressed ~110 debug messages>

9.33.6. Rerunning OPT passes. (Removed registers in this run.)

9.33.7. Running ICE40 specific optimizations.

9.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

9.33.10. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$11046 ($_SDFFE_PN0P_) from module kianv_soc.

9.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 3 unused cells and 10 unused wires.
<suppressed ~4 debug messages>

9.33.12. Rerunning OPT passes. (Removed registers in this run.)

9.33.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4109.C [2]

9.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~3 debug messages>

9.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.33.16. Executing OPT_DFF pass (perform DFF optimizations).

9.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.33.18. Rerunning OPT passes. (Removed registers in this run.)

9.33.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4015.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4015.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4015.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[3].carry: CO=\oled_ssd1331_i.setpixel_cmd_pos [3]

9.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.33.22. Executing OPT_DFF pass (perform DFF optimizations).

9.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

9.33.24. Rerunning OPT passes. (Removed registers in this run.)

9.33.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4015.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4015.BB [3]

9.33.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.33.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.33.28. Executing OPT_DFF pass (perform DFF optimizations).

9.33.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

9.33.30. Rerunning OPT passes. (Removed registers in this run.)

9.33.31. Running ICE40 specific optimizations.

9.33.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.33.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.33.34. Executing OPT_DFF pass (perform DFF optimizations).

9.33.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.33.36. Finished OPT passes. (There is nothing left to do.)

9.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

9.35. Executing TECHMAP pass (map to technology primitives).

9.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

9.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~719 debug messages>

9.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4020.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4020.slice[11].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4037.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4040.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4043.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4049.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4052.slice[32].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4055.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4058.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4061.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4064.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4067.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4091.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4094.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4097.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4103.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4106.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[1].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[3].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4109.slice[7].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4112.slice[0].carry ($lut).
Mapping kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[0].carry ($lut).

9.38. Executing ICE40_OPT pass (performing simple optimizations).

9.38.1. Running ICE40 specific optimizations.

9.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~916 debug messages>

9.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~2790 debug messages>
Removed a total of 930 cells.

9.38.4. Executing OPT_DFF pass (perform DFF optimizations).

9.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 4938 unused wires.
<suppressed ~1 debug messages>

9.38.6. Rerunning OPT passes. (Removed registers in this run.)

9.38.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[2].carry: CO=$auto$maccmap.cc:240:synth$7702.C [2]

9.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~11 debug messages>

9.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.38.10. Executing OPT_DFF pass (perform DFF optimizations).

9.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.38.12. Rerunning OPT passes. (Removed registers in this run.)

9.38.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[3].carry: CO=1'1

9.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~2 debug messages>

9.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.38.16. Executing OPT_DFF pass (perform DFF optimizations).

9.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.38.18. Rerunning OPT passes. (Removed registers in this run.)

9.38.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[4].carry: CO=1'1

9.38.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.38.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.38.22. Executing OPT_DFF pass (perform DFF optimizations).

9.38.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.38.24. Rerunning OPT passes. (Removed registers in this run.)

9.38.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[5].carry: CO=1'1

9.38.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.38.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.38.28. Executing OPT_DFF pass (perform DFF optimizations).

9.38.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.38.30. Rerunning OPT passes. (Removed registers in this run.)

9.38.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$7702.slice[6].carry: CO=1'1

9.38.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.38.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.38.34. Executing OPT_DFF pass (perform DFF optimizations).

9.38.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 26 unused cells and 2 unused wires.
<suppressed ~27 debug messages>

9.38.36. Rerunning OPT passes. (Removed registers in this run.)

9.38.37. Running ICE40 specific optimizations.

9.38.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.38.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.38.40. Executing OPT_DFF pass (perform DFF optimizations).

9.38.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.38.42. Finished OPT passes. (There is nothing left to do.)

9.39. Executing TECHMAP pass (map to technology primitives).

9.39.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

9.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.40. Executing ABC pass (technology mapping using ABC).

9.40.1. Extracting gate netlist of module `\kianv_soc' to `<abc-temp-dir>/input.blif'..
Extracted 5824 gates and 7090 wires to a netlist network with 1264 inputs and 1026 outputs.

9.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1657.
ABC: Participating nodes from both networks       =    3680.
ABC: Participating nodes from the first network   =    1705. (  60.16 % of nodes)
ABC: Participating nodes from the second network  =    1975. (  69.69 % of nodes)
ABC: Node pairs (any polarity)                    =    1705. (  60.16 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1115. (  39.34 % of names can be moved)
ABC: Total runtime =     0.57 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

9.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2833
ABC RESULTS:        internal signals:     4800
ABC RESULTS:           input signals:     1264
ABC RESULTS:          output signals:     1026
Removing temp directory.

9.41. Executing ICE40_WRAPCARRY pass (wrap carries).

9.42. Executing TECHMAP pass (map to technology primitives).

9.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

9.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 243 unused cells and 3257 unused wires.

9.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3450
  1-LUT              227
  2-LUT              865
  3-LUT             1327
  4-LUT             1030

Eliminating LUTs.
Number of LUTs:     3426
  1-LUT              223
  2-LUT              861
  3-LUT             1324
  4-LUT             1018

Combining LUTs.
Number of LUTs:     3315
  1-LUT              220
  2-LUT              738
  3-LUT             1260
  4-LUT             1097

Eliminated 24 LUTs.
Combined 111 LUTs.
<suppressed ~18082 debug messages>

9.44. Executing TECHMAP pass (map to technology primitives).

9.44.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

9.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111011101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000100011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000001110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010000111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111010100101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101110111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101110110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101001010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011101111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110010101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110001011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101010100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001101111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110010000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110011001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
No more expansions possible.
<suppressed ~6113 debug messages>
Removed 0 unused cells and 7367 unused wires.

9.45. Executing AUTONAME pass.
Renamed 289203 objects in module kianv_soc (153 iterations).
<suppressed ~6312 debug messages>

9.46. Executing HIERARCHY pass (managing design hierarchy).

9.46.1. Analyzing design hierarchy..
Top module:  \kianv_soc

9.46.2. Analyzing design hierarchy..
Top module:  \kianv_soc
Removed 0 unused modules.

9.47. Printing statistics.

=== kianv_soc ===

   Number of wires:               1692
   Number of wire bits:           8913
   Number of public wires:        1692
   Number of public wire bits:    8913
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4849
     SB_CARRY                      812
     SB_DFF                         36
     SB_DFFE                        98
     SB_DFFESR                     462
     SB_DFFESS                      20
     SB_DFFSR                       77
     SB_DFFSS                        4
     SB_LUT4                      3315
     SB_PLL40_PAD                    1
     SB_RAM40_4K                    20
     SB_SPRAM256KA                   4

9.48. Executing CHECK pass (checking for obvious problems).
Checking module kianv_soc...
Found and reported 0 problems.

9.49. Executing JSON backend.

End of script. Logfile hash: 87a8c0dc83, CPU: user 13.71s system 0.10s, MEM: 242.76 MB peak
Yosys 0.9+3746 (git sha1 95c60866, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os)
Time spent: 25% 46x opt_expr (4 sec), 16% 1x abc (2 sec), ...
