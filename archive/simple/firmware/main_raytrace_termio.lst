   1              		.file	"main_raytrace_termio.c"
   2              		.option nopic
   3              		.attribute arch, "rv32i2p0_m2p0"
   4              		.attribute unaligned_access, 0
   5              		.attribute stack_align, 16
   6              	# GNU C17 (GCC) version 11.1.0 (riscv32-unknown-elf)
   7              	#	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   8              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   9              	# options passed: -march=rv32im -mabi=ilp32 -mtune=rocket -march=rv32im -O3 -fno-pic -fno-stack-pro
  10              		.text
  11              		.align	2
  12              		.globl	set_reg
  14              	set_reg:
  15              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  16 0000 03270500 		lw	a4,0(a0)		# _1,* p
  17              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  18 0004 93071000 		li	a5,1		# tmp85,
  19 0008 B397B700 		sll	a5,a5,a1	# tmp88, _12, tmp85
  20              	# kianv_stdlib.h:42:     if (bit) {
  21 000c 63080600 		beq	a2,zero,.L2	#, tmp89,,
  22              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  23 0010 B3E7E700 		or	a5,a5,a4	# _1, _5, _12
  24 0014 2320F500 		sw	a5,0(a0)	# _5,* p
  25 0018 67800000 		ret	
  26              	.L2:
  27              	# kianv_stdlib.h:45:       *p &= ~( 0x01 << (gpio & 0x1f));
  28 001c 93C7F7FF 		not	a5,a5	# tmp86, _12
  29              	# kianv_stdlib.h:45:       *p &= ~( 0x01 << (gpio & 0x1f));
  30 0020 B3F7E700 		and	a5,a5,a4	# _13, _18, tmp86
  31 0024 2320F500 		sw	a5,0(a0)	# _18,* p
  32              	# kianv_stdlib.h:47: }
  33 0028 67800000 		ret	
  35              		.align	2
  36              		.globl	gpio_set_value
  38              	gpio_set_value:
  39              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  40 002c 37070030 		li	a4,805306368		# tmp86,
  41 0030 8326C701 		lw	a3,28(a4)		# _4,
  42              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  43 0034 93071000 		li	a5,1		# tmp84,
  44 0038 B397A700 		sll	a5,a5,a0	# tmp94, _19, tmp84
  45              	# kianv_stdlib.h:42:     if (bit) {
  46 003c 63880500 		beq	a1,zero,.L6	#, tmp95,,
  47              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  48 0040 B3E7D700 		or	a5,a5,a3	# _4, _8, _19
  49 0044 232EF700 		sw	a5,28(a4)	# _8,
  50 0048 67800000 		ret	
  51              	.L6:
  52              	# kianv_stdlib.h:45:       *p &= ~( 0x01 << (gpio & 0x1f));
  53 004c 93C7F7FF 		not	a5,a5	# tmp91, _19
  54              	# kianv_stdlib.h:45:       *p &= ~( 0x01 << (gpio & 0x1f));
  55 0050 B3F7D700 		and	a5,a5,a3	# _12, _17, tmp91
  56 0054 232EF700 		sw	a5,28(a4)	# _17,
  57              	# kianv_stdlib.h:51: }
  58 0058 67800000 		ret	
  60              		.align	2
  61              		.globl	gpio_get_input_value
  63              	gpio_get_input_value:
  64              	# kianv_stdlib.h:54:   uint32_t read = IO_IN(GPIO_INPUT);
  65 005c B7070030 		li	a5,805306368		# tmp77,
  66 0060 83A70702 		lw	a5,32(a5)		# read, MEM[(volatile uint32_t *)805306400B]
  67              	# kianv_stdlib.h:57:   return ((read >> gpio) & 0x01);
  68 0064 33D5A700 		srl	a0,a5,a0	# tmp80, tmp79, read
  69              	# kianv_stdlib.h:58: }
  70 0068 13751500 		andi	a0,a0,1	#,, tmp79
  71 006c 67800000 		ret	
  73              		.align	2
  74              		.globl	gpio_set_direction
  76              	gpio_set_direction:
  77              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  78 0070 37070030 		li	a4,805306368		# tmp86,
  79 0074 83264701 		lw	a3,20(a4)		# _4,
  80              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  81 0078 93071000 		li	a5,1		# tmp84,
  82 007c B397A700 		sll	a5,a5,a0	# tmp94, _19, tmp84
  83              	# kianv_stdlib.h:42:     if (bit) {
  84 0080 63880500 		beq	a1,zero,.L10	#, tmp95,,
  85              	# kianv_stdlib.h:43:       *p |=  (0x01 << (gpio & 0x1f));
  86 0084 B3E7D700 		or	a5,a5,a3	# _4, _8, _19
  87 0088 232AF700 		sw	a5,20(a4)	# _8,
  88 008c 67800000 		ret	
  89              	.L10:
  90              	# kianv_stdlib.h:45:       *p &= ~( 0x01 << (gpio & 0x1f));
  91 0090 93C7F7FF 		not	a5,a5	# tmp91, _19
  92              	# kianv_stdlib.h:45:       *p &= ~( 0x01 << (gpio & 0x1f));
  93 0094 B3F7D700 		and	a5,a5,a3	# _12, _17, tmp91
  94 0098 232AF700 		sw	a5,20(a4)	# _17,
  95              	# kianv_stdlib.h:62: }
  96 009c 67800000 		ret	
  98              		.align	2
  99              		.globl	get_cycles
 101              	get_cycles:
 102 00a0 130101FF 		addi	sp,sp,-16	#,,
 103              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 104              	 #APP
 105              	# 68 "kianv_stdlib.h" 1
   1              	#include <stdint.h>
   2              	#include <math.h>
   3              	
   4              	/* kian hardware register */
   5              	#define IO_BASE 0x30000000
   6              	#define UART_TX             (volatile uint32_t *) (IO_BASE + 0x0000)
   7              	#define UART_READY          (volatile uint32_t *) (IO_BASE + 0x0000)
   8              	#define VIDEOENABLE         (volatile uint32_t *) (IO_BASE + 0x0008)
   9              	#define VIDEO               (volatile uint32_t *) (IO_BASE + 0x0008)
  10              	#define VIDEO_RAW           (volatile uint32_t *) (IO_BASE + 0x000C)
  11              	#define CPU_FREQ            (volatile uint32_t *) (IO_BASE + 0x0010)
  12              	// gpio hack stuff
  13              	#define GPIO_DIR            ( volatile uint32_t  *) (IO_BASE + 0x0014)
  14              	#define GPIO_PULLUP         ( volatile uint32_t  *) (IO_BASE + 0x0018) // not implemented
  15              	#define GPIO_OUTPUT         ( volatile uint32_t  *) (IO_BASE + 0x001C)
  16              	#define GPIO_INPUT          ( volatile uint32_t  *) (IO_BASE + 0x0020)
  17              	#define IO_OUT(reg, value) *((volatile uint32_t  *) (reg)) = (value)
  18              	#define IO_IN(reg)         *((volatile uint32_t  *) reg)
  19              	
  20              	#define GPIO_INPUT_PIN  0
  21              	#define GPIO_OUTPUT_PIN 1
  22              	//#define RV32_FASTCODE __attribute((section(".fastcode")))
  23              	#define RV32_FASTCODE
  24              	
  25              	//__attribute((section(".fastcode")))
  26              	
  27              	#define RED   "\x1B[31m"
  28              	#define GRN   "\x1B[32m"
  29              	#define YEL   "\x1B[33m"
  30              	#define BLU   "\x1B[34m"
  31              	#define MAG   "\x1B[35m"
  32              	#define CYN   "\x1B[36m"
  33              	#define WHT   "\x1B[37m"
  34              	#define RESET "\x1B[0m"
  35              	
  36              	#define CLS       "\x1B[2J"
  37              	#define BOLD      "\x1B[1m"
  38              	#define BLINK     "\x1B[5m"
  39              	#define BLINK_OFF "\x1B[25m"
  40              	
  41              	void set_reg(volatile uint32_t *p, int gpio, int bit) {
  42              	    if (bit) {
  43              	      *p |=  (0x01 << (gpio & 0x1f));
  44              	    } else {
  45              	      *p &= ~( 0x01 << (gpio & 0x1f));
  46              	    }
  47              	}
  48              	
  49              	void gpio_set_value(int gpio, int bit) {
  50              	    set_reg(GPIO_OUTPUT, gpio, bit);
  51              	}
  52              	
  53              	uint32_t gpio_get_input_value(int gpio) {
  54              	  uint32_t read = IO_IN(GPIO_INPUT);
  55              	
  56              	  //  return ((read & (1<<gpio)) >> gpio);
  57              	  return ((read >> gpio) & 0x01);
  58              	}
  59              	
  60              	void gpio_set_direction(int gpio, int bit) {
  61              	    set_reg(GPIO_DIR, gpio, bit);
  62              	}
  63              	
  64              	uint64_t get_cycles() {
  65              	  volatile uint32_t tmph0;
  66              	  volatile uint32_t tmpl0;
  67              	
  68 00a4 F32700C8 	  asm volatile ("rdcycleh %0" : "=r"(tmph0));
  69              	  asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 106              		rdcycleh a5	# tmp78
 107              	# 0 "" 2
 108              	 #NO_APP
 109 00a8 2324F100 		sw	a5,8(sp)	# tmp78, tmph0
 110              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 111              	 #APP
 112              	# 69 "kianv_stdlib.h" 1
  70              	
 113              		rdcycle  a5	# tmp79
 114              	# 0 "" 2
 115              	 #NO_APP
 116 00b0 2326F100 		sw	a5,12(sp)	# tmp79, tmpl0
 117              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 118 00b4 83258100 		lw	a1,8(sp)		# tmph0.0_1, tmph0
 119              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 120 00b8 0325C100 		lw	a0,12(sp)		# tmpl0.1_4, tmpl0
 121              	# kianv_stdlib.h:73: }
 122 00bc 13010101 		addi	sp,sp,16	#,,
 123 00c0 67800000 		jr	ra		#
 125              		.align	2
 126              		.globl	wait_cycles
 128              	wait_cycles:
 129 00c4 130101FF 		addi	sp,sp,-16	#,,
 130              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 131              	 #APP
 132              	# 68 "kianv_stdlib.h" 1
 133              		rdcycleh a5	# tmp86
 134              	# 0 "" 2
 135              	 #NO_APP
 136 00cc 2320F100 		sw	a5,0(sp)	# tmp86, tmph0
 137              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 138              	 #APP
 139              	# 69 "kianv_stdlib.h" 1
 140              		rdcycle  a5	# tmp87
 141              	# 0 "" 2
 142              	 #NO_APP
 143 00d4 2322F100 		sw	a5,4(sp)	# tmp87, tmpl0
 144              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 145 00d8 83270100 		lw	a5,0(sp)		# tmph0.0_5, tmph0
 146              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 147 00dc 03264100 		lw	a2,4(sp)		# tmpl0.1_8, tmpl0
 148              	# kianv_stdlib.h:80:   uint64_t lim = get_cycles() + wait;
 149 00e0 B387B700 		add	a5,a5,a1	# wait, tmp126, tmph0.0_5
 150 00e4 3306C500 		add	a2,a0,a2	# tmpl0.1_8, tmp129, wait
 151 00e8 3335A600 		sltu	a0,a2,a0	# wait, tmp98, tmp129
 152 00ec 3307F500 		add	a4,a0,a5	# tmp126, tmp100, tmp98
 153              	.L17:
 154              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 155              	 #APP
 156              	# 68 "kianv_stdlib.h" 1
 157              		rdcycleh a5	# tmp101
 158              	# 0 "" 2
 159              	 #NO_APP
 160 00f4 2324F100 		sw	a5,8(sp)	# tmp101, tmph0
 161              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 162              	 #APP
 163              	# 69 "kianv_stdlib.h" 1
 164              		rdcycle  a5	# tmp102
 165              	# 0 "" 2
 166              	 #NO_APP
 167 00fc 2326F100 		sw	a5,12(sp)	# tmp102, tmpl0
 168              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 169 0100 83278100 		lw	a5,8(sp)		# tmph0.0_11, tmph0
 170              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 171 0104 8326C100 		lw	a3,12(sp)		# tmpl0.1_14, tmpl0
 172              	# kianv_stdlib.h:81:   while (get_cycles() < lim)
 173 0108 E3E4E7FE 		bgtu	a4,a5,.L17	#, tmp100, tmph0.0_11,
 174 010c 6314F700 		bne	a4,a5,.L14	#, tmp100, tmph0.0_11,
 175 0110 E3E0C6FE 		bgtu	a2,a3,.L17	#, tmp129, tmpl0.1_14,
 176              	.L14:
 177              	# kianv_stdlib.h:83: }
 178 0114 13010101 		addi	sp,sp,16	#,,
 179 0118 67800000 		jr	ra		#
 181              		.align	2
 182              		.globl	usleep
 184              	usleep:
 185              	# kianv_stdlib.h:86:   if (us) wait_cycles(us * (get_cpu_freq() / 1000000));
 186 011c 63080506 		beq	a0,zero,.L28	#, us,,
 187              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 188 0120 B7070030 		li	a5,805306368		# tmp91,
 189              	# kianv_stdlib.h:85: void usleep(uint32_t us) {
 190 0124 130101FF 		addi	sp,sp,-16	#,,
 191              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 192 0128 83A70701 		lw	a5,16(a5)		# _20, MEM[(volatile uint32_t *)805306384B]
 193              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 194              	 #APP
 195              	# 68 "kianv_stdlib.h" 1
 196              		rdcycleh a4	# tmp92
 197              	# 0 "" 2
 198              	 #NO_APP
 199 0130 2324E100 		sw	a4,8(sp)	# tmp92, tmph0
 200              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 201              	 #APP
 202              	# 69 "kianv_stdlib.h" 1
 203              		rdcycle  a3	# tmp93
 204              	# 0 "" 2
 205              	# kianv_stdlib.h:86:   if (us) wait_cycles(us * (get_cpu_freq() / 1000000));
 206              	 #NO_APP
 207 0138 37470F00 		li	a4,999424		# tmp97,
 208 013c 13070724 		addi	a4,a4,576	#, tmp96, tmp97
 209 0140 B3D7E702 		divu	a5,a5,a4	# tmp96, tmp95, _20
 210              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 211 0144 2326D100 		sw	a3,12(sp)	# tmp93, tmpl0
 212              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 213 0148 03278100 		lw	a4,8(sp)		# tmph0.0_7, tmph0
 214              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 215 014c 0326C100 		lw	a2,12(sp)		# tmpl0.1_10, tmpl0
 216              	# kianv_stdlib.h:86:   if (us) wait_cycles(us * (get_cpu_freq() / 1000000));
 217 0150 B387A702 		mul	a5,a5,a0	# tmp98, tmp95, us
 218              	# kianv_stdlib.h:80:   uint64_t lim = get_cycles() + wait;
 219 0154 3386C700 		add	a2,a5,a2	# tmpl0.1_10, tmp141, tmp98
 220 0158 B337F600 		sltu	a5,a2,a5	# tmp98, tmp110, tmp141
 221 015c B387E700 		add	a5,a5,a4	# tmph0.0_7, tmp112, tmp110
 222              	.L25:
 223              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 224              	 #APP
 225              	# 68 "kianv_stdlib.h" 1
 226              		rdcycleh a4	# tmp113
 227              	# 0 "" 2
 228              	 #NO_APP
 229 0164 2320E100 		sw	a4,0(sp)	# tmp113, tmph0
 230              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 231              	 #APP
 232              	# 69 "kianv_stdlib.h" 1
 233              		rdcycle  a4	# tmp114
 234              	# 0 "" 2
 235              	 #NO_APP
 236 016c 2322E100 		sw	a4,4(sp)	# tmp114, tmpl0
 237              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 238 0170 03270100 		lw	a4,0(sp)		# tmph0.0_14, tmph0
 239              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 240 0174 83264100 		lw	a3,4(sp)		# tmpl0.1_17, tmpl0
 241              	# kianv_stdlib.h:81:   while (get_cycles() < lim)
 242 0178 E364F7FE 		bgtu	a5,a4,.L25	#, tmp112, tmph0.0_14,
 243 017c 6394E700 		bne	a5,a4,.L19	#, tmp112, tmph0.0_14,
 244 0180 E3E0C6FE 		bgtu	a2,a3,.L25	#, tmp141, tmpl0.1_17,
 245              	.L19:
 246              	# kianv_stdlib.h:87: }
 247 0184 13010101 		addi	sp,sp,16	#,,
 248 0188 67800000 		jr	ra		#
 249              	.L28:
 250 018c 67800000 		ret	
 252              		.align	2
 253              		.globl	msleep
 255              	msleep:
 256              	# kianv_stdlib.h:90:   if (ms) wait_cycles(ms * (get_cpu_freq() / 1000));
 257 0190 63060506 		beq	a0,zero,.L40	#, ms,,
 258              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 259 0194 B7070030 		li	a5,805306368		# tmp91,
 260              	# kianv_stdlib.h:89: void msleep(uint32_t ms) {
 261 0198 130101FF 		addi	sp,sp,-16	#,,
 262              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 263 019c 83A70701 		lw	a5,16(a5)		# _20, MEM[(volatile uint32_t *)805306384B]
 264              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 265              	 #APP
 266              	# 68 "kianv_stdlib.h" 1
 267              		rdcycleh a4	# tmp92
 268              	# 0 "" 2
 269              	 #NO_APP
 270 01a4 2324E100 		sw	a4,8(sp)	# tmp92, tmph0
 271              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 272              	 #APP
 273              	# 69 "kianv_stdlib.h" 1
 274              		rdcycle  a4	# tmp93
 275              	# 0 "" 2
 276              	# kianv_stdlib.h:90:   if (ms) wait_cycles(ms * (get_cpu_freq() / 1000));
 277              	 #NO_APP
 278 01ac 9306803E 		li	a3,1000		# tmp95,
 279 01b0 B3D7D702 		divu	a5,a5,a3	# tmp95, tmp96, _20
 280              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 281 01b4 2326E100 		sw	a4,12(sp)	# tmp93, tmpl0
 282              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 283 01b8 03278100 		lw	a4,8(sp)		# tmph0.0_7, tmph0
 284              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 285 01bc 0326C100 		lw	a2,12(sp)		# tmpl0.1_10, tmpl0
 286              	# kianv_stdlib.h:90:   if (ms) wait_cycles(ms * (get_cpu_freq() / 1000));
 287 01c0 B387A702 		mul	a5,a5,a0	# tmp97, tmp96, ms
 288              	# kianv_stdlib.h:80:   uint64_t lim = get_cycles() + wait;
 289 01c4 3386C700 		add	a2,a5,a2	# tmpl0.1_10, tmp140, tmp97
 290 01c8 B337F600 		sltu	a5,a2,a5	# tmp97, tmp109, tmp140
 291 01cc B387E700 		add	a5,a5,a4	# tmph0.0_7, tmp111, tmp109
 292              	.L37:
 293              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 294              	 #APP
 295              	# 68 "kianv_stdlib.h" 1
 296              		rdcycleh a4	# tmp112
 297              	# 0 "" 2
 298              	 #NO_APP
 299 01d4 2320E100 		sw	a4,0(sp)	# tmp112, tmph0
 300              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 301              	 #APP
 302              	# 69 "kianv_stdlib.h" 1
 303              		rdcycle  a4	# tmp113
 304              	# 0 "" 2
 305              	 #NO_APP
 306 01dc 2322E100 		sw	a4,4(sp)	# tmp113, tmpl0
 307              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 308 01e0 03270100 		lw	a4,0(sp)		# tmph0.0_14, tmph0
 309              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 310 01e4 83264100 		lw	a3,4(sp)		# tmpl0.1_17, tmpl0
 311              	# kianv_stdlib.h:81:   while (get_cycles() < lim)
 312 01e8 E364F7FE 		bgtu	a5,a4,.L37	#, tmp111, tmph0.0_14,
 313 01ec 6394E700 		bne	a5,a4,.L31	#, tmp111, tmph0.0_14,
 314 01f0 E3E0C6FE 		bgtu	a2,a3,.L37	#, tmp140, tmpl0.1_17,
 315              	.L31:
 316              	# kianv_stdlib.h:91: }
 317 01f4 13010101 		addi	sp,sp,16	#,,
 318 01f8 67800000 		jr	ra		#
 319              	.L40:
 320 01fc 67800000 		ret	
 322              		.align	2
 323              		.globl	sleep
 325              	sleep:
 326              	# kianv_stdlib.h:94:   if (sec) wait_cycles(sec * get_cpu_freq());
 327 0200 63020506 		beq	a0,zero,.L52	#, sec,,
 328              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 329 0204 B7070030 		li	a5,805306368		# tmp90,
 330              	# kianv_stdlib.h:93: void sleep(uint32_t sec) {
 331 0208 130101FF 		addi	sp,sp,-16	#,,
 332              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 333 020c 03A70701 		lw	a4,16(a5)		# _19, MEM[(volatile uint32_t *)805306384B]
 334              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 335              	 #APP
 336              	# 68 "kianv_stdlib.h" 1
 337              		rdcycleh a5	# tmp91
 338              	# 0 "" 2
 339              	 #NO_APP
 340 0214 2324F100 		sw	a5,8(sp)	# tmp91, tmph0
 341              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 342              	 #APP
 343              	# 69 "kianv_stdlib.h" 1
 344              		rdcycle  a5	# tmp92
 345              	# 0 "" 2
 346              	# kianv_stdlib.h:94:   if (sec) wait_cycles(sec * get_cpu_freq());
 347              	 #NO_APP
 348 021c 3305E502 		mul	a0,a0,a4	# tmp101, sec, _19
 349              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 350 0220 2326F100 		sw	a5,12(sp)	# tmp92, tmpl0
 351              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 352 0224 83278100 		lw	a5,8(sp)		# tmph0.0_6, tmph0
 353              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 354 0228 0327C100 		lw	a4,12(sp)		# tmpl0.1_9, tmpl0
 355              	# kianv_stdlib.h:80:   uint64_t lim = get_cycles() + wait;
 356 022c 3305A700 		add	a0,a4,a0	# tmp101, tmp136, tmpl0.1_9
 357 0230 3337E500 		sltu	a4,a0,a4	# tmpl0.1_9, tmp105, tmp136
 358 0234 3307F700 		add	a4,a4,a5	# tmph0.0_6, tmp107, tmp105
 359              	.L49:
 360              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 361              	 #APP
 362              	# 68 "kianv_stdlib.h" 1
 363              		rdcycleh a5	# tmp108
 364              	# 0 "" 2
 365              	 #NO_APP
 366 023c 2320F100 		sw	a5,0(sp)	# tmp108, tmph0
 367              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 368              	 #APP
 369              	# 69 "kianv_stdlib.h" 1
 370              		rdcycle  a5	# tmp109
 371              	# 0 "" 2
 372              	 #NO_APP
 373 0244 2322F100 		sw	a5,4(sp)	# tmp109, tmpl0
 374              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 375 0248 83270100 		lw	a5,0(sp)		# tmph0.0_13, tmph0
 376              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 377 024c 83264100 		lw	a3,4(sp)		# tmpl0.1_16, tmpl0
 378              	# kianv_stdlib.h:81:   while (get_cycles() < lim)
 379 0250 E3E4E7FE 		bgtu	a4,a5,.L49	#, tmp107, tmph0.0_13,
 380 0254 6314F700 		bne	a4,a5,.L43	#, tmp107, tmph0.0_13,
 381 0258 E3E0A6FE 		bgtu	a0,a3,.L49	#, tmp136, tmpl0.1_16,
 382              	.L43:
 383              	# kianv_stdlib.h:95: }
 384 025c 13010101 		addi	sp,sp,16	#,,
 385 0260 67800000 		jr	ra		#
 386              	.L52:
 387 0264 67800000 		ret	
 389              		.globl	__udivdi3
 390              		.align	2
 391              		.globl	nanoseconds
 393              	nanoseconds:
 394 0268 130101FE 		addi	sp,sp,-32	#,,
 395 026c 232E1100 		sw	ra,28(sp)	#,
 396              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 397              	 #APP
 398              	# 68 "kianv_stdlib.h" 1
 399              		rdcycleh a5	# tmp82
 400              	# 0 "" 2
 401              	 #NO_APP
 402 0274 2324F100 		sw	a5,8(sp)	# tmp82, tmph0
 403              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 404              	 #APP
 405              	# 69 "kianv_stdlib.h" 1
 406              		rdcycle  a5	# tmp83
 407              	# 0 "" 2
 408              	 #NO_APP
 409 027c 2326F100 		sw	a5,12(sp)	# tmp83, tmpl0
 410              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 411 0280 B7070030 		li	a5,805306368		# tmp85,
 412              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 413 0284 83258100 		lw	a1,8(sp)		# tmph0.0_6, tmph0
 414              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 415 0288 0325C100 		lw	a0,12(sp)		# tmpl0.1_9, tmpl0
 416              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 417 028c 03A60701 		lw	a2,16(a5)		# _5, MEM[(volatile uint32_t *)805306384B]
 418              	# kianv_stdlib.h:98:   return get_cycles() / (uint64_t) (get_cpu_freq() / 1000000);
 419 0290 B7470F00 		li	a5,999424		# tmp98,
 420 0294 93870724 		addi	a5,a5,576	#, tmp97, tmp98
 421              	# kianv_stdlib.h:98:   return get_cycles() / (uint64_t) (get_cpu_freq() / 1000000);
 422 0298 3356F602 		divu	a2,a2,a5	# tmp97,, _5
 423 029c 93060000 		li	a3,0		#,
 424 02a0 97000000 		call	__udivdi3		#
 424      E7800000 
 425              	# kianv_stdlib.h:99: }
 426 02a8 8320C101 		lw	ra,28(sp)		#,
 427 02ac 13010102 		addi	sp,sp,32	#,,
 428 02b0 67800000 		jr	ra		#
 430              		.align	2
 431              		.globl	milliseconds
 433              	milliseconds:
 434 02b4 130101FE 		addi	sp,sp,-32	#,,
 435 02b8 232E1100 		sw	ra,28(sp)	#,
 436              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 437              	 #APP
 438              	# 68 "kianv_stdlib.h" 1
 439              		rdcycleh a5	# tmp82
 440              	# 0 "" 2
 441              	 #NO_APP
 442 02c0 2324F100 		sw	a5,8(sp)	# tmp82, tmph0
 443              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 444              	 #APP
 445              	# 69 "kianv_stdlib.h" 1
 446              		rdcycle  a5	# tmp83
 447              	# 0 "" 2
 448              	 #NO_APP
 449 02c8 2326F100 		sw	a5,12(sp)	# tmp83, tmpl0
 450              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 451 02cc B7070030 		li	a5,805306368		# tmp85,
 452              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 453 02d0 83258100 		lw	a1,8(sp)		# tmph0.0_6, tmph0
 454              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 455 02d4 0325C100 		lw	a0,12(sp)		# tmpl0.1_9, tmpl0
 456              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 457 02d8 03A60701 		lw	a2,16(a5)		# _5, MEM[(volatile uint32_t *)805306384B]
 458              	# kianv_stdlib.h:102:   return get_cycles() / (uint64_t) (get_cpu_freq() / 1000);
 459 02dc 9307803E 		li	a5,1000		# tmp96,
 460 02e0 93060000 		li	a3,0		#,
 461 02e4 3356F602 		divu	a2,a2,a5	# tmp96,, _5
 462 02e8 97000000 		call	__udivdi3		#
 462      E7800000 
 463              	# kianv_stdlib.h:103: }
 464 02f0 8320C101 		lw	ra,28(sp)		#,
 465 02f4 13010102 		addi	sp,sp,32	#,,
 466 02f8 67800000 		jr	ra		#
 468              		.align	2
 469              		.globl	seconds
 471              	seconds:
 472 02fc 130101FE 		addi	sp,sp,-32	#,,
 473 0300 232E1100 		sw	ra,28(sp)	#,
 474              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 475              	 #APP
 476              	# 68 "kianv_stdlib.h" 1
 477              		rdcycleh a5	# tmp81
 478              	# 0 "" 2
 479              	 #NO_APP
 480 0308 2324F100 		sw	a5,8(sp)	# tmp81, tmph0
 481              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 482              	 #APP
 483              	# 69 "kianv_stdlib.h" 1
 484              		rdcycle  a5	# tmp82
 485              	# 0 "" 2
 486              	 #NO_APP
 487 0310 2326F100 		sw	a5,12(sp)	# tmp82, tmpl0
 488              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 489 0314 B7070030 		li	a5,805306368		# tmp84,
 490              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 491 0318 83258100 		lw	a1,8(sp)		# tmph0.0_5, tmph0
 492              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 493 031c 0325C100 		lw	a0,12(sp)		# tmpl0.1_8, tmpl0
 494              	# kianv_stdlib.h:76:   return *((volatile uint32_t*) CPU_FREQ);
 495 0320 03A60701 		lw	a2,16(a5)		# _4, MEM[(volatile uint32_t *)805306384B]
 496              	# kianv_stdlib.h:106:   return get_cycles() / (uint64_t) (get_cpu_freq());
 497 0324 93060000 		li	a3,0		#,
 498 0328 97000000 		call	__udivdi3		#
 498      E7800000 
 499              	# kianv_stdlib.h:107: }
 500 0330 8320C101 		lw	ra,28(sp)		#,
 501 0334 13010102 		addi	sp,sp,32	#,,
 502 0338 67800000 		jr	ra		#
 504              		.align	2
 505              		.globl	putchar
 507              	putchar:
 508              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 509 033c 37070030 		li	a4,805306368		# tmp75,
 510              	.L62:
 511              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 512 0340 83270700 		lw	a5,0(a4)		# _1, MEM[(volatile uint32_t *)805306368B]
 513              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 514 0344 E38E07FE 		beq	a5,zero,.L62	#, _1,,
 515              	# kianv_stdlib.h:112:   *((volatile uint32_t*) UART_TX) = c;
 516 0348 2320A700 		sw	a0,0(a4)	# c, MEM[(volatile uint32_t *)805306368B]
 517              	# kianv_stdlib.h:113: }
 518 034c 67800000 		ret	
 520              		.align	2
 521              		.globl	print_chr
 523              	print_chr:
 524 0350 37070030 		li	a4,805306368		# tmp75,
 525              	.L66:
 526 0354 83270700 		lw	a5,0(a4)		# _4, MEM[(volatile uint32_t *)805306368B]
 527 0358 E38E07FE 		beq	a5,zero,.L66	#, _4,,
 528 035c 2320A700 		sw	a0,0(a4)	# ch, MEM[(volatile uint32_t *)805306368B]
 529 0360 67800000 		ret	
 531              		.align	2
 532              		.globl	print_str
 534              	print_str:
 535              	# kianv_stdlib.h:122:   while (*p != 0) {
 536 0364 83460500 		lbu	a3,0(a0)	# _3, *p_6(D)
 537              	# kianv_stdlib.h:122:   while (*p != 0) {
 538 0368 63800602 		beq	a3,zero,.L69	#, _3,,
 539              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 540 036c 37070030 		li	a4,805306368		# tmp76,
 541              	.L71:
 542              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 543 0370 83270700 		lw	a5,0(a4)		# _1, MEM[(volatile uint32_t *)805306368B]
 544              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 545 0374 E38E07FE 		beq	a5,zero,.L71	#, _1,,
 546              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 547 0378 13051500 		addi	a0,a0,1	#, p, p
 548              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 549 037c 2320D700 		sw	a3,0(a4)	# _3, MEM[(volatile uint32_t *)805306368B]
 550              	# kianv_stdlib.h:122:   while (*p != 0) {
 551 0380 83460500 		lbu	a3,0(a0)	# _3, MEM[(char *)p_8]
 552              	# kianv_stdlib.h:122:   while (*p != 0) {
 553 0384 E39606FE 		bne	a3,zero,.L71	#, _3,,
 554              	.L69:
 555              	# kianv_stdlib.h:127: }
 556 0388 67800000 		ret	
 558              		.align	2
 559              		.globl	print_str_ln
 561              	print_str_ln:
 562              	# kianv_stdlib.h:122:   while (*p != 0) {
 563 038c 83460500 		lbu	a3,0(a0)	# _7, *p_2(D)
 564              	# kianv_stdlib.h:122:   while (*p != 0) {
 565 0390 63800602 		beq	a3,zero,.L80	#, _7,,
 566              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 567 0394 37070030 		li	a4,805306368		# tmp77,
 568              	.L81:
 569 0398 83270700 		lw	a5,0(a4)		# _4, MEM[(volatile uint32_t *)805306368B]
 570              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 571 039c E38E07FE 		beq	a5,zero,.L81	#, _4,,
 572              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 573 03a0 13051500 		addi	a0,a0,1	#, p, p
 574              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 575 03a4 2320D700 		sw	a3,0(a4)	# _7, MEM[(volatile uint32_t *)805306368B]
 576              	# kianv_stdlib.h:122:   while (*p != 0) {
 577 03a8 83460500 		lbu	a3,0(a0)	# _7, MEM[(char *)p_6]
 578              	# kianv_stdlib.h:122:   while (*p != 0) {
 579 03ac E39606FE 		bne	a3,zero,.L81	#, _7,,
 580              	.L80:
 581              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 582 03b0 37070030 		li	a4,805306368		# tmp79,
 583              	.L83:
 584 03b4 83270700 		lw	a5,0(a4)		# _3, MEM[(volatile uint32_t *)805306368B]
 585              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 586 03b8 E38E07FE 		beq	a5,zero,.L83	#, _3,,
 587              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 588 03bc 9307A000 		li	a5,10		# tmp81,
 589 03c0 2320F700 		sw	a5,0(a4)	# tmp81, MEM[(volatile uint32_t *)805306368B]
 590              	# kianv_stdlib.h:131: }
 591 03c4 67800000 		ret	
 593              		.align	2
 594              		.globl	print_dec
 596              	print_dec:
 597 03c8 130101FF 		addi	sp,sp,-16	#,,
 598              	# kianv_stdlib.h:135:   char *p = buffer;
 599 03cc 13064100 		addi	a2,sp,4	#, tmp92,
 600 03d0 13070600 		mv	a4,a2	# p, tmp92
 601              	# kianv_stdlib.h:137:     *(p++) = val % 10;
 602 03d4 9307A000 		li	a5,10		# tmp93,
 603              	.L93:
 604              	# kianv_stdlib.h:136:   while (val || p == buffer) {
 605 03d8 63140500 		bne	a0,zero,.L94	#, val,,
 606              	# kianv_stdlib.h:136:   while (val || p == buffer) {
 607 03dc 631CC700 		bne	a4,a2,.L101	#, p, tmp92,
 608              	.L94:
 609              	# kianv_stdlib.h:137:     *(p++) = val % 10;
 610 03e0 B376F502 		remu	a3,a0,a5	# tmp93, tmp83, val
 611              	# kianv_stdlib.h:137:     *(p++) = val % 10;
 612 03e4 13071700 		addi	a4,a4,1	#, p, p
 613              	# kianv_stdlib.h:138:     val = val / 10;
 614 03e8 3355F502 		divu	a0,a0,a5	# tmp93, val, val
 615              	# kianv_stdlib.h:137:     *(p++) = val % 10;
 616 03ec A30FD7FE 		sb	a3,-1(a4)	# tmp83, MEM[(char *)p_18 + 4294967295B]
 617 03f0 6FF09FFE 		j	.L93		#
 618              	.L101:
 619              	# kianv_stdlib.h:142:     while (!*((volatile uint32_t*) UART_READY))
 620 03f4 B7060030 		li	a3,805306368		# tmp88,
 621              	.L95:
 622              	# kianv_stdlib.h:142:     while (!*((volatile uint32_t*) UART_READY))
 623 03f8 83A70600 		lw	a5,0(a3)		# _3, MEM[(volatile uint32_t *)805306368B]
 624              	# kianv_stdlib.h:142:     while (!*((volatile uint32_t*) UART_READY))
 625 03fc E38E07FE 		beq	a5,zero,.L95	#, _3,,
 626              	# kianv_stdlib.h:144:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 627 0400 8347F7FF 		lbu	a5,-1(a4)	# MEM[(char *)p_16], MEM[(char *)p_16]
 628              	# kianv_stdlib.h:144:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 629 0404 1307F7FF 		addi	a4,a4,-1	#, p, p
 630              	# kianv_stdlib.h:144:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 631 0408 93870703 		addi	a5,a5,48	#, _7, MEM[(char *)p_16]
 632              	# kianv_stdlib.h:144:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 633 040c 23A0F600 		sw	a5,0(a3)	# _7, MEM[(volatile uint32_t *)805306368B]
 634              	# kianv_stdlib.h:141:   while (p != buffer) {
 635 0410 E314C7FE 		bne	a4,a2,.L95	#, p, tmp92,
 636              	# kianv_stdlib.h:146: }
 637 0414 13010101 		addi	sp,sp,16	#,,
 638 0418 67800000 		jr	ra		#
 640              		.align	2
 641              		.globl	print_dec64
 643              	print_dec64:
 644 041c 130101FE 		addi	sp,sp,-32	#,,
 645              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 646 0420 B7DECCCC 		li	t4,-858992640		# tmp258,
 647              	# kianv_stdlib.h:150:   char *p = buffer;
 648 0424 130EC100 		addi	t3,sp,12	#, tmp254,
 649              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 650 0428 37030010 		li	t1,268435456		# tmp255,
 651 042c 9388DECC 		addi	a7,t4,-819	#, tmp259, tmp258
 652              	# kianv_stdlib.h:148: void print_dec64(uint64_t val) {
 653 0430 13070500 		mv	a4,a0	# val, tmp261
 654 0434 13880500 		mv	a6,a1	# val, tmp262
 655              	# kianv_stdlib.h:150:   char *p = buffer;
 656 0438 13060E00 		mv	a2,t3	# p, tmp254
 657              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 658 043c 1303F3FF 		addi	t1,t1,-1	#, tmp256, tmp255
 659 0440 130F5000 		li	t5,5		# tmp257,
 660 0444 938ECECC 		addi	t4,t4,-820	#, tmp260, tmp258
 661              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 662 0448 6F008005 		j	.L103		#
 663              	.L104:
 664              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 665 044c B3F7E703 		remu	a5,a5,t5	# tmp257, tmp97, tmp94
 666              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 667 0450 13061600 		addi	a2,a2,1	#, p, p
 668              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 669 0454 B307F740 		sub	a5,a4,a5	# tmp214, val, tmp97
 670 0458 B335F700 		sgtu	a1,a5,a4	# tmp101, tmp214, val
 671 045c B305B840 		sub	a1,a6,a1	# tmp103, val, tmp101
 672 0460 3385D703 		mul	a0,a5,t4	# tmp107, tmp214, tmp260
 673 0464 B3851503 		mul	a1,a1,a7	# tmp104, tmp103, tmp259
 674 0468 B3B61703 		mulhu	a3,a5,a7	# tmp217, tmp214, tmp259
 675 046c B385A500 		add	a1,a1,a0	# tmp107, tmp110, tmp104
 676 0470 B3871703 		mul	a5,a5,a7	# tmp114, tmp214, tmp259
 677 0474 B385D500 		add	a1,a1,a3	# tmp217, tmp115, tmp110
 678 0478 9396F501 		slli	a3,a1,31	#, tmp133, tmp115
 679              	# kianv_stdlib.h:153:     val = val / 10;
 680 047c 13D81500 		srli	a6,a1,1	#, val, tmp115
 681              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 682 0480 93D71700 		srli	a5,a5,1	#, tmp224, tmp114
 683 0484 B3E7F600 		or	a5,a3,a5	# tmp224, tmp224, tmp133
 684 0488 13952700 		slli	a0,a5,2	#, tmp228, tmp224
 685 048c 3305F500 		add	a0,a0,a5	# tmp224, tmp230, tmp228
 686 0490 13151500 		slli	a0,a0,1	#, tmp232, tmp230
 687 0494 3305A740 		sub	a0,a4,a0	# tmp234, val, tmp232
 688              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 689 0498 A30FA6FE 		sb	a0,-1(a2)	# tmp234, MEM[(char *)p_18 + 4294967295B]
 690              	# kianv_stdlib.h:153:     val = val / 10;
 691 049c 13870700 		mv	a4,a5	# val, tmp224
 692              	.L103:
 693              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 694 04a0 93174800 		slli	a5,a6,4	#, tmp88, val
 695 04a4 9356C701 		srli	a3,a4,28	#, tmp208, val
 696 04a8 B3E6D700 		or	a3,a5,a3	# tmp208, tmp208, tmp88
 697 04ac B3F66600 		and	a3,a3,t1	# tmp256, tmp89, tmp208
 698 04b0 B3776700 		and	a5,a4,t1	# tmp256, tmp84, val
 699 04b4 B387D700 		add	a5,a5,a3	# tmp89, tmp92, tmp84
 700 04b8 93558801 		srli	a1,a6,24	#, tmp210, val
 701              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 702 04bc B3660701 		or	a3,a4,a6	# val, val, val
 703              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 704 04c0 B387B700 		add	a5,a5,a1	# tmp210, tmp94, tmp92
 705              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 706 04c4 E39406F8 		bne	a3,zero,.L104	#, val,,
 707              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 708 04c8 E302C6F9 		beq	a2,t3,.L104	#, p, tmp254,
 709              	# kianv_stdlib.h:157:     while (!*((volatile uint32_t*) UART_READY))
 710 04cc 37070030 		li	a4,805306368		# tmp202,
 711              	.L105:
 712              	# kianv_stdlib.h:157:     while (!*((volatile uint32_t*) UART_READY))
 713 04d0 83270700 		lw	a5,0(a4)		# _3, MEM[(volatile uint32_t *)805306368B]
 714              	# kianv_stdlib.h:157:     while (!*((volatile uint32_t*) UART_READY))
 715 04d4 E38E07FE 		beq	a5,zero,.L105	#, _3,,
 716              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 717 04d8 8347F6FF 		lbu	a5,-1(a2)	# MEM[(char *)p_16], MEM[(char *)p_16]
 718              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 719 04dc 1306F6FF 		addi	a2,a2,-1	#, p, p
 720              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 721 04e0 93870703 		addi	a5,a5,48	#, _7, MEM[(char *)p_16]
 722              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 723 04e4 2320F700 		sw	a5,0(a4)	# _7, MEM[(volatile uint32_t *)805306368B]
 724              	# kianv_stdlib.h:156:   while (p != buffer) {
 725 04e8 E314C6FF 		bne	a2,t3,.L105	#, p, tmp254,
 726              	# kianv_stdlib.h:161: }
 727 04ec 13010102 		addi	sp,sp,32	#,,
 728 04f0 67800000 		jr	ra		#
 730              		.section	.rodata.str1.4,"aMS",@progbits,1
 731              		.align	2
 732              	.LC0:
 733 0000 30313233 		.string	"0123456789ABCDEF"
 733      34353637 
 733      38394142 
 733      43444546 
 733      00
 734              		.text
 735              		.align	2
 736              		.globl	print_hex
 738              	print_hex:
 739              	# kianv_stdlib.h:164:   for (int i = (4*digits)-4; i >= 0; i -= 4) {
 740 04f4 9386F5FF 		addi	a3,a1,-1	#, tmp85, tmp98
 741              	# kianv_stdlib.h:164:   for (int i = (4*digits)-4; i >= 0; i -= 4) {
 742 04f8 93962600 		slli	a3,a3,2	#, i, tmp85
 743              	# kianv_stdlib.h:164:   for (int i = (4*digits)-4; i >= 0; i -= 4) {
 744 04fc 63CC0602 		blt	a3,zero,.L111	#, i,,
 745 0500 37060000 		lui	a2,%hi(.LC0)	# tmp95,
 746 0504 9305C0FF 		li	a1,-4		# _8,
 747 0508 13060600 		addi	a2,a2,%lo(.LC0)	# tmp94, tmp95,
 748              	# kianv_stdlib.h:165:     while (!*((volatile uint32_t*) UART_READY))
 749 050c 37070030 		li	a4,805306368		# tmp87,
 750              	.L113:
 751              	# kianv_stdlib.h:165:     while (!*((volatile uint32_t*) UART_READY))
 752 0510 83270700 		lw	a5,0(a4)		# _2, MEM[(volatile uint32_t *)805306368B]
 753              	# kianv_stdlib.h:165:     while (!*((volatile uint32_t*) UART_READY))
 754 0514 E38E07FE 		beq	a5,zero,.L113	#, _2,,
 755              	# kianv_stdlib.h:167:     *((volatile uint32_t*) UART_TX) = "0123456789ABCDEF"[(val >> i) % 16];
 756 0518 B357D500 		srl	a5,a0,a3	# i, tmp90, val
 757              	# kianv_stdlib.h:167:     *((volatile uint32_t*) UART_TX) = "0123456789ABCDEF"[(val >> i) % 16];
 758 051c 93F7F700 		andi	a5,a5,15	#, tmp91, tmp90
 759              	# kianv_stdlib.h:167:     *((volatile uint32_t*) UART_TX) = "0123456789ABCDEF"[(val >> i) % 16];
 760 0520 B307F600 		add	a5,a2,a5	# tmp91, tmp92, tmp94
 761 0524 83C70700 		lbu	a5,0(a5)	# _6, "0123456789ABCDEF"[_4]
 762              	# kianv_stdlib.h:164:   for (int i = (4*digits)-4; i >= 0; i -= 4) {
 763 0528 9386C6FF 		addi	a3,a3,-4	#, i, i
 764              	# kianv_stdlib.h:167:     *((volatile uint32_t*) UART_TX) = "0123456789ABCDEF"[(val >> i) % 16];
 765 052c 2320F700 		sw	a5,0(a4)	# _6, MEM[(volatile uint32_t *)805306368B]
 766              	# kianv_stdlib.h:164:   for (int i = (4*digits)-4; i >= 0; i -= 4) {
 767 0530 E390D5FE 		bne	a1,a3,.L113	#, _8, i,
 768              	.L111:
 769              	# kianv_stdlib.h:169: }
 770 0534 67800000 		ret	
 772              		.align	2
 773              		.globl	setpixel
 775              	setpixel:
 776              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 777 0538 B7070100 		li	a5,65536		# tmp88,
 778 053c 9387F7FF 		addi	a5,a5,-1	#, tmp87, tmp88
 779 0540 93958500 		slli	a1,a1,8	#, tmp85, tmp94
 780 0544 B3F5F500 		and	a1,a1,a5	# tmp87, tmp86, tmp85
 781              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 782 0548 93960601 		slli	a3,a3,16	#, tmp89, tmp96
 783              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 784 054c B3E5D500 		or	a1,a1,a3	# tmp89, tmp90, tmp86
 785              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 786 0550 1376F60F 		andi	a2,a2,0xff	# tmp91, tmp95
 787              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 788 0554 B3E5C500 		or	a1,a1,a2	# tmp91, _9, tmp90
 789              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 790 0558 B7070030 		li	a5,805306368		# tmp93,
 791 055c 23A4B700 		sw	a1,8(a5)	# _9, MEM[(volatile uint32_t *)805306376B]
 792              	# kianv_stdlib.h:184: }
 793 0560 67800000 		ret	
 795              		.align	2
 796              		.globl	draw_bresenham
 798              	draw_bresenham:
 799 0564 130101FE 		addi	sp,sp,-32	#,,
 800              	# kianv_stdlib.h:189:   int dx =  abs(x1 - x0);
 801 0568 3385B640 		sub	a0,a3,a1	#, x1, x0
 802              	# kianv_stdlib.h:187: {
 803 056c 232E1100 		sw	ra,28(sp)	#,
 804 0570 232C8100 		sw	s0,24(sp)	#,
 805 0574 232A9100 		sw	s1,20(sp)	#,
 806 0578 13840500 		mv	s0,a1	# x0, tmp114
 807 057c 93040600 		mv	s1,a2	# y0, tmp115
 808 0580 23282101 		sw	s2,16(sp)	#,
 809 0584 23263101 		sw	s3,12(sp)	#,
 810 0588 23244101 		sw	s4,8(sp)	#,
 811 058c 93890700 		mv	s3,a5	# color, tmp118
 812 0590 138A0600 		mv	s4,a3	# x1, tmp116
 813 0594 23225101 		sw	s5,4(sp)	#,
 814 0598 23206101 		sw	s6,0(sp)	#,
 815              	# kianv_stdlib.h:187: {
 816 059c 130B0700 		mv	s6,a4	# y1, tmp117
 817              	# kianv_stdlib.h:189:   int dx =  abs(x1 - x0);
 818 05a0 97000000 		call	abs		#
 818      E7800000 
 819 05a8 13090500 		mv	s2,a0	# tmp119,
 820              	# kianv_stdlib.h:191:   int dy = -abs(y1 - y0);
 821 05ac 33059B40 		sub	a0,s6,s1	#, y1, y0
 822 05b0 97000000 		call	abs		#
 822      E7800000 
 823              	# kianv_stdlib.h:190:   int sx = x0 < x1 ? 1 : -1;
 824 05b8 B32A4401 		sgt	s5,s4,s0	# tmp109, x1, x0
 825              	# kianv_stdlib.h:192:   int sy = y0 < y1 ? 1 : -1;
 826 05bc 33AF6401 		sgt	t5,s6,s1	# tmp112, y1, y0
 827              	# kianv_stdlib.h:190:   int sx = x0 < x1 ? 1 : -1;
 828 05c0 939A1A00 		slli	s5,s5,1	#, iftmp.6_9, tmp109
 829              	# kianv_stdlib.h:192:   int sy = y0 < y1 ? 1 : -1;
 830 05c4 131F1F00 		slli	t5,t5,1	#, iftmp.7_10, tmp112
 831              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 832 05c8 B7060100 		li	a3,65536		# tmp103,
 833              	# kianv_stdlib.h:190:   int sx = x0 < x1 ? 1 : -1;
 834 05cc 938AFAFF 		addi	s5,s5,-1	#, iftmp.6_9, iftmp.6_9
 835              	# kianv_stdlib.h:191:   int dy = -abs(y1 - y0);
 836 05d0 B30EA040 		neg	t4,a0	# dy, _3
 837              	# kianv_stdlib.h:192:   int sy = y0 < y1 ? 1 : -1;
 838 05d4 130FFFFF 		addi	t5,t5,-1	#, iftmp.7_10, iftmp.7_10
 839 05d8 3308A940 		sub	a6,s2,a0	# err, dx, _3
 840              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 841 05dc 13930901 		slli	t1,s3,16	#, _33, color
 842 05e0 93F8F40F 		andi	a7,s1,255	#, tmp106, y0
 843 05e4 93158400 		slli	a1,s0,8	#, tmp107, x0
 844              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 845 05e8 9386F6FF 		addi	a3,a3,-1	#, tmp102, tmp103
 846              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 847 05ec 370E0030 		li	t3,805306368		# tmp105,
 848              	.L122:
 849              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 850 05f0 B3E76800 		or	a5,a7,t1	# _33, tmp99, tmp106
 851              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 852 05f4 33F6D500 		and	a2,a1,a3	# tmp102, tmp101, tmp107
 853              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 854 05f8 B3E7C700 		or	a5,a5,a2	# tmp101, _40, tmp99
 855              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 856 05fc 2324FE00 		sw	a5,8(t3)	# _40, MEM[(volatile uint32_t *)805306376B]
 857              	# kianv_stdlib.h:198:     e2 = 2*err;
 858 0600 93171800 		slli	a5,a6,1	#, e2, err
 859              	# kianv_stdlib.h:197:     if (x0 == x1 && y0 == y1) break;
 860 0604 630E4403 		beq	s0,s4,.L130	#, x0, x1,
 861              	.L123:
 862              	# kianv_stdlib.h:199:     if (e2 >= dy) { err += dy; x0 += sx; } /* e_xy+e_x > 0 */
 863 0608 63C8D701 		bgt	t4,a5,.L125	#, dy, e2,
 864              	# kianv_stdlib.h:199:     if (e2 >= dy) { err += dy; x0 += sx; } /* e_xy+e_x > 0 */
 865 060c 33045401 		add	s0,s0,s5	# iftmp.6_9, x0, x0
 866 0610 3308A840 		sub	a6,a6,a0	# err, err, _3
 867 0614 93158400 		slli	a1,s0,8	#, tmp107, x0
 868              	.L125:
 869              	# kianv_stdlib.h:200:     if (e2 <= dx) { err += dx; y0 += sy; } /* e_xy+e_y < 0 */
 870 0618 E34CF9FC 		blt	s2,a5,.L122	#, dx, e2,
 871              	# kianv_stdlib.h:200:     if (e2 <= dx) { err += dx; y0 += sy; } /* e_xy+e_y < 0 */
 872 061c B384E401 		add	s1,s1,t5	# iftmp.7_10, y0, y0
 873 0620 93F8F40F 		andi	a7,s1,255	#, tmp106, y0
 874              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 875 0624 B3E76800 		or	a5,a7,t1	# _33, tmp99, tmp106
 876              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 877 0628 33F6D500 		and	a2,a1,a3	# tmp102, tmp101, tmp107
 878              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 879 062c B3E7C700 		or	a5,a5,a2	# tmp101, _40, tmp99
 880              	# kianv_stdlib.h:200:     if (e2 <= dx) { err += dx; y0 += sy; } /* e_xy+e_y < 0 */
 881 0630 33082801 		add	a6,a6,s2	# dx, err, err
 882              	# kianv_stdlib.h:183: *((volatile uint32_t*) VIDEO) = (((uint32_t) color & 0xffff) << 16Ul) | ((x &
 883 0634 2324FE00 		sw	a5,8(t3)	# _40, MEM[(volatile uint32_t *)805306376B]
 884              	# kianv_stdlib.h:198:     e2 = 2*err;
 885 0638 93171800 		slli	a5,a6,1	#, e2, err
 886              	# kianv_stdlib.h:197:     if (x0 == x1 && y0 == y1) break;
 887 063c E31644FD 		bne	s0,s4,.L123	#, x0, x1,
 888              	.L130:
 889              	# kianv_stdlib.h:197:     if (x0 == x1 && y0 == y1) break;
 890 0640 E39464FD 		bne	s1,s6,.L123	#, y0, y1,
 891              	# kianv_stdlib.h:202: }
 892 0644 8320C101 		lw	ra,28(sp)		#,
 893 0648 03248101 		lw	s0,24(sp)		#,
 894 064c 83244101 		lw	s1,20(sp)		#,
 895 0650 03290101 		lw	s2,16(sp)		#,
 896 0654 8329C100 		lw	s3,12(sp)		#,
 897 0658 032A8100 		lw	s4,8(sp)		#,
 898 065c 832A4100 		lw	s5,4(sp)		#,
 899 0660 032B0100 		lw	s6,0(sp)		#,
 900 0664 13010102 		addi	sp,sp,32	#,,
 901 0668 67800000 		jr	ra		#
 903              		.align	2
 904              		.globl	time
 906              	time:
 907              	# stdlib.c:33: 	asm volatile ("rdcycle %0" : "=r"(cycles));
 908              	 #APP
 909              	# 33 "stdlib.c" 1
   1              	// This is free and unencumbered software released into the public domain.
   2              	//
   3              	// Anyone is free to copy, modify, publish, use, compile, sell, or
   4              	// distribute this software, either in source code form or as a compiled
   5              	// binary, for any purpose, commercial or non-commercial, and by any
   6              	// means.
   7              	
   8              	#ifndef KV_STDLIB_H
   9              	#define KV_STDLIB_H
  10              	
  11              	#include <stdarg.h>
  12              	#include <stdint.h>
  13              	#include "kianv_stdlib.h"
  14              	extern long time();
  15              	extern long insn();
  16              	
  17              	#if defined(NOT_USE_MYSTDLIB)
  18              	#else
  19              	extern char *malloc();
  20              	extern int printf(const char *format, ...);
  21              	
  22              	extern void *memcpy(void *dest, const void *src, long n);
  23              	extern char *strcpy(char *dest, const char *src);
  24              	extern int strcmp(const char *s1, const char *s2);
  25              	
  26              	char heap_memory[1024];
  27              	int heap_memory_used = 0;
  28              	#endif
  29              	
  30              	long time()
  31              	{
  32              		int cycles;
  33 066c 732500C0 		asm volatile ("rdcycle %0" : "=r"(cycles));
  34              		// printf("[time() -> %d]", cycles);
 910              		rdcycle a0	# cycles
 911              	# 0 "" 2
 912              	# stdlib.c:36: }
 913              	 #NO_APP
 914 0670 67800000 		ret	
 916              		.align	2
 917              		.globl	insn
 919              	insn:
 920              	# stdlib.c:41: 	asm volatile ("rdinstret %0" : "=r"(insns));
 921              	 #APP
 922              	# 41 "stdlib.c" 1
  35              		return cycles;
  36              	}
  37              	
  38              	long insn()
  39              	{
  40              		int insns;
  41 0674 732520C0 		asm volatile ("rdinstret %0" : "=r"(insns));
  42              		// printf("[insn() -> %d]", insns);
 923              		rdinstret a0	# insns
 924              	# 0 "" 2
 925              	# stdlib.c:44: }
 926              	 #NO_APP
 927 0678 67800000 		ret	
 929              		.align	2
 930              		.globl	printf
 932              	printf:
 933 067c 130101FB 		addi	sp,sp,-80	#,,
 934              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 935 0680 03430500 		lbu	t1,0(a0)	# _14, *format_22(D)
 936              	# stdlib.c:90: {
 937 0684 2322F104 		sw	a5,68(sp)	#,
 938              	# stdlib.c:94: 	va_start(ap, format);
 939 0688 93074103 		addi	a5,sp,52	#, tmp118,
 940              	# stdlib.c:90: {
 941 068c 232AB102 		sw	a1,52(sp)	#,
 942 0690 232CC102 		sw	a2,56(sp)	#,
 943 0694 232ED102 		sw	a3,60(sp)	#,
 944 0698 2320E104 		sw	a4,64(sp)	#,
 945 069c 23240105 		sw	a6,72(sp)	#,
 946 06a0 23261105 		sw	a7,76(sp)	#,
 947              	# stdlib.c:94: 	va_start(ap, format);
 948 06a4 2326F100 		sw	a5,12(sp)	# tmp118, MEM[(void * *)&ap]
 949              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 950 06a8 63060304 		beq	t1,zero,.L134	#, _14,,
 951              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 952 06ac 93060000 		li	a3,0		# i,
 953              	# stdlib.c:97: 		if (format[i] == '%') {
 954 06b0 93025002 		li	t0,37		# tmp119,
 955              	# stdlib.c:99: 				if (format[i] == 'c') {
 956 06b4 93083006 		li	a7,99		# tmp186,
 957              	# stdlib.c:103: 				if (format[i] == 's') {
 958 06b8 130E3007 		li	t3,115		# tmp187,
 959              	# stdlib.c:107: 				if (format[i] == 'd') {
 960 06bc 930E4006 		li	t4,100		# tmp188,
 961              	# stdlib.c:111: 				if (format[i] == 'u') {
 962 06c0 130F5007 		li	t5,117		# tmp189,
 963              	# stdlib.c:78: 	char *p = buffer;
 964 06c4 930F0101 		addi	t6,sp,16	#, tmp194,
 965              	# stdlib.c:82: 		*(p++) = '0' + val % 10;
 966 06c8 9305A000 		li	a1,10		# tmp195,
 967              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 968 06cc B7070030 		li	a5,805306368		# tmp196,
 969              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 970 06d0 9303D002 		li	t2,45		# tmp198,
 971              	.L155:
 972              	# stdlib.c:97: 		if (format[i] == '%') {
 973 06d4 630E5302 		beq	t1,t0,.L135	#, _14, tmp119,
 974              	.L136:
 975              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 976 06d8 03A70700 		lw	a4,0(a5)		# _41, MEM[(volatile uint32_t *)805306368B]
 977              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 978 06dc E30E07FE 		beq	a4,zero,.L136	#, _41,,
 979              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 980 06e0 23A06700 		sw	t1,0(a5)	# _14, MEM[(volatile uint32_t *)805306368B]
 981              	.L139:
 982              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 983 06e4 93861600 		addi	a3,a3,1	#, i, i
 984              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 985 06e8 3307D500 		add	a4,a0,a3	# i, tmp177, format
 986 06ec 03430700 		lbu	t1,0(a4)	# _14, *_13
 987              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 988 06f0 E31203FE 		bne	t1,zero,.L155	#, _14,,
 989              	.L134:
 990              	# stdlib.c:121: }
 991 06f4 13050000 		li	a0,0		#,
 992 06f8 13010105 		addi	sp,sp,80	#,,
 993 06fc 67800000 		jr	ra		#
 994              	.L154:
 995              	# stdlib.c:99: 				if (format[i] == 'c') {
 996 0700 63021703 		beq	a4,a7,.L181	#, _10, tmp186,
 997              	# stdlib.c:103: 				if (format[i] == 's') {
 998 0704 6302C705 		beq	a4,t3,.L182	#, _10, tmp187,
 999              	# stdlib.c:107: 				if (format[i] == 'd') {
 1000 0708 630AD707 		beq	a4,t4,.L183	#, _10, tmp188,
 1001              	# stdlib.c:111: 				if (format[i] == 'u') {
 1002 070c 630EE70D 		beq	a4,t5,.L184	#, _10, tmp189,
 1003              	.L135:
 1004              	# stdlib.c:98: 			while (format[++i]) {
 1005 0710 93861600 		addi	a3,a3,1	#, i, i
 1006              	# stdlib.c:98: 			while (format[++i]) {
 1007 0714 3307D500 		add	a4,a0,a3	# i, tmp174, format
 1008 0718 03470700 		lbu	a4,0(a4)	# _10, MEM[(const char *)_125]
 1009              	# stdlib.c:98: 			while (format[++i]) {
 1010 071c E31207FE 		bne	a4,zero,.L154	#, _10,,
 1011 0720 6FF05FFC 		j	.L139		#
 1012              	.L181:
 1013              	# stdlib.c:100: 					printf_c(va_arg(ap,int));
 1014 0724 0327C100 		lw	a4,12(sp)		# D.3839, ap
 1015 0728 03260700 		lw	a2,0(a4)		# _4, MEM[(int *)_109]
 1016 072c 13074700 		addi	a4,a4,4	#, D.3840, D.3839
 1017 0730 2326E100 		sw	a4,12(sp)	# D.3840, ap
 1018              	.L138:
 1019              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1020 0734 03A70700 		lw	a4,0(a5)		# _33, MEM[(volatile uint32_t *)805306368B]
 1021              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1022 0738 E30E07FE 		beq	a4,zero,.L138	#, _33,,
 1023              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 1024 073c 1377F60F 		andi	a4,a2,255	#, _35, _4
 1025 0740 23A0E700 		sw	a4,0(a5)	# _35, MEM[(volatile uint32_t *)805306368B]
 1026              	# stdlib.c:50: }
 1027 0744 6FF01FFA 		j	.L139		#
 1028              	.L182:
 1029              	# stdlib.c:104: 					printf_s(va_arg(ap,char*));
 1030 0748 0327C100 		lw	a4,12(sp)		# D.3841, ap
 1031 074c 03280700 		lw	a6,0(a4)		# p, MEM[(char * *)_78]
 1032 0750 13074700 		addi	a4,a4,4	#, D.3842, D.3841
 1033 0754 2326E100 		sw	a4,12(sp)	# D.3842, ap
 1034              	# stdlib.c:54: 	while (*p)
 1035 0758 03460800 		lbu	a2,0(a6)	# _39,* p
 1036 075c E30406F8 		beq	a2,zero,.L139	#, _39,,
 1037              	.L142:
 1038              	# stdlib.c:56:     print_chr(*(p++));
 1039 0760 13081800 		addi	a6,a6,1	#, p, p
 1040              	.L141:
 1041              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1042 0764 03A70700 		lw	a4,0(a5)		# _38, MEM[(volatile uint32_t *)805306368B]
 1043              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1044 0768 E30E07FE 		beq	a4,zero,.L141	#, _38,,
 1045              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 1046 076c 23A0C700 		sw	a2,0(a5)	# _39, MEM[(volatile uint32_t *)805306368B]
 1047              	# stdlib.c:54: 	while (*p)
 1048 0770 03460800 		lbu	a2,0(a6)	# _39,* p
 1049 0774 E31606FE 		bne	a2,zero,.L142	#, _39,,
 1050 0778 6FF0DFF6 		j	.L139		#
 1051              	.L183:
 1052              	# stdlib.c:108: 					printf_d(va_arg(ap,int));
 1053 077c 0326C100 		lw	a2,12(sp)		# D.3843, ap
 1054 0780 03270600 		lw	a4,0(a2)		# val, MEM[(int *)_110]
 1055 0784 13064600 		addi	a2,a2,4	#, D.3844, D.3843
 1056 0788 2326C100 		sw	a2,12(sp)	# D.3844, ap
 1057              	# stdlib.c:63: 	if (val < 0) {
 1058 078c 63440702 		blt	a4,zero,.L145	#, val,,
 1059              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 1060 0790 13860F00 		mv	a2,t6	# p, tmp194
 1061              	.L146:
 1062              	# stdlib.c:67: 	while (val || p == buffer) {
 1063 0794 63140700 		bne	a4,zero,.L147	#, val,,
 1064 0798 631EF603 		bne	a2,t6,.L149	#, p, tmp194,
 1065              	.L147:
 1066              	# stdlib.c:68: 		*(p++) = '0' + val % 10;
 1067 079c 3368B702 		rem	a6,a4,a1	# tmp195, tmp138, val
 1068              	# stdlib.c:68: 		*(p++) = '0' + val % 10;
 1069 07a0 13061600 		addi	a2,a2,1	#, p, p
 1070              	# stdlib.c:68: 		*(p++) = '0' + val % 10;
 1071 07a4 13080803 		addi	a6,a6,48	#, tmp140, tmp138
 1072              	# stdlib.c:69: 		val = val / 10;
 1073 07a8 3347B702 		div	a4,a4,a1	# tmp195, val, val
 1074              	# stdlib.c:68: 		*(p++) = '0' + val % 10;
 1075 07ac A30F06FF 		sb	a6,-1(a2)	# tmp140, MEM[(char *)p_53 + 4294967295B]
 1076 07b0 6FF05FFE 		j	.L146		#
 1077              	.L145:
 1078              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1079 07b4 03A60700 		lw	a2,0(a5)		# _47, MEM[(volatile uint32_t *)805306368B]
 1080              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1081 07b8 E30E06FE 		beq	a2,zero,.L145	#, _47,,
 1082              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 1083 07bc 23A07700 		sw	t2,0(a5)	# tmp198, MEM[(volatile uint32_t *)805306368B]
 1084              	# stdlib.c:65: 		val = -val;
 1085 07c0 3307E040 		neg	a4,a4	# val, val
 1086              	# stdlib.c:96: 	for (i = 0; format[i]; i++)
 1087 07c4 13860F00 		mv	a2,t6	# p, tmp194
 1088 07c8 6FF0DFFC 		j	.L146		#
 1089              	.L185:
 1090              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 1091 07cc 23A00701 		sw	a6,0(a5)	# _58, MEM[(volatile uint32_t *)805306368B]
 1092              	# stdlib.c:71: 	while (p != buffer)
 1093 07d0 E30AF6F1 		beq	a2,t6,.L139	#, p, tmp194,
 1094              	.L149:
 1095              	# stdlib.c:72: 		printf_c(*(--p));
 1096 07d4 0348F6FF 		lbu	a6,-1(a2)	# _58, MEM[(char *)p_57]
 1097              	# stdlib.c:72: 		printf_c(*(--p));
 1098 07d8 1306F6FF 		addi	a2,a2,-1	#, p, p
 1099              	.L148:
 1100              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1101 07dc 03A70700 		lw	a4,0(a5)		# _59, MEM[(volatile uint32_t *)805306368B]
 1102              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1103 07e0 E30E07FE 		beq	a4,zero,.L148	#, _59,,
 1104 07e4 6FF09FFE 		j	.L185		#
 1105              	.L184:
 1106              	# stdlib.c:112: 					printf_u(va_arg(ap,int));
 1107 07e8 0328C100 		lw	a6,12(sp)		# D.3845, ap
 1108              	# stdlib.c:78: 	char *p = buffer;
 1109 07ec 13860F00 		mv	a2,t6	# p, tmp194
 1110              	# stdlib.c:80:   val = val >= 0 ? val : -val;
 1111 07f0 03270800 		lw	a4,0(a6)		# MEM[(int *)_113], MEM[(int *)_113]
 1112              	# stdlib.c:112: 					printf_u(va_arg(ap,int));
 1113 07f4 13084800 		addi	a6,a6,4	#, D.3846, D.3845
 1114 07f8 23260101 		sw	a6,12(sp)	# D.3846, ap
 1115              	# stdlib.c:80:   val = val >= 0 ? val : -val;
 1116 07fc 1358F741 		srai	a6,a4,31	#, tmp153, MEM[(int *)_113]
 1117 0800 3347E800 		xor	a4,a6,a4	# MEM[(int *)_113], val, tmp153
 1118 0804 33070741 		sub	a4,a4,a6	# val, val, tmp153
 1119              	.L150:
 1120              	# stdlib.c:81: 	while (val || p == buffer) {
 1121 0808 63140700 		bne	a4,zero,.L151	#, val,,
 1122 080c 6312F603 		bne	a2,t6,.L153	#, p, tmp194,
 1123              	.L151:
 1124              	# stdlib.c:82: 		*(p++) = '0' + val % 10;
 1125 0810 3368B702 		rem	a6,a4,a1	# tmp195, tmp161, val
 1126              	# stdlib.c:82: 		*(p++) = '0' + val % 10;
 1127 0814 13061600 		addi	a2,a2,1	#, p, p
 1128              	# stdlib.c:82: 		*(p++) = '0' + val % 10;
 1129 0818 13080803 		addi	a6,a6,48	#, tmp163, tmp161
 1130              	# stdlib.c:83: 		val = val / 10;
 1131 081c 3347B702 		div	a4,a4,a1	# tmp195, val, val
 1132              	# stdlib.c:82: 		*(p++) = '0' + val % 10;
 1133 0820 A30F06FF 		sb	a6,-1(a2)	# tmp163, MEM[(char *)p_68 + 4294967295B]
 1134 0824 6FF05FFE 		j	.L150		#
 1135              	.L186:
 1136              	# kianv_stdlib.h:118:   *((volatile uint32_t*) UART_TX) = ch;
 1137 0828 23A00701 		sw	a6,0(a5)	# _73, MEM[(volatile uint32_t *)805306368B]
 1138              	# stdlib.c:85: 	while (p != buffer)
 1139 082c E30CF6EB 		beq	a2,t6,.L139	#, p, tmp194,
 1140              	.L153:
 1141              	# stdlib.c:86: 		printf_c(*(--p));
 1142 0830 0348F6FF 		lbu	a6,-1(a2)	# _73, MEM[(char *)p_72]
 1143              	# stdlib.c:86: 		printf_c(*(--p));
 1144 0834 1306F6FF 		addi	a2,a2,-1	#, p, p
 1145              	.L152:
 1146              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1147 0838 03A70700 		lw	a4,0(a5)		# _74, MEM[(volatile uint32_t *)805306368B]
 1148              	# kianv_stdlib.h:116:   while (!*((volatile uint32_t*) UART_READY))
 1149 083c E30E07FE 		beq	a4,zero,.L152	#, _74,,
 1150 0840 6FF09FFE 		j	.L186		#
 1152              		.align	2
 1153              		.globl	malloc
 1155              	malloc:
 1156              	# stdlib.c:126: 	char *p = heap_memory + heap_memory_used;
 1157 0844 B7060000 		lui	a3,%hi(heap_memory_used)	# tmp77,
 1158 0848 03A70600 		lw	a4,%lo(heap_memory_used)(a3)		# heap_memory_used.19_1, heap_memory_used
 1159              	# stdlib.c:128: 	heap_memory_used += size;
 1160 084c B307A700 		add	a5,a4,a0	# tmp83, _3, heap_memory_used.19_1
 1161              	# stdlib.c:126: 	char *p = heap_memory + heap_memory_used;
 1162 0850 37050000 		lui	a0,%hi(.LANCHOR0)	# tmp79,
 1163              	# stdlib.c:128: 	heap_memory_used += size;
 1164 0854 23A0F600 		sw	a5,%lo(heap_memory_used)(a3)	# _3, heap_memory_used
 1165              	# stdlib.c:126: 	char *p = heap_memory + heap_memory_used;
 1166 0858 13050500 		addi	a0,a0,%lo(.LANCHOR0)	# tmp78, tmp79,
 1167              	# stdlib.c:129: 	if (heap_memory_used > 1024)
 1168 085c 93060040 		li	a3,1024		# tmp81,
 1169              	# stdlib.c:126: 	char *p = heap_memory + heap_memory_used;
 1170 0860 3305E500 		add	a0,a0,a4	# heap_memory_used.19_1, <retval>, tmp78
 1171              	# stdlib.c:129: 	if (heap_memory_used > 1024)
 1172 0864 63D4F600 		ble	a5,a3,.L187	#, _3, tmp81,
 1173              	# stdlib.c:130: 		asm volatile ("ebreak");
 1174              	 #APP
 1175              	# 130 "stdlib.c" 1
  43              		return insns;
  44              	}
  45              	
  46              	static void printf_c(int c)
  47              	{
  48              		//*((volatile int*)0x10000000) = c;
  49              	    print_chr(c);
  50              	}
  51              	
  52              	static void printf_s(char *p)
  53              	{
  54              		while (*p)
  55              			//*((volatile int*)0x10000000) = *(p++);
  56              	    print_chr(*(p++));
  57              	}
  58              	
  59              	static void printf_d(int val)
  60              	{
  61              		char buffer[32];
  62              		char *p = buffer;
  63              		if (val < 0) {
  64              			printf_c('-');
  65              			val = -val;
  66              		}
  67              		while (val || p == buffer) {
  68              			*(p++) = '0' + val % 10;
  69              			val = val / 10;
  70              		}
  71              		while (p != buffer)
  72              			printf_c(*(--p));
  73              	}
  74              	
  75              	static void printf_u(int val)
  76              	{
  77              		char buffer[32];
  78              		char *p = buffer;
  79              	
  80              	  val = val >= 0 ? val : -val;
  81              		while (val || p == buffer) {
  82              			*(p++) = '0' + val % 10;
  83              			val = val / 10;
  84              		}
  85              		while (p != buffer)
  86              			printf_c(*(--p));
  87              	}
  88              	
  89              	int printf(const char *format, ...)
  90              	{
  91              		int i;
  92              		va_list ap;
  93              	
  94              		va_start(ap, format);
  95              	
  96              		for (i = 0; format[i]; i++)
  97              			if (format[i] == '%') {
  98              				while (format[++i]) {
  99              					if (format[i] == 'c') {
 100              						printf_c(va_arg(ap,int));
 101              						break;
 102              					}
 103              					if (format[i] == 's') {
 104              						printf_s(va_arg(ap,char*));
 105              						break;
 106              					}
 107              					if (format[i] == 'd') {
 108              						printf_d(va_arg(ap,int));
 109              						break;
 110              					}
 111              					if (format[i] == 'u') {
 112              						printf_u(va_arg(ap,int));
 113              						break;
 114              					}
 115              				}
 116              			} else
 117              				printf_c(format[i]);
 118              	
 119              		va_end(ap);
 120              	  return 0;
 121              	}
 122              	
 123              	#if !defined(NOT_USE_MYSTDLIB)
 124              	char *malloc(int size)
 125              	{
 126              		char *p = heap_memory + heap_memory_used;
 127              		// printf("[malloc(%d) -> %d (%d..%d)]", size, (int)p, heap_memory_used, heap_memory_used + size);
 128              		heap_memory_used += size;
 129              		if (heap_memory_used > 1024)
 130 0868 73001000 			asm volatile ("ebreak");
 131              		return p;
 1176              		ebreak
 1177              	# 0 "" 2
 1178              	 #NO_APP
 1179              	.L187:
 1180              	# stdlib.c:132: }
 1181 086c 67800000 		ret	
 1183              		.align	2
 1184              		.globl	memcpy
 1186              	memcpy:
 1187              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1188 0870 9308F6FF 		addi	a7,a2,-1	#, n, n
 1189              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1190 0874 6306060A 		beq	a2,zero,.L190	#, n,,
 1191 0878 13871500 		addi	a4,a1,1	#, bb, bb
 1192 087c B307E540 		sub	a5,a0,a4	# tmp111, aa, bb
 1193 0880 93B73700 		sltiu	a5,a5,3	#, tmp114, tmp111
 1194 0884 93B67800 		sltiu	a3,a7,7	#, tmp117, n
 1195 0888 93C71700 		xori	a5,a5,1	#, tmp113, tmp114
 1196 088c 93C61600 		xori	a3,a3,1	#, tmp116, tmp117
 1197 0890 B3F7D700 		and	a5,a5,a3	# tmp116, tmp120, tmp113
 1198 0894 63880706 		beq	a5,zero,.L191	#, tmp120,,
 1199 0898 B367B500 		or	a5,a0,a1	# bb, tmp121, aa
 1200 089c 93F73700 		andi	a5,a5,3	#, tmp122, tmp121
 1201 08a0 63920706 		bne	a5,zero,.L191	#, tmp122,,
 1202 08a4 1378C6FF 		andi	a6,a2,-4	#, tmp127, n
 1203 08a8 93870500 		mv	a5,a1	# ivtmp.1024, bb
 1204 08ac 13070500 		mv	a4,a0	# ivtmp.1027, aa
 1205 08b0 3308B800 		add	a6,a6,a1	# bb, _77, tmp127
 1206              	.L192:
 1207              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1208 08b4 83A60700 		lw	a3,0(a5)		# vect__1.1010, MEM <const vector(4) char> [(const char *)_43]
 1209 08b8 93874700 		addi	a5,a5,4	#, ivtmp.1024, ivtmp.1024
 1210 08bc 13074700 		addi	a4,a4,4	#, ivtmp.1027, ivtmp.1027
 1211              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1212 08c0 232ED7FE 		sw	a3,-4(a4)	# vect__1.1010, MEM <vector(4) char> [(char *)_45]
 1213 08c4 E39807FF 		bne	a5,a6,.L192	#, ivtmp.1024, _77,
 1214 08c8 9377C6FF 		andi	a5,a2,-4	#, niters_vector_mult_vf.1004, n
 1215 08cc 3307F500 		add	a4,a0,a5	# niters_vector_mult_vf.1004, tmp.1005, aa
 1216 08d0 B385F500 		add	a1,a1,a5	# niters_vector_mult_vf.1004, tmp.1006, bb
 1217 08d4 B388F840 		sub	a7,a7,a5	# tmp.1007, n, niters_vector_mult_vf.1004
 1218 08d8 6304F604 		beq	a2,a5,.L190	#, n, niters_vector_mult_vf.1004,
 1219              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1220 08dc 83C70500 		lbu	a5,0(a1)	# _10, *tmp.1006_55
 1221              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1222 08e0 2300F700 		sb	a5,0(a4)	# _10, *tmp.1005_54
 1223              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1224 08e4 638E0802 		beq	a7,zero,.L190	#, tmp.1007,,
 1225              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1226 08e8 83C61500 		lbu	a3,1(a1)	# _72, MEM[(const char *)tmp.1006_55 + 1B]
 1227              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1228 08ec 93071000 		li	a5,1		# tmp128,
 1229              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1230 08f0 A300D700 		sb	a3,1(a4)	# _72, MEM[(char *)tmp.1005_54 + 1B]
 1231              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1232 08f4 6386F802 		beq	a7,a5,.L190	#, tmp.1007, tmp128,
 1233              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1234 08f8 83C72500 		lbu	a5,2(a1)	# _48, MEM[(const char *)tmp.1006_55 + 2B]
 1235              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1236 08fc 2301F700 		sb	a5,2(a4)	# _48, MEM[(char *)tmp.1005_54 + 2B]
 1237 0900 67800000 		ret	
 1238              	.L191:
 1239 0904 3306C500 		add	a2,a0,a2	# n, _23, aa
 1240              	# stdlib.c:138: 	char *a = (char *) aa;
 1241 0908 93070500 		mv	a5,a0	# a, aa
 1242              	.L194:
 1243              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1244 090c 8346F7FF 		lbu	a3,-1(a4)	# _37, MEM[(const char *)b_35 + 4294967295B]
 1245              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1246 0910 93871700 		addi	a5,a5,1	#, a, a
 1247 0914 13071700 		addi	a4,a4,1	#, bb, bb
 1248              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1249 0918 A38FD7FE 		sb	a3,-1(a5)	# _37, MEM[(char *)a_36 + 4294967295B]
 1250              	# stdlib.c:140: 	while (n--) *(a++) = *(b++);
 1251 091c E318F6FE 		bne	a2,a5,.L194	#, _23, a,
 1252              	.L190:
 1253              	# stdlib.c:142: }
 1254 0920 67800000 		ret	
 1256              		.align	2
 1257              		.globl	strcpy
 1259              	strcpy:
 1260              	# stdlib.c:148: 	while ((((uint32_t)dst | (uint32_t)src) & 3) != 0)
 1261 0924 93070500 		mv	a5,a0	# dst, dst
 1262 0928 6F008001 		j	.L211		#
 1263              	.L213:
 1264              	# stdlib.c:150: 		char c = *(src++);
 1265 092c 03C70500 		lbu	a4,0(a1)	# c, MEM[(const char *)src_40 + 4294967295B]
 1266              	# stdlib.c:151: 		*(dst++) = c;
 1267 0930 93871700 		addi	a5,a5,1	#, dst, dst
 1268              	# stdlib.c:150: 		char c = *(src++);
 1269 0934 93851500 		addi	a1,a1,1	#, src, src
 1270              	# stdlib.c:151: 		*(dst++) = c;
 1271 0938 A38FE7FE 		sb	a4,-1(a5)	# c, MEM[(char *)dst_42 + 4294967295B]
 1272              	# stdlib.c:152: 		if (!c) return r;
 1273 093c 63040708 		beq	a4,zero,.L215	#, c,,
 1274              	.L211:
 1275              	# stdlib.c:148: 	while ((((uint32_t)dst | (uint32_t)src) & 3) != 0)
 1276 0940 33E7B700 		or	a4,a5,a1	# src, tmp101, dst
 1277              	# stdlib.c:148: 	while ((((uint32_t)dst | (uint32_t)src) & 3) != 0)
 1278 0944 13773700 		andi	a4,a4,3	#, tmp102, tmp101
 1279              	# stdlib.c:148: 	while ((((uint32_t)dst | (uint32_t)src) & 3) != 0)
 1280 0948 E31207FE 		bne	a4,zero,.L213	#, tmp102,,
 1281              	# stdlib.c:157: 		uint32_t v = *(uint32_t*)src;
 1282 094c 83A60500 		lw	a3,0(a1)		# v, MEM[(uint32_t *)src_20]
 1283              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1284 0950 B708FFFE 		li	a7,-16842752		# tmp105,
 1285 0954 9388F8EF 		addi	a7,a7,-257	#, tmp104, tmp105
 1286 0958 33871601 		add	a4,a3,a7	# tmp104, tmp103, v
 1287              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1288 095c 13C6F6FF 		not	a2,a3	# tmp106, v
 1289              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1290 0960 37888080 		li	a6,-2139062272		# tmp110,
 1291              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1292 0964 3377C700 		and	a4,a4,a2	# tmp106, tmp107, tmp103
 1293              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1294 0968 13080808 		addi	a6,a6,128	#, tmp109, tmp110
 1295 096c 33770701 		and	a4,a4,a6	# tmp109, tmp108, tmp107
 1296              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1297 0970 63140702 		bne	a4,zero,.L216	#, tmp108,,
 1298              	.L214:
 1299              	# stdlib.c:180: 		*(uint32_t*)dst = v;
 1300 0974 23A0D700 		sw	a3,0(a5)	# v, MEM[(uint32_t *)dst_51]
 1301              	# stdlib.c:157: 		uint32_t v = *(uint32_t*)src;
 1302 0978 83A64500 		lw	a3,4(a1)		# v, MEM[(uint32_t *)src_31]
 1303              	# stdlib.c:182: 		dst += 4;
 1304 097c 93874700 		addi	a5,a5,4	#, dst, dst
 1305              	# stdlib.c:181: 		src += 4;
 1306 0980 93854500 		addi	a1,a1,4	#, src, src
 1307              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1308 0984 33871601 		add	a4,a3,a7	# tmp104, tmp115, v
 1309              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1310 0988 13C6F6FF 		not	a2,a3	# tmp118, v
 1311              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1312 098c 3377C700 		and	a4,a4,a2	# tmp118, tmp119, tmp115
 1313              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1314 0990 33770701 		and	a4,a4,a6	# tmp109, tmp120, tmp119
 1315              	# stdlib.c:159: 		if (__builtin_expect((((v) - 0x01010101UL) & ~(v) & 0x80808080UL), 0))
 1316 0994 E30007FE 		beq	a4,zero,.L214	#, tmp120,,
 1317              	.L216:
 1318              	# stdlib.c:161: 			dst[0] = v & 0xff;
 1319 0998 2380D700 		sb	a3,0(a5)	# v, *dst_50
 1320              	# stdlib.c:162: 			if ((v & 0xff) == 0)
 1321 099c 13F7F60F 		andi	a4,a3,255	#, tmp111, v
 1322              	# stdlib.c:162: 			if ((v & 0xff) == 0)
 1323 09a0 63020702 		beq	a4,zero,.L215	#, tmp111,,
 1324              	# stdlib.c:164: 			v = v >> 8;
 1325 09a4 13D78600 		srli	a4,a3,8	#, v, v
 1326              	# stdlib.c:166: 			dst[1] = v & 0xff;
 1327 09a8 A380E700 		sb	a4,1(a5)	# v, MEM[(char *)dst_50 + 1B]
 1328              	# stdlib.c:167: 			if ((v & 0xff) == 0)
 1329 09ac 1377F70F 		andi	a4,a4,255	#, tmp112, v
 1330              	# stdlib.c:167: 			if ((v & 0xff) == 0)
 1331 09b0 630A0700 		beq	a4,zero,.L215	#, tmp112,,
 1332              	# stdlib.c:169: 			v = v >> 8;
 1333 09b4 13D70601 		srli	a4,a3,16	#, v, v
 1334              	# stdlib.c:171: 			dst[2] = v & 0xff;
 1335 09b8 2381E700 		sb	a4,2(a5)	# v, MEM[(char *)dst_50 + 2B]
 1336              	# stdlib.c:172: 			if ((v & 0xff) == 0)
 1337 09bc 1377F70F 		andi	a4,a4,255	#, tmp113, v
 1338              	# stdlib.c:172: 			if ((v & 0xff) == 0)
 1339 09c0 63140700 		bne	a4,zero,.L231	#, tmp113,,
 1340              	.L215:
 1341              	# stdlib.c:184: }
 1342 09c4 67800000 		ret	
 1343              	.L231:
 1344              	# stdlib.c:174: 			v = v >> 8;
 1345 09c8 93D68601 		srli	a3,a3,24	#, v, v
 1346              	# stdlib.c:176: 			dst[3] = v & 0xff;
 1347 09cc A381D700 		sb	a3,3(a5)	# v, MEM[(char *)dst_50 + 3B]
 1348              	# stdlib.c:177: 			return r;
 1349 09d0 67800000 		ret	
 1351              		.align	2
 1352              		.globl	strcmp
 1354              	strcmp:
 1355              	# stdlib.c:188: 	while ((((uint32_t)s1 | (uint32_t)s2) & 3) != 0)
 1356 09d4 6F00C001 		j	.L233		#
 1357              	.L237:
 1358              	# stdlib.c:190: 		char c1 = *(s1++);
 1359 09d8 83470500 		lbu	a5,0(a0)	# c1, MEM[(const char *)s1_48 + 4294967295B]
 1360              	# stdlib.c:191: 		char c2 = *(s2++);
 1361 09dc 03C70500 		lbu	a4,0(a1)	# c2, MEM[(const char *)s2_50 + 4294967295B]
 1362              	# stdlib.c:190: 		char c1 = *(s1++);
 1363 09e0 13051500 		addi	a0,a0,1	#, s1, s1
 1364              	# stdlib.c:191: 		char c2 = *(s2++);
 1365 09e4 93851500 		addi	a1,a1,1	#, s2, s2
 1366              	# stdlib.c:193: 		if (c1 != c2)
 1367 09e8 6392E706 		bne	a5,a4,.L262	#, c1, c2,
 1368              	# stdlib.c:195: 		else if (!c1)
 1369 09ec 638C0704 		beq	a5,zero,.L252	#, c1,,
 1370              	.L233:
 1371              	# stdlib.c:188: 	while ((((uint32_t)s1 | (uint32_t)s2) & 3) != 0)
 1372 09f0 B367B500 		or	a5,a0,a1	# s2, tmp101, s1
 1373              	# stdlib.c:188: 	while ((((uint32_t)s1 | (uint32_t)s2) & 3) != 0)
 1374 09f4 93F73700 		andi	a5,a5,3	#, tmp102, tmp101
 1375              	# stdlib.c:188: 	while ((((uint32_t)s1 | (uint32_t)s2) & 3) != 0)
 1376 09f8 E39007FE 		bne	a5,zero,.L237	#, tmp102,,
 1377              	# stdlib.c:201: 		uint32_t v1 = *(uint32_t*)s1;
 1378 09fc 83270500 		lw	a5,0(a0)		# v1, MEM[(uint32_t *)s1_14]
 1379              	# stdlib.c:202: 		uint32_t v2 = *(uint32_t*)s2;
 1380 0a00 03A70500 		lw	a4,0(a1)		# v2, MEM[(uint32_t *)s2_16]
 1381              	# stdlib.c:204: 		if (__builtin_expect(v1 != v2, 0))
 1382 0a04 639CE704 		bne	a5,a4,.L242	#, v1, v2,
 1383              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1384 0a08 3706FFFE 		li	a2,-16842752		# tmp111,
 1385              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1386 0a0c B7868080 		li	a3,-2139062272		# tmp116,
 1387              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1388 0a10 1306F6EF 		addi	a2,a2,-257	#, tmp110, tmp111
 1389              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1390 0a14 93860608 		addi	a3,a3,128	#, tmp115, tmp116
 1391 0a18 6F000001 		j	.L238		#
 1392              	.L263:
 1393              	# stdlib.c:201: 		uint32_t v1 = *(uint32_t*)s1;
 1394 0a1c 83270500 		lw	a5,0(a0)		# v1, MEM[(uint32_t *)s1_29]
 1395              	# stdlib.c:202: 		uint32_t v2 = *(uint32_t*)s2;
 1396 0a20 03A70500 		lw	a4,0(a1)		# v2, MEM[(uint32_t *)s2_30]
 1397              	# stdlib.c:204: 		if (__builtin_expect(v1 != v2, 0))
 1398 0a24 639CE702 		bne	a5,a4,.L242	#, v1, v2,
 1399              	.L238:
 1400              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1401 0a28 3387C700 		add	a4,a5,a2	# tmp110, tmp109, v1
 1402              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1403 0a2c 93C7F7FF 		not	a5,a5	# tmp112, v1
 1404              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1405 0a30 B377F700 		and	a5,a4,a5	# tmp112, tmp113, tmp109
 1406              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1407 0a34 B3F7D700 		and	a5,a5,a3	# tmp115, tmp114, tmp113
 1408              	# stdlib.c:231: 		s1 += 4;
 1409 0a38 13054500 		addi	a0,a0,4	#, s1, s1
 1410              	# stdlib.c:232: 		s2 += 4;
 1411 0a3c 93854500 		addi	a1,a1,4	#, s2, s2
 1412              	# stdlib.c:228: 		if (__builtin_expect((((v1) - 0x01010101UL) & ~(v1) & 0x80808080UL), 0))
 1413 0a40 E38E07FC 		beq	a5,zero,.L263	#, tmp114,,
 1414              	.L252:
 1415              	# stdlib.c:196: 			return 0;
 1416 0a44 13050000 		li	a0,0		# <retval>,
 1417              	.L232:
 1418              	# stdlib.c:234: }
 1419 0a48 67800000 		ret	
 1420              	.L262:
 1421              	# stdlib.c:194: 			return c1 < c2 ? -1 : +1;
 1422 0a4c 33B5E700 		sltu	a0,a5,a4	# c2, tmp119, c1
 1423 0a50 3305A040 		neg	a0,a0	# tmp120, tmp119
 1424 0a54 13651500 		ori	a0,a0,1	#, <retval>, tmp120
 1425 0a58 67800000 		ret	
 1426              	.L242:
 1427              	# stdlib.c:208: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1428 0a5c 93F6F70F 		andi	a3,a5,0xff	# c1, v1
 1429              	# stdlib.c:208: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1430 0a60 1376F70F 		andi	a2,a4,0xff	# c2, v2
 1431              	# stdlib.c:209: 			if (c1 != c2) return c1 < c2 ? -1 : +1;
 1432 0a64 639AC604 		bne	a3,a2,.L260	#, c1, c2,
 1433              	# stdlib.c:196: 			return 0;
 1434 0a68 13050000 		li	a0,0		# <retval>,
 1435              	# stdlib.c:210: 			if (!c1) return 0;
 1436 0a6c E38E06FC 		beq	a3,zero,.L232	#, c1,,
 1437              	# stdlib.c:211: 			v1 = v1 >> 8, v2 = v2 >> 8;
 1438 0a70 93D68700 		srli	a3,a5,8	#, v1, v1
 1439              	# stdlib.c:211: 			v1 = v1 >> 8, v2 = v2 >> 8;
 1440 0a74 13568700 		srli	a2,a4,8	#, v2, v2
 1441              	# stdlib.c:213: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1442 0a78 93F6F60F 		andi	a3,a3,0xff	# c1, v1
 1443              	# stdlib.c:213: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1444 0a7c 1376F60F 		andi	a2,a2,0xff	# c2, v2
 1445              	# stdlib.c:214: 			if (c1 != c2) return c1 < c2 ? -1 : +1;
 1446 0a80 639CC602 		bne	a3,a2,.L260	#, c1, c2,
 1447              	# stdlib.c:215: 			if (!c1) return 0;
 1448 0a84 E38206FC 		beq	a3,zero,.L232	#, c1,,
 1449              	# stdlib.c:216: 			v1 = v1 >> 8, v2 = v2 >> 8;
 1450 0a88 93D60701 		srli	a3,a5,16	#, v1, v1
 1451              	# stdlib.c:216: 			v1 = v1 >> 8, v2 = v2 >> 8;
 1452 0a8c 13560701 		srli	a2,a4,16	#, v2, v2
 1453              	# stdlib.c:218: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1454 0a90 93F6F60F 		andi	a3,a3,0xff	# c1, v1
 1455              	# stdlib.c:218: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1456 0a94 1376F60F 		andi	a2,a2,0xff	# c2, v2
 1457              	# stdlib.c:219: 			if (c1 != c2) return c1 < c2 ? -1 : +1;
 1458 0a98 6390C602 		bne	a3,a2,.L260	#, c1, c2,
 1459              	# stdlib.c:220: 			if (!c1) return 0;
 1460 0a9c E38606FA 		beq	a3,zero,.L232	#, c1,,
 1461              	# stdlib.c:223: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1462 0aa0 93D78701 		srli	a5,a5,24	#, c1, v1
 1463              	# stdlib.c:223: 			c1 = v1 & 0xff, c2 = v2 & 0xff;
 1464 0aa4 13578701 		srli	a4,a4,24	#, c2, v2
 1465              	# stdlib.c:224: 			if (c1 != c2) return c1 < c2 ? -1 : +1;
 1466 0aa8 E380E7FA 		beq	a5,a4,.L232	#, c1, c2,
 1467              	# stdlib.c:194: 			return c1 < c2 ? -1 : +1;
 1468 0aac 13051000 		li	a0,1		# <retval>,
 1469              	# stdlib.c:224: 			if (c1 != c2) return c1 < c2 ? -1 : +1;
 1470 0ab0 E3FCE7F8 		bgeu	a5,a4,.L232	#, c1, c2,
 1471 0ab4 6F00C000 		j	.L258		#
 1472              	.L260:
 1473              	# stdlib.c:194: 			return c1 < c2 ? -1 : +1;
 1474 0ab8 13051000 		li	a0,1		# <retval>,
 1475              	# stdlib.c:219: 			if (c1 != c2) return c1 < c2 ? -1 : +1;
 1476 0abc E3F6C6F8 		bgeu	a3,a2,.L232	#, c1, c2,
 1477              	.L258:
 1478              	# stdlib.c:194: 			return c1 < c2 ? -1 : +1;
 1479 0ac0 1305F0FF 		li	a0,-1		# <retval>,
 1480 0ac4 67800000 		ret	
 1482              		.align	2
 1483              		.globl	make_Light
 1485              	make_Light:
 1486              	# main_raytrace_termio.c:67:   L.position = position;
 1487 0ac8 83A64500 		lw	a3,4(a1)		# L$position$y, position.y
 1488 0acc 03A78500 		lw	a4,8(a1)		# L$position$z, position.z
 1489              	# main_raytrace_termio.c:69:   return L;
 1490 0ad0 83A50500 		lw	a1,0(a1)		# position.x, position.x
 1491 0ad4 2322D500 		sw	a3,4(a0)	# L$position$y, <retval>.position.y
 1492 0ad8 2324E500 		sw	a4,8(a0)	# L$position$z, <retval>.position.z
 1493 0adc 2320B500 		sw	a1,0(a0)	# position.x, <retval>.position.x
 1494 0ae0 2326C500 		sw	a2,12(a0)	# tmp81, <retval>.intensity
 1495              	# main_raytrace_termio.c:70: }
 1496 0ae4 67800000 		ret	
 1498              		.align	2
 1499              		.globl	make_Material
 1501              	make_Material:
 1502              	# main_raytrace_termio.c:84:   M.albedo = a;
 1503 0ae8 832E0600 		lw	t4,0(a2)		# a, a
 1504 0aec 032E4600 		lw	t3,4(a2)		# a, a
 1505 0af0 03238600 		lw	t1,8(a2)		# a, a
 1506 0af4 8328C600 		lw	a7,12(a2)		# a, a
 1507              	# main_raytrace_termio.c:85:   M.diffuse_color = color;
 1508 0af8 03A80600 		lw	a6,0(a3)		# color, color
 1509 0afc 03A64600 		lw	a2,4(a3)		# color, color
 1510 0b00 83A68600 		lw	a3,8(a3)		# color, color
 1511              	# main_raytrace_termio.c:84:   M.albedo = a;
 1512 0b04 2322D501 		sw	t4,4(a0)	# a, <retval>.albedo
 1513 0b08 2324C501 		sw	t3,8(a0)	# a, <retval>.albedo
 1514 0b0c 23266500 		sw	t1,12(a0)	# a, <retval>.albedo
 1515 0b10 23281501 		sw	a7,16(a0)	# a, <retval>.albedo
 1516              	# main_raytrace_termio.c:85:   M.diffuse_color = color;
 1517 0b14 232A0501 		sw	a6,20(a0)	# color, <retval>.diffuse_color
 1518 0b18 232CC500 		sw	a2,24(a0)	# color, <retval>.diffuse_color
 1519 0b1c 232ED500 		sw	a3,28(a0)	# color, <retval>.diffuse_color
 1520              	# main_raytrace_termio.c:87:   return M;
 1521 0b20 2320B500 		sw	a1,0(a0)	# tmp85, <retval>.refractive_index
 1522 0b24 2320E502 		sw	a4,32(a0)	# tmp88, <retval>.specular_exponent
 1523              	# main_raytrace_termio.c:88: }
 1524 0b28 67800000 		ret	
 1526              		.align	2
 1527              		.globl	make_Material_default
 1529              	make_Material_default:
 1530              	# main_raytrace_termio.c:96:   return M;
 1531 0b2c B7070000 		lui	a5,%hi(.LC1)	# tmp73,
 1532 0b30 03A70700 		lw	a4,%lo(.LC1)(a5)		# tmp74,
 1533 0b34 2320E500 		sw	a4,0(a0)	# tmp74, <retval>.refractive_index
 1534 0b38 2322E500 		sw	a4,4(a0)	# tmp74, <retval>.albedo.x
 1535 0b3c 13070000 		mv	a4,zero	# tmp79,
 1536 0b40 2324E500 		sw	a4,8(a0)	# tmp79, <retval>.albedo.y
 1537 0b44 2326E500 		sw	a4,12(a0)	# tmp80, <retval>.albedo.z
 1538 0b48 2328E500 		sw	a4,16(a0)	# tmp81, <retval>.albedo.w
 1539 0b4c 232AE500 		sw	a4,20(a0)	# tmp82, <retval>.diffuse_color.x
 1540 0b50 232CE500 		sw	a4,24(a0)	# tmp83, <retval>.diffuse_color.y
 1541 0b54 232EE500 		sw	a4,28(a0)	# tmp84, <retval>.diffuse_color.z
 1542 0b58 2320E502 		sw	a4,32(a0)	# tmp85, <retval>.specular_exponent
 1543              	# main_raytrace_termio.c:97: }
 1544 0b5c 67800000 		ret	
 1546              		.align	2
 1547              		.globl	make_Sphere
 1549              	make_Sphere:
 1550 0b60 130101FF 		addi	sp,sp,-16	#,,
 1551 0b64 23268100 		sw	s0,12(sp)	#,
 1552              	# main_raytrace_termio.c:109:   S.center = c;
 1553 0b68 03A40500 		lw	s0,0(a1)		# c, c
 1554 0b6c 83A34500 		lw	t2,4(a1)		# c, c
 1555 0b70 83A28500 		lw	t0,8(a1)		# c, c
 1556              	# main_raytrace_termio.c:111:   S.material = M;
 1557 0b74 83AF0600 		lw	t6,0(a3)		# M, M
 1558 0b78 03AF4600 		lw	t5,4(a3)		# M, M
 1559 0b7c 83AE8600 		lw	t4,8(a3)		# M, M
 1560 0b80 03AEC600 		lw	t3,12(a3)		# M, M
 1561 0b84 03A30601 		lw	t1,16(a3)		# M, M
 1562 0b88 83A84601 		lw	a7,20(a3)		# M, M
 1563 0b8c 03A88601 		lw	a6,24(a3)		# M, M
 1564 0b90 83A5C601 		lw	a1,28(a3)		# M, M
 1565 0b94 03A70602 		lw	a4,32(a3)		# M, M
 1566              	# main_raytrace_termio.c:109:   S.center = c;
 1567 0b98 23208500 		sw	s0,0(a0)	# c, <retval>.center
 1568              	# main_raytrace_termio.c:113: }
 1569 0b9c 0324C100 		lw	s0,12(sp)		#,
 1570              	# main_raytrace_termio.c:109:   S.center = c;
 1571 0ba0 23227500 		sw	t2,4(a0)	# c, <retval>.center
 1572 0ba4 23245500 		sw	t0,8(a0)	# c, <retval>.center
 1573              	# main_raytrace_termio.c:111:   S.material = M;
 1574 0ba8 2328F501 		sw	t6,16(a0)	# M, <retval>.material
 1575 0bac 232AE501 		sw	t5,20(a0)	# M, <retval>.material
 1576 0bb0 232CD501 		sw	t4,24(a0)	# M, <retval>.material
 1577 0bb4 232EC501 		sw	t3,28(a0)	# M, <retval>.material
 1578 0bb8 23206502 		sw	t1,32(a0)	# M, <retval>.material
 1579 0bbc 23221503 		sw	a7,36(a0)	# M, <retval>.material
 1580 0bc0 23240503 		sw	a6,40(a0)	# M, <retval>.material
 1581 0bc4 2326B502 		sw	a1,44(a0)	# M, <retval>.material
 1582 0bc8 2328E502 		sw	a4,48(a0)	# M, <retval>.material
 1583              	# main_raytrace_termio.c:112:   return S;
 1584 0bcc 2326C500 		sw	a2,12(a0)	# tmp90, <retval>.radius
 1585              	# main_raytrace_termio.c:113: }
 1586 0bd0 13010101 		addi	sp,sp,16	#,,
 1587 0bd4 67800000 		jr	ra		#
 1589              		.globl	__subsf3
 1590              		.globl	__mulsf3
 1591              		.globl	__addsf3
 1592              		.globl	__gtsf2
 1593              		.globl	__ltsf2
 1594              		.align	2
 1595              		.globl	Sphere_ray_intersect
 1597              	Sphere_ray_intersect:
 1598 0bd8 130101FE 		addi	sp,sp,-32	#,,
 1599 0bdc 232C8100 		sw	s0,24(sp)	#,
 1600 0be0 23282101 		sw	s2,16(sp)	#,
 1601 0be4 13040500 		mv	s0,a0	# S, tmp134
 1602 0be8 13890500 		mv	s2,a1	# tmp105, tmp135
 1603              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 1604 0bec 03250500 		lw	a0,0(a0)		#, S_11(D)->center.x
 1605 0bf0 83A50500 		lw	a1,0(a1)		#, orig.x
 1606              	# main_raytrace_termio.c:115: BOOL Sphere_ray_intersect(Sphere* S, vec3 orig, vec3 dir, float* t0) 
 1607 0bf4 232E1100 		sw	ra,28(sp)	#,
 1608 0bf8 232A9100 		sw	s1,20(sp)	#,
 1609 0bfc 23263101 		sw	s3,12(sp)	#,
 1610 0c00 93040600 		mv	s1,a2	# tmp106, tmp136
 1611 0c04 23244101 		sw	s4,8(sp)	#,
 1612 0c08 23225101 		sw	s5,4(sp)	#,
 1613 0c0c 23206101 		sw	s6,0(sp)	#,
 1614              	# main_raytrace_termio.c:115: BOOL Sphere_ray_intersect(Sphere* S, vec3 orig, vec3 dir, float* t0) 
 1615 0c10 938A0600 		mv	s5,a3	# t0, tmp137
 1616              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 1617 0c14 97000000 		call	__subsf3		#
 1617      E7800000 
 1618 0c1c 130A0500 		mv	s4,a0	# tmp138,
 1619 0c20 83254900 		lw	a1,4(s2)		#, orig.y
 1620 0c24 03254400 		lw	a0,4(s0)		#, S_11(D)->center.y
 1621 0c28 97000000 		call	__subsf3		#
 1621      E7800000 
 1622 0c30 93090500 		mv	s3,a0	# tmp139,
 1623 0c34 83258900 		lw	a1,8(s2)		#, orig.z
 1624 0c38 03258400 		lw	a0,8(s0)		#, S_11(D)->center.z
 1625 0c3c 97000000 		call	__subsf3		#
 1625      E7800000 
 1626              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1627 0c44 83A50400 		lw	a1,0(s1)		#, dir.x
 1628              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 1629 0c48 13090500 		mv	s2,a0	# tmp140,
 1630              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1631 0c4c 13050A00 		mv	a0,s4	#, tmp108
 1632 0c50 97000000 		call	__mulsf3		#
 1632      E7800000 
 1633              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1634 0c58 83A54400 		lw	a1,4(s1)		#, dir.y
 1635              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1636 0c5c 130B0500 		mv	s6,a0	# tmp111, tmp141
 1637              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1638 0c60 13850900 		mv	a0,s3	#, tmp109
 1639 0c64 97000000 		call	__mulsf3		#
 1639      E7800000 
 1640 0c6c 93050500 		mv	a1,a0	# tmp142,
 1641              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1642 0c70 13050B00 		mv	a0,s6	#, tmp111
 1643 0c74 97000000 		call	__addsf3		#
 1643      E7800000 
 1644              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1645 0c7c 83A58400 		lw	a1,8(s1)		#, dir.z
 1646              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1647 0c80 93040500 		mv	s1,a0	# tmp113, tmp143
 1648              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1649 0c84 13050900 		mv	a0,s2	#, tmp110
 1650 0c88 97000000 		call	__mulsf3		#
 1650      E7800000 
 1651 0c90 93050500 		mv	a1,a0	# tmp144,
 1652              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1653 0c94 13850400 		mv	a0,s1	#, tmp113
 1654 0c98 97000000 		call	__addsf3		#
 1654      E7800000 
 1655 0ca0 93040500 		mv	s1,a0	# tmp145,
 1656              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1657 0ca4 93050A00 		mv	a1,s4	#, tmp108
 1658 0ca8 13050A00 		mv	a0,s4	#, tmp11
 1659 0cac 97000000 		call	__mulsf3		#
 1659      E7800000 
 1660              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1661 0cb4 93850900 		mv	a1,s3	#, tmp109
 1662              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1663 0cb8 130A0500 		mv	s4,a0	# tmp116, tmp146
 1664              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1665 0cbc 13850900 		mv	a0,s3	#, tmp11
 1666 0cc0 97000000 		call	__mulsf3		#
 1666      E7800000 
 1667 0cc8 93050500 		mv	a1,a0	# tmp147,
 1668              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1669 0ccc 13050A00 		mv	a0,s4	#, tmp116
 1670 0cd0 97000000 		call	__addsf3		#
 1670      E7800000 
 1671              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1672 0cd8 93050900 		mv	a1,s2	#, tmp110
 1673              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1674 0cdc 93090500 		mv	s3,a0	# tmp118, tmp148
 1675              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1676 0ce0 13050900 		mv	a0,s2	#, tmp11
 1677 0ce4 97000000 		call	__mulsf3		#
 1677      E7800000 
 1678 0cec 93050500 		mv	a1,a0	# tmp149,
 1679              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1680 0cf0 13850900 		mv	a0,s3	#, tmp118
 1681 0cf4 97000000 		call	__addsf3		#
 1681      E7800000 
 1682 0cfc 13090500 		mv	s2,a0	# tmp120, tmp150
 1683              	# main_raytrace_termio.c:118:   float d2 = vec3_dot(L,L) - tca*tca;
 1684 0d00 93850400 		mv	a1,s1	#, tmp115
 1685 0d04 13850400 		mv	a0,s1	#, tmp115
 1686 0d08 97000000 		call	__mulsf3		#
 1686      E7800000 
 1687 0d10 93050500 		mv	a1,a0	# tmp151,
 1688              	# main_raytrace_termio.c:118:   float d2 = vec3_dot(L,L) - tca*tca;
 1689 0d14 13050900 		mv	a0,s2	#, tmp120
 1690 0d18 97000000 		call	__subsf3		#
 1690      E7800000 
 1691              	# main_raytrace_termio.c:119:   float r2 = S->radius*S->radius;
 1692 0d20 8325C400 		lw	a1,12(s0)		# _3, S_11(D)->radius
 1693              	# main_raytrace_termio.c:118:   float d2 = vec3_dot(L,L) - tca*tca;
 1694 0d24 13090500 		mv	s2,a0	# tmp122, tmp152
 1695              	# main_raytrace_termio.c:119:   float r2 = S->radius*S->radius;
 1696 0d28 13850500 		mv	a0,a1	#,
 1697 0d2c 97000000 		call	__mulsf3		#
 1697      E7800000 
 1698 0d34 13040500 		mv	s0,a0	# tmp123, tmp153
 1699              	# main_raytrace_termio.c:120:   if (d2 > r2) return 0;
 1700 0d38 93050500 		mv	a1,a0	#, tmp123
 1701 0d3c 13050900 		mv	a0,s2	#, tmp122
 1702 0d40 97000000 		call	__gtsf2		#
 1702      E7800000 
 1703 0d48 6358A002 		ble	a0,zero,.L277	#, tmp154,,
 1704              	# main_raytrace_termio.c:120:   if (d2 > r2) return 0;
 1705 0d4c 13050000 		li	a0,0		# <retval>,
 1706              	.L269:
 1707              	# main_raytrace_termio.c:127: }
 1708 0d50 8320C101 		lw	ra,28(sp)		#,
 1709 0d54 03248101 		lw	s0,24(sp)		#,
 1710 0d58 83244101 		lw	s1,20(sp)		#,
 1711 0d5c 03290101 		lw	s2,16(sp)		#,
 1712 0d60 8329C100 		lw	s3,12(sp)		#,
 1713 0d64 032A8100 		lw	s4,8(sp)		#,
 1714 0d68 832A4100 		lw	s5,4(sp)		#,
 1715 0d6c 032B0100 		lw	s6,0(sp)		#,
 1716 0d70 13010102 		addi	sp,sp,32	#,,
 1717 0d74 67800000 		jr	ra		#
 1718              	.L277:
 1719              	# main_raytrace_termio.c:121:   float thc = sqrtf(r2 - d2);
 1720 0d78 93050900 		mv	a1,s2	#, tmp122
 1721 0d7c 13050400 		mv	a0,s0	#, tmp123
 1722 0d80 97000000 		call	__subsf3		#
 1722      E7800000 
 1723 0d88 97000000 		call	sqrtf		#
 1723      E7800000 
 1724              	# main_raytrace_termio.c:122:   *t0       = tca - thc;
 1725 0d90 93050500 		mv	a1,a0	#, thc
 1726              	# main_raytrace_termio.c:121:   float thc = sqrtf(r2 - d2);
 1727 0d94 13090500 		mv	s2,a0	# thc, tmp155
 1728              	# main_raytrace_termio.c:122:   *t0       = tca - thc;
 1729 0d98 13850400 		mv	a0,s1	#, tmp115
 1730 0d9c 97000000 		call	__subsf3		#
 1730      E7800000 
 1731              	# main_raytrace_termio.c:124:   if (*t0 < 0) *t0 = t1;
 1732 0da4 93050000 		mv	a1,zero	#,
 1733              	# main_raytrace_termio.c:122:   *t0       = tca - thc;
 1734 0da8 13040500 		mv	s0,a0	# t1, tmp156
 1735              	# main_raytrace_termio.c:124:   if (*t0 < 0) *t0 = t1;
 1736 0dac 97000000 		call	__ltsf2		#
 1736      E7800000 
 1737 0db4 635C0500 		bge	a0,zero,.L271	#, tmp157,,
 1738              	# main_raytrace_termio.c:123:   float t1 = tca + thc;
 1739 0db8 93850400 		mv	a1,s1	#, tmp115
 1740 0dbc 13050900 		mv	a0,s2	#, thc
 1741 0dc0 97000000 		call	__addsf3		#
 1741      E7800000 
 1742 0dc8 13040500 		mv	s0,a0	# t1, tmp158
 1743              	.L271:
 1744 0dcc 23A08A00 		sw	s0,0(s5)	# t1, MEM <float> [(void *)t0_17(D)]
 1745              	# main_raytrace_termio.c:125:   if (*t0 < 0) return 0;
 1746 0dd0 93050000 		mv	a1,zero	#,
 1747 0dd4 13050400 		mv	a0,s0	#, t1
 1748 0dd8 97000000 		call	__ltsf2		#
 1748      E7800000 
 1749 0de0 1355F501 		srli	a0,a0,31	#, tmp129, tmp159
 1750 0de4 13451500 		xori	a0,a0,1	#, tmp131, tmp129
 1751              	# main_raytrace_termio.c:120:   if (d2 > r2) return 0;
 1752 0de8 1375F50F 		andi	a0,a0,0xff	# <retval>, tmp131
 1753 0dec 6FF05FF6 		j	.L269		#
 1755              		.align	2
 1756              		.globl	reflect
 1758              	reflect:
 1759 0df0 130101FD 		addi	sp,sp,-48	#,,
 1760 0df4 23286101 		sw	s6,16(sp)	#,
 1761 0df8 23267101 		sw	s7,12(sp)	#,
 1762 0dfc 03AB0500 		lw	s6,0(a1)		# U$x, I.x
 1763 0e00 832B0600 		lw	s7,0(a2)		# V$x, N.x
 1764 0e04 232C4101 		sw	s4,24(sp)	#,
 1765 0e08 232A5101 		sw	s5,20(sp)	#,
 1766 0e0c 03AA4500 		lw	s4,4(a1)		# U$y, I.y
 1767 0e10 832A4600 		lw	s5,4(a2)		# V$y, N.y
 1768 0e14 93870500 		mv	a5,a1	# tmp91, tmp106
 1769 0e18 23248102 		sw	s0,40(sp)	#,
 1770              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1771 0e1c 93050B00 		mv	a1,s6	#, U$x
 1772              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 1773 0e20 13040500 		mv	s0,a0	# tmp105, .result_ptr
 1774              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1775 0e24 13850B00 		mv	a0,s7	#, V$x
 1776              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 1777 0e28 23261102 		sw	ra,44(sp)	#,
 1778 0e2c 23229102 		sw	s1,36(sp)	#,
 1779 0e30 23202103 		sw	s2,32(sp)	#,
 1780 0e34 232E3101 		sw	s3,28(sp)	#,
 1781 0e38 03A98700 		lw	s2,8(a5)		# U$z, I.z
 1782 0e3c 83298600 		lw	s3,8(a2)		# V$z, N.z
 1783              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1784 0e40 97000000 		call	__mulsf3		#
 1784      E7800000 
 1785 0e48 93040500 		mv	s1,a0	# tmp93, tmp108
 1786              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1787 0e4c 93850A00 		mv	a1,s5	#, V$y
 1788 0e50 13050A00 		mv	a0,s4	#, U$y
 1789 0e54 97000000 		call	__mulsf3		#
 1789      E7800000 
 1790 0e5c 93050500 		mv	a1,a0	# tmp109,
 1791              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1792 0e60 13850400 		mv	a0,s1	#, tmp93
 1793 0e64 97000000 		call	__addsf3		#
 1793      E7800000 
 1794 0e6c 93040500 		mv	s1,a0	# tmp95, tmp110
 1795              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1796 0e70 93850900 		mv	a1,s3	#, V$z
 1797 0e74 13050900 		mv	a0,s2	#, U$z
 1798 0e78 97000000 		call	__mulsf3		#
 1798      E7800000 
 1799 0e80 93050500 		mv	a1,a0	# tmp111,
 1800              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1801 0e84 13850400 		mv	a0,s1	#, tmp95
 1802 0e88 97000000 		call	__addsf3		#
 1802      E7800000 
 1803 0e90 93050500 		mv	a1,a0	# tmp112,
 1804              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 1805 0e94 97000000 		call	__addsf3		#
 1805      E7800000 
 1806              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 1807 0e9c 93850B00 		mv	a1,s7	#, V$x
 1808              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 1809 0ea0 93040500 		mv	s1,a0	# tmp98, tmp113
 1810              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 1811 0ea4 97000000 		call	__mulsf3		#
 1811      E7800000 
 1812 0eac 93050500 		mv	a1,a0	# tmp114,
 1813              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 1814 0eb0 13050B00 		mv	a0,s6	#, U$x
 1815 0eb4 97000000 		call	__subsf3		#
 1815      E7800000 
 1816              	# main_raytrace_termio.c:41:   return V;
 1817 0ebc 2320A400 		sw	a0,0(s0)	# tmp115, <retval>.x
 1818              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 1819 0ec0 93850A00 		mv	a1,s5	#, V$y
 1820 0ec4 13850400 		mv	a0,s1	#, tmp98
 1821 0ec8 97000000 		call	__mulsf3		#
 1821      E7800000 
 1822 0ed0 93050500 		mv	a1,a0	# tmp116,
 1823              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 1824 0ed4 13050A00 		mv	a0,s4	#, U$y
 1825 0ed8 97000000 		call	__subsf3		#
 1825      E7800000 
 1826              	# main_raytrace_termio.c:41:   return V;
 1827 0ee0 2322A400 		sw	a0,4(s0)	# tmp117, <retval>.y
 1828              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 1829 0ee4 93850900 		mv	a1,s3	#, V$z
 1830 0ee8 13850400 		mv	a0,s1	#, tmp98
 1831 0eec 97000000 		call	__mulsf3		#
 1831      E7800000 
 1832 0ef4 93050500 		mv	a1,a0	# tmp118,
 1833              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 1834 0ef8 13050900 		mv	a0,s2	#, U$z
 1835 0efc 97000000 		call	__subsf3		#
 1835      E7800000 
 1836              	# main_raytrace_termio.c:41:   return V;
 1837 0f04 2324A400 		sw	a0,8(s0)	# tmp119, <retval>.z
 1838              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 1839 0f08 8320C102 		lw	ra,44(sp)		#,
 1840 0f0c 13050400 		mv	a0,s0	#, .result_ptr
 1841 0f10 03248102 		lw	s0,40(sp)		#,
 1842 0f14 83244102 		lw	s1,36(sp)		#,
 1843 0f18 03290102 		lw	s2,32(sp)		#,
 1844 0f1c 8329C101 		lw	s3,28(sp)		#,
 1845 0f20 032A8101 		lw	s4,24(sp)		#,
 1846 0f24 832A4101 		lw	s5,20(sp)		#,
 1847 0f28 032B0101 		lw	s6,16(sp)		#,
 1848 0f2c 832BC100 		lw	s7,12(sp)		#,
 1849 0f30 13010103 		addi	sp,sp,48	#,,
 1850 0f34 67800000 		jr	ra		#
 1852              		.globl	__divsf3
 1853              		.align	2
 1854              		.globl	refract
 1856              	refract:
 1857 0f38 130101F8 		addi	sp,sp,-128	#,,
 1858 0f3c 23206107 		sw	s6,96(sp)	#,
 1859 0f40 2326B105 		sw	s11,76(sp)	#,
 1860 0f44 032B0600 		lw	s6,0(a2)		# V$x, N.x
 1861 0f48 83AD0500 		lw	s11,0(a1)		# U$x, I.x
 1862 0f4c 23225107 		sw	s5,100(sp)	#,
 1863 0f50 2328A105 		sw	s10,80(sp)	#,
 1864 0f54 832A4600 		lw	s5,4(a2)		# V$y, N.y
 1865 0f58 03AD4500 		lw	s10,4(a1)		# U$y, I.y
 1866 0f5c 232C8106 		sw	s0,120(sp)	#,
 1867 0f60 232A9106 		sw	s1,116(sp)	#,
 1868 0f64 13840500 		mv	s0,a1	# tmp106, tmp162
 1869 0f68 93040500 		mv	s1,a0	# tmp161, .result_ptr
 1870              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1871 0f6c 93850D00 		mv	a1,s11	#, U$x
 1872 0f70 13050B00 		mv	a0,s6	#, V$x
 1873              	# main_raytrace_termio.c:131: vec3 refract(vec3 I, vec3 N, float eta_t, float eta_i /* =1.f */) { /
 1874 0f74 232E1106 		sw	ra,124(sp)	#,
 1875 0f78 2322E100 		sw	a4,4(sp)	# tmp165, %sfp
 1876 0f7c 23282107 		sw	s2,112(sp)	#,
 1877 0f80 23263107 		sw	s3,108(sp)	#,
 1878 0f84 23244107 		sw	s4,104(sp)	#,
 1879 0f88 93890600 		mv	s3,a3	# eta_t, tmp164
 1880 0f8c 232E7105 		sw	s7,92(sp)	#,
 1881 0f90 232C8105 		sw	s8,88(sp)	#,
 1882 0f94 232A9105 		sw	s9,84(sp)	#,
 1883 0f98 032C8600 		lw	s8,8(a2)		# V$z, N.z
 1884              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1885 0f9c 97000000 		call	__mulsf3		#
 1885      E7800000 
 1886 0fa4 130A0500 		mv	s4,a0	# tmp111, tmp166
 1887              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1888 0fa8 93850A00 		mv	a1,s5	#, V$y
 1889 0fac 13050D00 		mv	a0,s10	#, U$y
 1890 0fb0 97000000 		call	__mulsf3		#
 1890      E7800000 
 1891 0fb8 832C8400 		lw	s9,8(s0)		# U$z, I.z
 1892 0fbc 93050500 		mv	a1,a0	# tmp167,
 1893              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1894 0fc0 13050A00 		mv	a0,s4	#, tmp111
 1895 0fc4 97000000 		call	__addsf3		#
 1895      E7800000 
 1896 0fcc 130A0500 		mv	s4,a0	# tmp113, tmp168
 1897              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1898 0fd0 93850C00 		mv	a1,s9	#, U$z
 1899 0fd4 13050C00 		mv	a0,s8	#, V$z
 1900 0fd8 97000000 		call	__mulsf3		#
 1900      E7800000 
 1901 0fe0 93050500 		mv	a1,a0	# tmp169,
 1902              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1903 0fe4 13050A00 		mv	a0,s4	#, tmp113
 1904              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 1905 0fe8 370A0000 		lui	s4,%hi(.LC1)	# tmp160,
 1906              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1907 0fec 97000000 		call	__addsf3		#
 1907      E7800000 
 1908              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 1909 0ff4 832B0A00 		lw	s7,%lo(.LC1)(s4)		# tmp116,
 1910              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 1911 0ff8 13090500 		mv	s2,a0	# tmp115, tmp170
 1912              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 1913 0ffc 93850B00 		mv	a1,s7	#, tmp116
 1914 1000 97000000 		call	__gtsf2		#
 1914      E7800000 
 1915 1008 635AA008 		ble	a0,zero,.L290	#, tmp171,,
 1916              	.L281:
 1917              	# main_raytrace_termio.c:133:   if (cosi<0) return refract(I, vec3_neg(N), eta_i, eta_t); // if the
 1918 100c 03230400 		lw	t1,0(s0)		# I, I
 1919 1010 83284400 		lw	a7,4(s0)		# I, I
 1920 1014 03288400 		lw	a6,8(s0)		# I, I
 1921 1018 83264100 		lw	a3,4(sp)		#, %sfp
 1922              	# main_raytrace_termio.c:50: static inline vec3 vec3_neg(vec3 V)            { return make_vec3(-V.x
 1923 101c B7070080 		li	a5,-2147483648		# tmp127,
 1924 1020 33CB6701 		xor	s6,a5,s6	# V$x, tmp128, tmp127
 1925 1024 B3CA5701 		xor	s5,a5,s5	# V$y, tmp130, tmp127
 1926              	# main_raytrace_termio.c:133:   if (cosi<0) return refract(I, vec3_neg(N), eta_i, eta_t); // if the
 1927 1028 13870900 		mv	a4,s3	#, eta_t
 1928              	# main_raytrace_termio.c:50: static inline vec3 vec3_neg(vec3 V)            { return make_vec3(-V.x
 1929 102c B3C78701 		xor	a5,a5,s8	# V$z, tmp132, tmp127
 1930              	# main_raytrace_termio.c:133:   if (cosi<0) return refract(I, vec3_neg(N), eta_i, eta_t); // if the
 1931 1030 13060101 		addi	a2,sp,16	#,,
 1932 1034 93050102 		addi	a1,sp,32	#,,
 1933 1038 13850400 		mv	a0,s1	#, .result_ptr
 1934 103c 23206102 		sw	t1,32(sp)	# I,
 1935 1040 23221103 		sw	a7,36(sp)	# I,
 1936 1044 23240103 		sw	a6,40(sp)	# I,
 1937 1048 23286101 		sw	s6,16(sp)	# tmp128,
 1938 104c 232A5101 		sw	s5,20(sp)	# tmp130,
 1939 1050 232CF100 		sw	a5,24(sp)	# tmp132,
 1940 1054 97000000 		call	refract		#
 1940      E7800000 
 1941              	.L280:
 1942              	# main_raytrace_termio.c:138: }
 1943 105c 8320C107 		lw	ra,124(sp)		#,
 1944 1060 03248107 		lw	s0,120(sp)		#,
 1945 1064 03290107 		lw	s2,112(sp)		#,
 1946 1068 8329C106 		lw	s3,108(sp)		#,
 1947 106c 032A8106 		lw	s4,104(sp)		#,
 1948 1070 832A4106 		lw	s5,100(sp)		#,
 1949 1074 032B0106 		lw	s6,96(sp)		#,
 1950 1078 832BC105 		lw	s7,92(sp)		#,
 1951 107c 032C8105 		lw	s8,88(sp)		#,
 1952 1080 832C4105 		lw	s9,84(sp)		#,
 1953 1084 032D0105 		lw	s10,80(sp)		#,
 1954 1088 832DC104 		lw	s11,76(sp)		#,
 1955 108c 13850400 		mv	a0,s1	#, .result_ptr
 1956 1090 83244107 		lw	s1,116(sp)		#,
 1957 1094 13010108 		addi	sp,sp,128	#,,
 1958 1098 67800000 		jr	ra		#
 1959              	.L290:
 1960              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 1961 109c B7070000 		lui	a5,%hi(.LC2)	# tmp120,
 1962 10a0 83A50700 		lw	a1,%lo(.LC2)(a5)		#,
 1963 10a4 13050900 		mv	a0,s2	#, tmp115
 1964 10a8 93070000 		mv	a5,zero	# _63,
 1965 10ac 2324F100 		sw	a5,8(sp)	# _63, %sfp
 1966 10b0 97000000 		call	__ltsf2		#
 1966      E7800000 
 1967              	# main_raytrace_termio.c:132:   float cosi = -max(-1.f, min(1.f, vec3_dot(I,N)));
 1968 10b8 23267101 		sw	s7,12(sp)	# tmp116, %sfp
 1969              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 1970 10bc 63500514 		bge	a0,zero,.L291	#, tmp172,,
 1971              	.L282:
 1972              	# main_raytrace_termio.c:134:   float eta = eta_i / eta_t;
 1973 10c0 03254100 		lw	a0,4(sp)		#, %sfp
 1974 10c4 93850900 		mv	a1,s3	#, eta_t
 1975 10c8 97000000 		call	__divsf3		#
 1975      E7800000 
 1976              	# main_raytrace_termio.c:135:   float k = 1 - eta*eta*(1 - cosi*cosi);
 1977 10d0 93050500 		mv	a1,a0	#, tmp141
 1978              	# main_raytrace_termio.c:134:   float eta = eta_i / eta_t;
 1979 10d4 13040500 		mv	s0,a0	# tmp141, tmp176
 1980              	# main_raytrace_termio.c:135:   float k = 1 - eta*eta*(1 - cosi*cosi);
 1981 10d8 97000000 		call	__mulsf3		#
 1981      E7800000 
 1982              	# main_raytrace_termio.c:135:   float k = 1 - eta*eta*(1 - cosi*cosi);
 1983 10e0 83258100 		lw	a1,8(sp)		#, %sfp
 1984 10e4 97000000 		call	__mulsf3		#
 1984      E7800000 
 1985 10ec 93050500 		mv	a1,a0	# tmp177,
 1986              	# main_raytrace_termio.c:135:   float k = 1 - eta*eta*(1 - cosi*cosi);
 1987 10f0 03250A00 		lw	a0,%lo(.LC1)(s4)		#,
 1988 10f4 97000000 		call	__subsf3		#
 1988      E7800000 
 1989              	# main_raytrace_termio.c:136:   return k<0 ? make_vec3(1,0,0) : vec3_add(vec3_scale(eta,I),vec3_sca
 1990 10fc 93050000 		mv	a1,zero	#,
 1991              	# main_raytrace_termio.c:135:   float k = 1 - eta*eta*(1 - cosi*cosi);
 1992 1100 13090500 		mv	s2,a0	# tmp145, tmp178
 1993              	# main_raytrace_termio.c:136:   return k<0 ? make_vec3(1,0,0) : vec3_add(vec3_scale(eta,I),vec3_sca
 1994 1104 97000000 		call	__ltsf2		#
 1994      E7800000 
 1995 110c 635E0500 		bge	a0,zero,.L288	#, tmp179,,
 1996              	# main_raytrace_termio.c:41:   return V;
 1997 1110 83270A00 		lw	a5,%lo(.LC1)(s4)		# tmp148,
 1998 1114 13070000 		mv	a4,zero	# tmp192,
 1999 1118 23A2E400 		sw	a4,4(s1)	# tmp192, <retval>.y
 2000 111c 23A4E400 		sw	a4,8(s1)	# tmp193, <retval>.z
 2001 1120 23A0F400 		sw	a5,0(s1)	# tmp148, <retval>.x
 2002 1124 6FF09FF3 		j	.L280		#
 2003              	.L288:
 2004              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2005 1128 93850D00 		mv	a1,s11	#, U$x
 2006 112c 13050400 		mv	a0,s0	#, tmp141
 2007 1130 97000000 		call	__mulsf3		#
 2007      E7800000 
 2008 1138 93050400 		mv	a1,s0	#, tmp141
 2009 113c 930B0500 		mv	s7,a0	# tmp180,
 2010 1140 13050D00 		mv	a0,s10	#, U$y
 2011 1144 97000000 		call	__mulsf3		#
 2011      E7800000 
 2012 114c 130A0500 		mv	s4,a0	# tmp181,
 2013 1150 93850C00 		mv	a1,s9	#, U$z
 2014 1154 13050400 		mv	a0,s0	#, tmp141
 2015 1158 97000000 		call	__mulsf3		#
 2015      E7800000 
 2016              	# main_raytrace_termio.c:136:   return k<0 ? make_vec3(1,0,0) : vec3_add(vec3_scale(eta,I),vec3_sca
 2017 1160 8325C100 		lw	a1,12(sp)		#, %sfp
 2018              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2019 1164 93090500 		mv	s3,a0	# tmp182,
 2020              	# main_raytrace_termio.c:136:   return k<0 ? make_vec3(1,0,0) : vec3_add(vec3_scale(eta,I),vec3_sca
 2021 1168 13050400 		mv	a0,s0	#, tmp141
 2022 116c 97000000 		call	__mulsf3		#
 2022      E7800000 
 2023 1174 13040500 		mv	s0,a0	# tmp152, tmp183
 2024              	# main_raytrace_termio.c:136:   return k<0 ? make_vec3(1,0,0) : vec3_add(vec3_scale(eta,I),vec3_sca
 2025 1178 13050900 		mv	a0,s2	#, tmp145
 2026 117c 97000000 		call	sqrtf		#
 2026      E7800000 
 2027 1184 93050500 		mv	a1,a0	# tmp184,
 2028              	# main_raytrace_termio.c:136:   return k<0 ? make_vec3(1,0,0) : vec3_add(vec3_scale(eta,I),vec3_sca
 2029 1188 13050400 		mv	a0,s0	#, tmp152
 2030 118c 97000000 		call	__subsf3		#
 2030      E7800000 
 2031 1194 13040500 		mv	s0,a0	# tmp153, tmp185
 2032              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2033 1198 93050500 		mv	a1,a0	#, tmp153
 2034 119c 13050B00 		mv	a0,s6	#, V$x
 2035 11a0 97000000 		call	__mulsf3		#
 2035      E7800000 
 2036              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2037 11a8 93850B00 		mv	a1,s7	#, tmp149
 2038 11ac 97000000 		call	__addsf3		#
 2038      E7800000 
 2039              	# main_raytrace_termio.c:41:   return V;
 2040 11b4 23A0A400 		sw	a0,0(s1)	# tmp186, <retval>.x
 2041              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2042 11b8 93850A00 		mv	a1,s5	#, V$y
 2043 11bc 13050400 		mv	a0,s0	#, tmp153
 2044 11c0 97000000 		call	__mulsf3		#
 2044      E7800000 
 2045              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2046 11c8 93050A00 		mv	a1,s4	#, tmp150
 2047 11cc 97000000 		call	__addsf3		#
 2047      E7800000 
 2048              	# main_raytrace_termio.c:41:   return V;
 2049 11d4 23A2A400 		sw	a0,4(s1)	# tmp187, <retval>.y
 2050              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2051 11d8 93050400 		mv	a1,s0	#, tmp153
 2052 11dc 13050C00 		mv	a0,s8	#, V$z
 2053 11e0 97000000 		call	__mulsf3		#
 2053      E7800000 
 2054              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2055 11e8 93850900 		mv	a1,s3	#, tmp151
 2056 11ec 97000000 		call	__addsf3		#
 2056      E7800000 
 2057              	# main_raytrace_termio.c:41:   return V;
 2058 11f4 23A4A400 		sw	a0,8(s1)	# tmp188, <retval>.z
 2059 11f8 6FF05FE6 		j	.L280		#
 2060              	.L291:
 2061              	# main_raytrace_termio.c:132:   float cosi = -max(-1.f, min(1.f, vec3_dot(I,N)));
 2062 11fc B7070080 		li	a5,-2147483648		# tmp122,
 2063 1200 B3C72701 		xor	a5,a5,s2	# tmp115, tmp191, tmp122
 2064              	# main_raytrace_termio.c:133:   if (cosi<0) return refract(I, vec3_neg(N), eta_i, eta_t); // if the
 2065 1204 93050000 		mv	a1,zero	#,
 2066 1208 13050900 		mv	a0,s2	#, tmp115
 2067              	# main_raytrace_termio.c:132:   float cosi = -max(-1.f, min(1.f, vec3_dot(I,N)));
 2068 120c 2326F100 		sw	a5,12(sp)	# tmp191, %sfp
 2069              	# main_raytrace_termio.c:133:   if (cosi<0) return refract(I, vec3_neg(N), eta_i, eta_t); // if the
 2070 1210 97000000 		call	__gtsf2		#
 2070      E7800000 
 2071 1218 E34AA0DE 		bgt	a0,zero,.L281	#, tmp173,,
 2072              	# main_raytrace_termio.c:135:   float k = 1 - eta*eta*(1 - cosi*cosi);
 2073 121c 93050900 		mv	a1,s2	#, tmp115
 2074 1220 13050900 		mv	a0,s2	#, tmp11
 2075 1224 97000000 		call	__mulsf3		#
 2075      E7800000 
 2076 122c 93050500 		mv	a1,a0	# tmp174,
 2077              	# main_raytrace_termio.c:135:   float k = 1 - eta*eta*(1 - cosi*cosi);
 2078 1230 13850B00 		mv	a0,s7	#, tmp116
 2079 1234 97000000 		call	__subsf3		#
 2079      E7800000 
 2080 123c 2324A100 		sw	a0,8(sp)	# tmp175, %sfp
 2081 1240 6FF01FE8 		j	.L282		#
 2083              		.globl	__extendsfdf2
 2084              		.globl	__gtdf2
 2085              		.globl	__ltdf2
 2086              		.globl	__muldf3
 2087              		.globl	__adddf3
 2088              		.globl	__fixdfsi
 2089              		.align	2
 2090              		.globl	scene_intersect
 2092              	scene_intersect:
 2093 1244 130101F9 		addi	sp,sp,-112	#,,
 2094 1248 2322F102 		sw	a5,36(sp)	# tmp281, %sfp
 2095              	# main_raytrace_termio.c:142:   float spheres_dist = 1e30;
 2096 124c B7070000 		lui	a5,%hi(.LC3)	# tmp273,
 2097 1250 2326F102 		sw	a5,44(sp)	# tmp273, %sfp
 2098 1254 83A70700 		lw	a5,%lo(.LC3)(a5)		# spheres_dist,
 2099              	# main_raytrace_termio.c:141: BOOL scene_intersect(vec3 orig, vec3 dir, Sphere* spheres, int nb_sph
 2100 1258 232A5105 		sw	s5,84(sp)	#,
 2101 125c 23286105 		sw	s6,80(sp)	#,
 2102 1260 23267105 		sw	s7,76(sp)	#,
 2103 1264 23248105 		sw	s8,72(sp)	#,
 2104 1268 23229105 		sw	s9,68(sp)	#,
 2105 126c 2320A105 		sw	s10,64(sp)	#,
 2106 1270 23261106 		sw	ra,108(sp)	#,
 2107 1274 23248106 		sw	s0,104(sp)	#,
 2108 1278 23229106 		sw	s1,100(sp)	#,
 2109 127c 23202107 		sw	s2,96(sp)	#,
 2110 1280 232E3105 		sw	s3,92(sp)	#,
 2111 1284 232C4105 		sw	s4,88(sp)	#,
 2112 1288 232EB103 		sw	s11,60(sp)	#,
 2113              	# main_raytrace_termio.c:141: BOOL scene_intersect(vec3 orig, vec3 dir, Sphere* spheres, int nb_sph
 2114 128c 2326D100 		sw	a3,12(sp)	# nb_spheres, %sfp
 2115 1290 2320E102 		sw	a4,32(sp)	# tmp280, %sfp
 2116 1294 232E0101 		sw	a6,28(sp)	# tmp282, %sfp
 2117              	# main_raytrace_termio.c:142:   float spheres_dist = 1e30;
 2118 1298 2328F100 		sw	a5,16(sp)	# spheres_dist, %sfp
 2119 129c 832B0500 		lw	s7,0(a0)		# orig$x, orig.x
 2120 12a0 032B4500 		lw	s6,4(a0)		# orig$y, orig.y
 2121 12a4 832C8500 		lw	s9,8(a0)		# orig$z, orig.z
 2122 12a8 03AC0500 		lw	s8,0(a1)		# dir$x, dir.x
 2123 12ac 83AA4500 		lw	s5,4(a1)		# dir$y, dir.y
 2124 12b0 03AD8500 		lw	s10,8(a1)		# dir$z, dir.z
 2125              	# main_raytrace_termio.c:143:   for(int i=0; i<nb_spheres; ++i) {
 2126 12b4 635ED03A 		ble	a3,zero,.L293	#, nb_spheres,,
 2127              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 2128 12b8 B7070000 		lui	a5,%hi(.LC1)	# tmp274,
 2129 12bc 83A70700 		lw	a5,%lo(.LC1)(a5)		# tmp275,
 2130 12c0 13040600 		mv	s0,a2	# ivtmp.1102, spheres
 2131              	# main_raytrace_termio.c:143:   for(int i=0; i<nb_spheres; ++i) {
 2132 12c4 93090000 		li	s3,0		# i,
 2133              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 2134 12c8 2324F102 		sw	a5,40(sp)	# tmp275, %sfp
 2135              	.L302:
 2136              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 2137 12cc 03250400 		lw	a0,0(s0)		#, MEM[(float *)_205]
 2138 12d0 93850B00 		mv	a1,s7	#, orig$x
 2139 12d4 97000000 		call	__subsf3		#
 2139      E7800000 
 2140 12dc 93040500 		mv	s1,a0	# tmp283,
 2141 12e0 03254400 		lw	a0,4(s0)		#, MEM[(float *)_205 + 4B]
 2142 12e4 93050B00 		mv	a1,s6	#, orig$y
 2143 12e8 97000000 		call	__subsf3		#
 2143      E7800000 
 2144 12f0 130A0500 		mv	s4,a0	# tmp284,
 2145 12f4 03258400 		lw	a0,8(s0)		#, MEM[(float *)_205 + 8B]
 2146 12f8 93850C00 		mv	a1,s9	#, orig$z
 2147 12fc 97000000 		call	__subsf3		#
 2147      E7800000 
 2148 1304 13090500 		mv	s2,a0	# tmp285,
 2149              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2150 1308 93050C00 		mv	a1,s8	#, dir$x
 2151 130c 13850400 		mv	a0,s1	#, tmp163
 2152 1310 97000000 		call	__mulsf3		#
 2152      E7800000 
 2153 1318 930D0500 		mv	s11,a0	# tmp166, tmp286
 2154              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2155 131c 93850A00 		mv	a1,s5	#, dir$y
 2156 1320 13050A00 		mv	a0,s4	#, tmp164
 2157 1324 97000000 		call	__mulsf3		#
 2157      E7800000 
 2158 132c 93050500 		mv	a1,a0	# tmp287,
 2159              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2160 1330 13850D00 		mv	a0,s11	#, tmp166
 2161 1334 97000000 		call	__addsf3		#
 2161      E7800000 
 2162 133c 930D0500 		mv	s11,a0	# tmp168, tmp288
 2163              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2164 1340 93050D00 		mv	a1,s10	#, dir$z
 2165 1344 13050900 		mv	a0,s2	#, tmp165
 2166 1348 97000000 		call	__mulsf3		#
 2166      E7800000 
 2167 1350 93050500 		mv	a1,a0	# tmp289,
 2168              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2169 1354 13850D00 		mv	a0,s11	#, tmp168
 2170 1358 97000000 		call	__addsf3		#
 2170      E7800000 
 2171 1360 13070500 		mv	a4,a0	# tmp290,
 2172              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2173 1364 93850400 		mv	a1,s1	#, tmp163
 2174 1368 13850400 		mv	a0,s1	#, tmp11
 2175              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2176 136c 93040700 		mv	s1,a4	# tmp170, tmp290
 2177              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2178 1370 97000000 		call	__mulsf3		#
 2178      E7800000 
 2179 1378 930D0500 		mv	s11,a0	# tmp171, tmp291
 2180              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2181 137c 93050A00 		mv	a1,s4	#, tmp164
 2182 1380 13050A00 		mv	a0,s4	#, tmp11
 2183 1384 97000000 		call	__mulsf3		#
 2183      E7800000 
 2184 138c 93050500 		mv	a1,a0	# tmp292,
 2185              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2186 1390 13850D00 		mv	a0,s11	#, tmp171
 2187 1394 97000000 		call	__addsf3		#
 2187      E7800000 
 2188 139c 930D0500 		mv	s11,a0	# tmp173, tmp293
 2189              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2190 13a0 93050900 		mv	a1,s2	#, tmp165
 2191 13a4 13050900 		mv	a0,s2	#, tmp11
 2192 13a8 97000000 		call	__mulsf3		#
 2192      E7800000 
 2193 13b0 93050500 		mv	a1,a0	# tmp294,
 2194              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2195 13b4 13850D00 		mv	a0,s11	#, tmp173
 2196 13b8 97000000 		call	__addsf3		#
 2196      E7800000 
 2197 13c0 13090500 		mv	s2,a0	# tmp175, tmp295
 2198              	# main_raytrace_termio.c:118:   float d2 = vec3_dot(L,L) - tca*tca;
 2199 13c4 93850400 		mv	a1,s1	#, tmp170
 2200 13c8 13850400 		mv	a0,s1	#, tmp170
 2201 13cc 97000000 		call	__mulsf3		#
 2201      E7800000 
 2202 13d4 93050500 		mv	a1,a0	# tmp296,
 2203              	# main_raytrace_termio.c:118:   float d2 = vec3_dot(L,L) - tca*tca;
 2204 13d8 13050900 		mv	a0,s2	#, tmp175
 2205 13dc 97000000 		call	__subsf3		#
 2205      E7800000 
 2206              	# main_raytrace_termio.c:119:   float r2 = S->radius*S->radius;
 2207 13e4 8325C400 		lw	a1,12(s0)		#, MEM[(float *)_205 + 12B]
 2208              	# main_raytrace_termio.c:118:   float d2 = vec3_dot(L,L) - tca*tca;
 2209 13e8 13090500 		mv	s2,a0	# tmp177, tmp297
 2210              	# main_raytrace_termio.c:119:   float r2 = S->radius*S->radius;
 2211 13ec 13850500 		mv	a0,a1	#,
 2212 13f0 97000000 		call	__mulsf3		#
 2212      E7800000 
 2213 13f8 930D0500 		mv	s11,a0	# tmp178, tmp298
 2214              	# main_raytrace_termio.c:120:   if (d2 > r2) return 0;
 2215 13fc 93050500 		mv	a1,a0	#, tmp178
 2216 1400 13050900 		mv	a0,s2	#, tmp177
 2217 1404 97000000 		call	__gtsf2		#
 2217      E7800000 
 2218 140c 634AA024 		bgt	a0,zero,.L296	#, tmp299,,
 2219              	# main_raytrace_termio.c:121:   float thc = sqrtf(r2 - d2);
 2220 1410 93050900 		mv	a1,s2	#, tmp177
 2221 1414 13850D00 		mv	a0,s11	#, tmp178
 2222 1418 97000000 		call	__subsf3		#
 2222      E7800000 
 2223 1420 97000000 		call	sqrtf		#
 2223      E7800000 
 2224              	# main_raytrace_termio.c:122:   *t0       = tca - thc;
 2225 1428 93050500 		mv	a1,a0	#, thc
 2226 142c 232AA100 		sw	a0,20(sp)	# thc, %sfp
 2227 1430 13850400 		mv	a0,s1	#, tmp170
 2228 1434 97000000 		call	__subsf3		#
 2228      E7800000 
 2229              	# main_raytrace_termio.c:124:   if (*t0 < 0) *t0 = t1;
 2230 143c 93050000 		mv	a1,zero	#,
 2231              	# main_raytrace_termio.c:122:   *t0       = tca - thc;
 2232 1440 13090500 		mv	s2,a0	# dist_i, tmp301
 2233              	# main_raytrace_termio.c:124:   if (*t0 < 0) *t0 = t1;
 2234 1444 97000000 		call	__ltsf2		#
 2234      E7800000 
 2235 144c 635E0500 		bge	a0,zero,.L297	#, tmp302,,
 2236              	# main_raytrace_termio.c:123:   float t1 = tca + thc;
 2237 1450 83274101 		lw	a5,20(sp)		# thc, %sfp
 2238 1454 13850400 		mv	a0,s1	#, tmp170
 2239 1458 93850700 		mv	a1,a5	#, thc
 2240 145c 97000000 		call	__addsf3		#
 2240      E7800000 
 2241 1464 13090500 		mv	s2,a0	# dist_i, tmp303
 2242              	.L297:
 2243              	# main_raytrace_termio.c:125:   if (*t0 < 0) return 0;
 2244 1468 93050000 		mv	a1,zero	#,
 2245 146c 13050900 		mv	a0,s2	#, dist_i
 2246 1470 97000000 		call	__ltsf2		#
 2246      E7800000 
 2247 1478 6344051E 		blt	a0,zero,.L296	#, tmp304,,
 2248              	# main_raytrace_termio.c:145:     if(Sphere_ray_intersect(&spheres[i], orig, dir, &dist_i) && (dist
 2249 147c 03250101 		lw	a0,16(sp)		#, %sfp
 2250 1480 93050900 		mv	a1,s2	#, dist_i
 2251 1484 97000000 		call	__gtsf2		#
 2251      E7800000 
 2252 148c 635AA01C 		ble	a0,zero,.L296	#, tmp305,,
 2253              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2254 1490 93050C00 		mv	a1,s8	#, dir$x
 2255 1494 13050900 		mv	a0,s2	#, dist_i
 2256 1498 97000000 		call	__mulsf3		#
 2256      E7800000 
 2257              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2258 14a0 93850B00 		mv	a1,s7	#, orig$x
 2259 14a4 97000000 		call	__addsf3		#
 2259      E7800000 
 2260 14ac 930D0500 		mv	s11,a0	# tmp306,
 2261              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2262 14b0 93850A00 		mv	a1,s5	#, dir$y
 2263 14b4 13050900 		mv	a0,s2	#, dist_i
 2264 14b8 97000000 		call	__mulsf3		#
 2264      E7800000 
 2265              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2266 14c0 93050B00 		mv	a1,s6	#, orig$y
 2267 14c4 97000000 		call	__addsf3		#
 2267      E7800000 
 2268 14cc 93040500 		mv	s1,a0	# tmp307,
 2269              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2270 14d0 93050900 		mv	a1,s2	#, dist_i
 2271 14d4 13050D00 		mv	a0,s10	#, dir$z
 2272 14d8 97000000 		call	__mulsf3		#
 2272      E7800000 
 2273              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2274 14e0 93850C00 		mv	a1,s9	#, orig$z
 2275 14e4 97000000 		call	__addsf3		#
 2275      E7800000 
 2276              	# main_raytrace_termio.c:147:       *hit = vec3_add(orig,vec3_scale(dist_i,dir));
 2277 14ec 83270102 		lw	a5,32(sp)		# hit, %sfp
 2278 14f0 232CA100 		sw	a0,24(sp)	# tmp191, %sfp
 2279              	# main_raytrace_termio.c:149:       *material = spheres[i].material;
 2280 14f4 23282101 		sw	s2,16(sp)	# dist_i, %sfp
 2281              	# main_raytrace_termio.c:147:       *hit = vec3_add(orig,vec3_scale(dist_i,dir));
 2282 14f8 23A29700 		sw	s1,4(a5)	# tmp189, hit_42(D)->y
 2283 14fc 23A4A700 		sw	a0,8(a5)	# tmp191, hit_42(D)->z
 2284 1500 23A0B701 		sw	s11,0(a5)	# tmp187, hit_42(D)->x
 2285              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 2286 1504 83250400 		lw	a1,0(s0)		#, MEM[(float *)_205]
 2287 1508 13850D00 		mv	a0,s11	#, tmp187
 2288 150c 97000000 		call	__subsf3		#
 2288      E7800000 
 2289 1514 83254400 		lw	a1,4(s0)		#, MEM[(float *)_205 + 4B]
 2290 1518 93070500 		mv	a5,a0	# tmp309,
 2291 151c 13850400 		mv	a0,s1	#, tmp189
 2292 1520 232AF100 		sw	a5,20(sp)	# tmp192, %sfp
 2293 1524 97000000 		call	__subsf3		#
 2293      E7800000 
 2294 152c 03278101 		lw	a4,24(sp)		# tmp191, %sfp
 2295 1530 83258400 		lw	a1,8(s0)		#, MEM[(float *)_205 + 8B]
 2296 1534 13090500 		mv	s2,a0	# tmp310,
 2297 1538 13050700 		mv	a0,a4	#, tmp191
 2298 153c 97000000 		call	__subsf3		#
 2298      E7800000 
 2299              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2300 1544 83274101 		lw	a5,20(sp)		# tmp192, %sfp
 2301              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 2302 1548 93040500 		mv	s1,a0	# tmp311,
 2303              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2304 154c 93850700 		mv	a1,a5	#, tmp192
 2305 1550 13850700 		mv	a0,a5	#, tmp192
 2306 1554 232CF100 		sw	a5,24(sp)	# tmp192, %sfp
 2307 1558 97000000 		call	__mulsf3		#
 2307      E7800000 
 2308              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2309 1560 93050900 		mv	a1,s2	#, tmp193
 2310              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2311 1564 232AA100 		sw	a0,20(sp)	# tmp195, %sfp
 2312              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2313 1568 13050900 		mv	a0,s2	#, tmp193
 2314 156c 97000000 		call	__mulsf3		#
 2314      E7800000 
 2315              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2316 1574 03274101 		lw	a4,20(sp)		# tmp195, %sfp
 2317              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2318 1578 93050500 		mv	a1,a0	# tmp313,
 2319              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2320 157c 13050700 		mv	a0,a4	#, tmp195
 2321 1580 97000000 		call	__addsf3		#
 2321      E7800000 
 2322 1588 232AA100 		sw	a0,20(sp)	# tmp197, %sfp
 2323              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2324 158c 93850400 		mv	a1,s1	#, tmp194
 2325 1590 13850400 		mv	a0,s1	#, tmp194
 2326 1594 97000000 		call	__mulsf3		#
 2326      E7800000 
 2327              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2328 159c 03274101 		lw	a4,20(sp)		# tmp197, %sfp
 2329              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2330 15a0 93050500 		mv	a1,a0	# tmp315,
 2331              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2332 15a4 13050700 		mv	a0,a4	#, tmp197
 2333 15a8 97000000 		call	__addsf3		#
 2333      E7800000 
 2334 15b0 97000000 		call	sqrtf		#
 2334      E7800000 
 2335 15b8 93050500 		mv	a1,a0	# tmp316,
 2336              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 2337 15bc 03258102 		lw	a0,40(sp)		#, %sfp
 2338 15c0 97000000 		call	__divsf3		#
 2338      E7800000 
 2339              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2340 15c8 83278101 		lw	a5,24(sp)		# tmp192, %sfp
 2341              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 2342 15cc 232AA100 		sw	a0,20(sp)	# tmp201, %sfp
 2343              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2344 15d0 93850700 		mv	a1,a5	#, tmp192
 2345 15d4 97000000 		call	__mulsf3		#
 2345      E7800000 
 2346 15dc 83274101 		lw	a5,20(sp)		# tmp201, %sfp
 2347 15e0 93050900 		mv	a1,s2	#, tmp193
 2348              	# main_raytrace_termio.c:148:       *N = vec3_normalize(vec3_sub(*hit, spheres[i].center));
 2349 15e4 03294102 		lw	s2,36(sp)		# N, %sfp
 2350 15e8 2320A900 		sw	a0,0(s2)	# tmp318, N_43(D)->x
 2351              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2352 15ec 13850700 		mv	a0,a5	#, tmp201
 2353 15f0 97000000 		call	__mulsf3		#
 2353      E7800000 
 2354 15f8 83274101 		lw	a5,20(sp)		# tmp201, %sfp
 2355              	# main_raytrace_termio.c:148:       *N = vec3_normalize(vec3_sub(*hit, spheres[i].center));
 2356 15fc 2322A900 		sw	a0,4(s2)	# tmp319, N_43(D)->y
 2357              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2358 1600 93850400 		mv	a1,s1	#, tmp194
 2359 1604 13850700 		mv	a0,a5	#, tmp201
 2360 1608 97000000 		call	__mulsf3		#
 2360      E7800000 
 2361              	# main_raytrace_termio.c:148:       *N = vec3_normalize(vec3_sub(*hit, spheres[i].center));
 2362 1610 2324A900 		sw	a0,8(s2)	# tmp320, N_43(D)->z
 2363              	# main_raytrace_termio.c:149:       *material = spheres[i].material;
 2364 1614 03230401 		lw	t1,16(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2365 1618 83284401 		lw	a7,20(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2366 161c 03288401 		lw	a6,24(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2367 1620 0325C401 		lw	a0,28(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2368 1624 83250402 		lw	a1,32(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2369 1628 03264402 		lw	a2,36(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2370 162c 83268402 		lw	a3,40(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2371 1630 0327C402 		lw	a4,44(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2372 1634 83270403 		lw	a5,48(s0)		# MEM[(struct  *)_205 + 16B], MEM[(struct  *)_205 + 16B]
 2373 1638 032EC101 		lw	t3,28(sp)		# material, %sfp
 2374 163c 23206E00 		sw	t1,0(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2375 1640 23221E01 		sw	a7,4(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2376 1644 23240E01 		sw	a6,8(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2377 1648 2326AE00 		sw	a0,12(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2378 164c 2328BE00 		sw	a1,16(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2379 1650 232ACE00 		sw	a2,20(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2380 1654 232CDE00 		sw	a3,24(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2381 1658 232EEE00 		sw	a4,28(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2382 165c 2320FE02 		sw	a5,32(t3)	# MEM[(struct  *)_205 + 16B], *material_44(D)
 2383              	.L296:
 2384              	# main_raytrace_termio.c:143:   for(int i=0; i<nb_spheres; ++i) {
 2385 1660 8327C100 		lw	a5,12(sp)		# nb_spheres, %sfp
 2386              	# main_raytrace_termio.c:143:   for(int i=0; i<nb_spheres; ++i) {
 2387 1664 93891900 		addi	s3,s3,1	#, i, i
 2388              	# main_raytrace_termio.c:143:   for(int i=0; i<nb_spheres; ++i) {
 2389 1668 13044403 		addi	s0,s0,52	#, ivtmp.1102, ivtmp.1102
 2390 166c E39037C7 		bne	a5,s3,.L302	#, nb_spheres, i,
 2391              	.L293:
 2392              	# main_raytrace_termio.c:153:   if (fabs(dir.y)>1e-3)  {
 2393 1670 13850A00 		mv	a0,s5	#, dir$y
 2394 1674 97000000 		call	__extendsfdf2		#
 2394      E7800000 
 2395 167c 97000000 		call	fabs		#
 2395      E7800000 
 2396              	# main_raytrace_termio.c:153:   if (fabs(dir.y)>1e-3)  {
 2397 1684 B7070000 		lui	a5,%hi(.LC4)	# tmp216,
 2398 1688 03A60700 		lw	a2,%lo(.LC4)(a5)		#,
 2399 168c 83A64700 		lw	a3,%lo(.LC4+4)(a5)		#,
 2400 1690 97000000 		call	__gtdf2		#
 2400      E7800000 
 2401 1698 6350A004 		ble	a0,zero,.L305	#, tmp321,,
 2402              	# main_raytrace_termio.c:154:     float d = -(orig.y+4)/dir.y; // the checkerboard plane has equati
 2403 169c B7070000 		lui	a5,%hi(.LC5)	# tmp218,
 2404 16a0 83A50700 		lw	a1,%lo(.LC5)(a5)		#,
 2405 16a4 13050B00 		mv	a0,s6	#, orig$y
 2406 16a8 97000000 		call	__addsf3		#
 2406      E7800000 
 2407              	# main_raytrace_termio.c:154:     float d = -(orig.y+4)/dir.y; // the checkerboard plane has equati
 2408 16b0 B7070080 		li	a5,-2147483648		# tmp221,
 2409 16b4 93850A00 		mv	a1,s5	#, dir$y
 2410 16b8 33C5A700 		xor	a0,a5,a0	# tmp322,, tmp221
 2411 16bc 97000000 		call	__divsf3		#
 2411      E7800000 
 2412              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2413 16c4 93050000 		mv	a1,zero	#,
 2414              	# main_raytrace_termio.c:154:     float d = -(orig.y+4)/dir.y; // the checkerboard plane has equati
 2415 16c8 13040500 		mv	s0,a0	# d, tmp323
 2416              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2417 16cc 97000000 		call	__gtsf2		#
 2417      E7800000 
 2418 16d4 634CA006 		bgt	a0,zero,.L324	#, tmp324,,
 2419              	.L305:
 2420              	# main_raytrace_termio.c:152:   float checkerboard_dist = 1e30;
 2421 16d8 8327C102 		lw	a5,44(sp)		# tmp273, %sfp
 2422 16dc 03A40700 		lw	s0,%lo(.LC3)(a5)		# d,
 2423              	.L304:
 2424              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 2425 16e0 83250101 		lw	a1,16(sp)		#, %sfp
 2426 16e4 13050400 		mv	a0,s0	#, d
 2427 16e8 97000000 		call	__gtsf2		#
 2427      E7800000 
 2428 16f0 6344A000 		bgt	a0,zero,.L312	#, tmp334,,
 2429 16f4 23288100 		sw	s0,16(sp)	# d, %sfp
 2430              	.L312:
 2431              	# main_raytrace_termio.c:163:   return min(spheres_dist, checkerboard_dist)<1000;
 2432 16f8 B7070000 		lui	a5,%hi(.LC14)	# tmp271,
 2433 16fc 03250101 		lw	a0,16(sp)		#, %sfp
 2434 1700 83A50700 		lw	a1,%lo(.LC14)(a5)		#,
 2435 1704 97000000 		call	__ltsf2		#
 2435      E7800000 
 2436              	# main_raytrace_termio.c:164: }
 2437 170c 8320C106 		lw	ra,108(sp)		#,
 2438 1710 03248106 		lw	s0,104(sp)		#,
 2439 1714 83244106 		lw	s1,100(sp)		#,
 2440 1718 03290106 		lw	s2,96(sp)		#,
 2441 171c 8329C105 		lw	s3,92(sp)		#,
 2442 1720 032A8105 		lw	s4,88(sp)		#,
 2443 1724 832A4105 		lw	s5,84(sp)		#,
 2444 1728 032B0105 		lw	s6,80(sp)		#,
 2445 172c 832BC104 		lw	s7,76(sp)		#,
 2446 1730 032C8104 		lw	s8,72(sp)		#,
 2447 1734 832C4104 		lw	s9,68(sp)		#,
 2448 1738 032D0104 		lw	s10,64(sp)		#,
 2449 173c 832DC103 		lw	s11,60(sp)		#,
 2450 1740 13250500 		slti	a0,a0,0	#,, tmp335
 2451 1744 13010107 		addi	sp,sp,112	#,,
 2452 1748 67800000 		jr	ra		#
 2453              	.L324:
 2454              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2455 174c 93050C00 		mv	a1,s8	#, dir$x
 2456 1750 13050400 		mv	a0,s0	#, d
 2457 1754 97000000 		call	__mulsf3		#
 2457      E7800000 
 2458              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2459 175c 93850B00 		mv	a1,s7	#, orig$x
 2460 1760 97000000 		call	__addsf3		#
 2460      E7800000 
 2461 1768 93040500 		mv	s1,a0	# tmp225, tmp325
 2462              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2463 176c 97000000 		call	__extendsfdf2		#
 2463      E7800000 
 2464 1774 97000000 		call	fabs		#
 2464      E7800000 
 2465              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2466 177c B7070000 		lui	a5,%hi(.LC6)	# tmp228,
 2467 1780 03A60700 		lw	a2,%lo(.LC6)(a5)		#,
 2468 1784 83A64700 		lw	a3,%lo(.LC6+4)(a5)		#,
 2469 1788 97000000 		call	__ltdf2		#
 2469      E7800000 
 2470 1790 E35405F4 		bge	a0,zero,.L305	#, tmp326,,
 2471              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2472 1794 93050D00 		mv	a1,s10	#, dir$z
 2473 1798 13050400 		mv	a0,s0	#, d
 2474 179c 97000000 		call	__mulsf3		#
 2474      E7800000 
 2475              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2476 17a4 93850C00 		mv	a1,s9	#, orig$z
 2477 17a8 97000000 		call	__addsf3		#
 2477      E7800000 
 2478              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2479 17b0 B7070000 		lui	a5,%hi(.LC7)	# tmp233,
 2480 17b4 83A50700 		lw	a1,%lo(.LC7)(a5)		#,
 2481              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2482 17b8 13090500 		mv	s2,a0	# tmp231, tmp327
 2483              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2484 17bc 97000000 		call	__ltsf2		#
 2484      E7800000 
 2485 17c4 E35A05F0 		bge	a0,zero,.L305	#, tmp328,,
 2486              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2487 17c8 B7070000 		lui	a5,%hi(.LC8)	# tmp236,
 2488 17cc 83A50700 		lw	a1,%lo(.LC8)(a5)		#,
 2489 17d0 13050900 		mv	a0,s2	#, tmp231
 2490 17d4 97000000 		call	__gtsf2		#
 2490      E7800000 
 2491 17dc E35EA0EE 		ble	a0,zero,.L305	#, tmp329,,
 2492              	# main_raytrace_termio.c:156:     if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dis
 2493 17e0 83250101 		lw	a1,16(sp)		#, %sfp
 2494 17e4 13050400 		mv	a0,s0	#, d
 2495 17e8 97000000 		call	__ltsf2		#
 2495      E7800000 
 2496 17f0 E35405EE 		bge	a0,zero,.L305	#, tmp330,,
 2497              	# main_raytrace_termio.c:158:       *hit = pt;
 2498 17f4 83290102 		lw	s3,32(sp)		# hit, %sfp
 2499              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2500 17f8 93850A00 		mv	a1,s5	#, dir$y
 2501 17fc 13050400 		mv	a0,s0	#, d
 2502              	# main_raytrace_termio.c:158:       *hit = pt;
 2503 1800 23A09900 		sw	s1,0(s3)	# tmp225, hit_42(D)->x
 2504              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2505 1804 97000000 		call	__mulsf3		#
 2505      E7800000 
 2506              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2507 180c 93050B00 		mv	a1,s6	#, orig$y
 2508 1810 97000000 		call	__addsf3		#
 2508      E7800000 
 2509              	# main_raytrace_termio.c:159:       *N = make_vec3(0,1,0);
 2510 1818 03274102 		lw	a4,36(sp)		# N, %sfp
 2511              	# main_raytrace_termio.c:158:       *hit = pt;
 2512 181c 23A2A900 		sw	a0,4(s3)	# tmp331, hit_42(D)->y
 2513 1820 23A42901 		sw	s2,8(s3)	# tmp231, hit_42(D)->z
 2514              	# main_raytrace_termio.c:159:       *N = make_vec3(0,1,0);
 2515 1824 93060000 		mv	a3,zero	# tmp366,
 2516 1828 B7070000 		lui	a5,%hi(.LC1)	# tmp241,
 2517 182c 2320D700 		sw	a3,0(a4)	# tmp366, N_43(D)->x
 2518 1830 83A70700 		lw	a5,%lo(.LC1)(a5)		# tmp242,
 2519              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2520 1834 03A50900 		lw	a0,0(s3)		#, hit_42(D)->x
 2521              	# main_raytrace_termio.c:159:       *N = make_vec3(0,1,0);
 2522 1838 2324D700 		sw	a3,8(a4)	# tmp370, N_43(D)->z
 2523 183c 2322F700 		sw	a5,4(a4)	# tmp242, N_43(D)->y
 2524              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2525 1840 97000000 		call	__extendsfdf2		#
 2525      E7800000 
 2526              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2527 1848 37090000 		lui	s2,%hi(.LC9)	# tmp244,
 2528 184c 03260900 		lw	a2,%lo(.LC9)(s2)		#,
 2529 1850 83264900 		lw	a3,%lo(.LC9+4)(s2)		#,
 2530 1854 97000000 		call	__muldf3		#
 2530      E7800000 
 2531              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2532 185c B7070000 		lui	a5,%hi(.LC10)	# tmp246,
 2533 1860 03A60700 		lw	a2,%lo(.LC10)(a5)		#,
 2534 1864 83A64700 		lw	a3,%lo(.LC10+4)(a5)		#,
 2535 1868 97000000 		call	__adddf3		#
 2535      E7800000 
 2536              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2537 1870 97000000 		call	__fixdfsi		#
 2537      E7800000 
 2538 1878 93040500 		mv	s1,a0	# tmp332,
 2539              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2540 187c 03A58900 		lw	a0,8(s3)		#, hit_42(D)->z
 2541 1880 97000000 		call	__extendsfdf2		#
 2541      E7800000 
 2542              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2543 1888 03260900 		lw	a2,%lo(.LC9)(s2)		#,
 2544 188c 83264900 		lw	a3,%lo(.LC9+4)(s2)		#,
 2545 1890 97000000 		call	__muldf3		#
 2545      E7800000 
 2546              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2547 1898 97000000 		call	__fixdfsi		#
 2547      E7800000 
 2548              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2549 18a0 B387A400 		add	a5,s1,a0	# tmp333, tmp253, tmp248
 2550              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2551 18a4 93F71700 		andi	a5,a5,1	#, tmp254, tmp253
 2552              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2553 18a8 63800702 		beq	a5,zero,.L311	#, tmp254,,
 2554              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2555 18ac B7070000 		lui	a5,%hi(.LC11)	# tmp255,
 2556 18b0 83A70700 		lw	a5,%lo(.LC11)(a5)		# tmp256,
 2557 18b4 0327C101 		lw	a4,28(sp)		# material, %sfp
 2558 18b8 232AF700 		sw	a5,20(a4)	# tmp256, material_44(D)->diffuse_color.x
 2559 18bc 232CF700 		sw	a5,24(a4)	# tmp256, material_44(D)->diffuse_color.y
 2560 18c0 232EF700 		sw	a5,28(a4)	# tmp256, material_44(D)->diffuse_color.z
 2561 18c4 6FF0DFE1 		j	.L304		#
 2562              	.L311:
 2563              	# main_raytrace_termio.c:160:       material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hi
 2564 18c8 B7060000 		lui	a3,%hi(.LC11)	# tmp261,
 2565 18cc 37070000 		lui	a4,%hi(.LC12)	# tmp263,
 2566 18d0 B7070000 		lui	a5,%hi(.LC13)	# tmp265,
 2567 18d4 0326C101 		lw	a2,28(sp)		# material, %sfp
 2568 18d8 83A60600 		lw	a3,%lo(.LC11)(a3)		# tmp262,
 2569 18dc 03270700 		lw	a4,%lo(.LC12)(a4)		# tmp264,
 2570 18e0 83A70700 		lw	a5,%lo(.LC13)(a5)		# tmp266,
 2571 18e4 232AD600 		sw	a3,20(a2)	# tmp262, material_44(D)->diffuse_color.x
 2572 18e8 232CE600 		sw	a4,24(a2)	# tmp264, material_44(D)->diffuse_color.y
 2573 18ec 232EF600 		sw	a5,28(a2)	# tmp266, material_44(D)->diffuse_color.z
 2574 18f0 6FF01FDF 		j	.L304		#
 2576              		.globl	__fixsfsi
 2577              		.align	2
 2578              		.globl	my_pow
 2580              	my_pow:
 2581 18f4 130101FD 		addi	sp,sp,-48	#,,
 2582 18f8 23248101 		sw	s8,8(sp)	#,
 2583 18fc 130C0500 		mv	s8,a0	# tmp93, x
 2584              	# main_raytrace_termio.c:170:   int Y = (int)y;
 2585 1900 13850500 		mv	a0,a1	#, tmp94
 2586              	# main_raytrace_termio.c:168: float my_pow(float x, float y) {
 2587 1904 23248102 		sw	s0,40(sp)	#,
 2588 1908 23202103 		sw	s2,32(sp)	#,
 2589 190c 232E3101 		sw	s3,28(sp)	#,
 2590 1910 232C4101 		sw	s4,24(sp)	#,
 2591 1914 232A5101 		sw	s5,20(sp)	#,
 2592 1918 23286101 		sw	s6,16(sp)	#,
 2593 191c 23267101 		sw	s7,12(sp)	#,
 2594 1920 23261102 		sw	ra,44(sp)	#,
 2595 1924 23229102 		sw	s1,36(sp)	#,
 2596 1928 23229101 		sw	s9,4(sp)	#,
 2597              	# main_raytrace_termio.c:170:   int Y = (int)y;
 2598 192c 97000000 		call	__fixsfsi		#
 2598      E7800000 
 2599              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2600 1934 B7070000 		lui	a5,%hi(.LC15)	# tmp89,
 2601 1938 03AA0700 		lw	s4,%lo(.LC15)(a5)		# tmp90,
 2602 193c 83AA4700 		lw	s5,%lo(.LC15+4)(a5)		#,
 2603              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2604 1940 B7070000 		lui	a5,%hi(.LC16)	# tmp91,
 2605 1944 03A90700 		lw	s2,%lo(.LC16)(a5)		# tmp92,
 2606 1948 83A94700 		lw	s3,%lo(.LC16+4)(a5)		#,
 2607              	# main_raytrace_termio.c:170:   int Y = (int)y;
 2608 194c 130B0500 		mv	s6,a0	# Y, tmp95
 2609              	# main_raytrace_termio.c:169:   float alu_rslt = x;
 2610 1950 13040C00 		mv	s0,s8	# <retval>, x
 2611              	# main_raytrace_termio.c:171:   while(Y > 2) {
 2612 1954 930B2000 		li	s7,2		# tmp85,
 2613              	# main_raytrace_termio.c:171:   while(Y > 2) {
 2614 1958 6F008005 		j	.L326		#
 2615              	.L328:
 2616              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 2617 195c 97000000 		call	__mulsf3		#
 2617      E7800000 
 2618 1964 13040500 		mv	s0,a0	# <retval>, tmp96
 2619              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2620 1968 97000000 		call	__extendsfdf2		#
 2620      E7800000 
 2621              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2622 1970 13060A00 		mv	a2,s4	#, tmp90
 2623 1974 93860A00 		mv	a3,s5	#,
 2624              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2625 1978 930C0500 		mv	s9,a0	# _1, tmp103
 2626 197c 93840500 		mv	s1,a1	# _1, tmp104
 2627              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2628 1980 97000000 		call	__ltdf2		#
 2628      E7800000 
 2629 1988 93070500 		mv	a5,a0	# tmp98,
 2630              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2631 198c 93850400 		mv	a1,s1	#, _1
 2632 1990 13850C00 		mv	a0,s9	# tmp105, _1
 2633 1994 13060900 		mv	a2,s2	#, tmp92
 2634 1998 93860900 		mv	a3,s3	#,
 2635              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 2636 199c 135B1B40 		srai	s6,s6,1	#, Y, Y
 2637              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2638 19a0 63CA0702 		blt	a5,zero,.L325	#, tmp98,,
 2639              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 2640 19a4 97000000 		call	__gtdf2		#
 2640      E7800000 
 2641 19ac 6344A002 		bgt	a0,zero,.L325	#, tmp99,,
 2642              	.L326:
 2643              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 2644 19b0 93050400 		mv	a1,s0	#, <retval>
 2645 19b4 13050400 		mv	a0,s0	#, tmp11
 2646              	# main_raytrace_termio.c:171:   while(Y > 2) {
 2647 19b8 E3C26BFB 		bgt	s6,s7,.L328	#, Y, tmp85,
 2648              	# main_raytrace_termio.c:177:   while(Y > 1) {
 2649 19bc 631C7B01 		bne	s6,s7,.L325	#, Y, tmp85,
 2650              	# main_raytrace_termio.c:178:     Y--; alu_rslt *= x;
 2651 19c0 13050400 		mv	a0,s0	#, <retval>
 2652 19c4 93050C00 		mv	a1,s8	#, x
 2653 19c8 97000000 		call	__mulsf3		#
 2653      E7800000 
 2654 19d0 13040500 		mv	s0,a0	# <retval>, tmp100
 2655              	.L325:
 2656              	# main_raytrace_termio.c:184: }
 2657 19d4 8320C102 		lw	ra,44(sp)		#,
 2658 19d8 13050400 		mv	a0,s0	#, <retval>
 2659 19dc 03248102 		lw	s0,40(sp)		#,
 2660 19e0 83244102 		lw	s1,36(sp)		#,
 2661 19e4 03290102 		lw	s2,32(sp)		#,
 2662 19e8 8329C101 		lw	s3,28(sp)		#,
 2663 19ec 032A8101 		lw	s4,24(sp)		#,
 2664 19f0 832A4101 		lw	s5,20(sp)		#,
 2665 19f4 032B0101 		lw	s6,16(sp)		#,
 2666 19f8 832BC100 		lw	s7,12(sp)		#,
 2667 19fc 032C8100 		lw	s8,8(sp)		#,
 2668 1a00 832C4100 		lw	s9,4(sp)		#,
 2669 1a04 13010103 		addi	sp,sp,48	#,,
 2670 1a08 67800000 		jr	ra		#
 2672              		.globl	__truncdfsf2
 2673              		.align	2
 2674              		.globl	cast_ray
 2676              	cast_ray:
 2677 1a0c 130101E4 		addi	sp,sp,-448	#,,
 2678 1a10 2326311B 		sw	s3,428(sp)	#,
 2679 1a14 93090600 		mv	s3,a2	# tmp272, tmp567
 2680 1a18 232A911A 		sw	s1,436(sp)	#,
 2681 1a1c 93840800 		mv	s1,a7	# depth, tmp572
 2682 1a20 83A80900 		lw	a7,0(s3)		# dir$x, dir.x
 2683 1a24 2328211B 		sw	s2,432(sp)	#,
 2684              	# main_raytrace_termio.c:96:   return M;
 2685 1a28 37090000 		lui	s2,%hi(.LC1)	# tmp538,
 2686 1a2c 23241105 		sw	a7,72(sp)	# dir$x, %sfp
 2687 1a30 83A88900 		lw	a7,8(s3)		# dir$z, dir.z
 2688              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 2689 1a34 2324411B 		sw	s4,424(sp)	#,
 2690              	# main_raytrace_termio.c:96:   return M;
 2691 1a38 032A0900 		lw	s4,%lo(.LC1)(s2)		# tmp279,
 2692 1a3c 23221105 		sw	a7,68(sp)	# dir$z, %sfp
 2693 1a40 83A84900 		lw	a7,4(s3)		# dir$y, dir.y
 2694 1a44 13060000 		mv	a2,zero	# tmp745,
 2695 1a48 2320C114 		sw	a2,320(sp)	# tmp745, material.albedo.y
 2696 1a4c 2322C114 		sw	a2,324(sp)	# tmp746, material.albedo.z
 2697 1a50 2324C114 		sw	a2,328(sp)	# tmp747, material.albedo.w
 2698 1a54 2326C114 		sw	a2,332(sp)	# tmp748, material.diffuse_color.x
 2699 1a58 2328C114 		sw	a2,336(sp)	# tmp749, material.diffuse_color.y
 2700 1a5c 232AC114 		sw	a2,340(sp)	# tmp750, material.diffuse_color.z
 2701 1a60 232CC114 		sw	a2,344(sp)	# tmp751, material.specular_exponent
 2702              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 2703 1a64 232E111A 		sw	ra,444(sp)	#,
 2704 1a68 232C811A 		sw	s0,440(sp)	#,
 2705 1a6c 2322511B 		sw	s5,420(sp)	#,
 2706 1a70 2320611B 		sw	s6,416(sp)	#,
 2707 1a74 232E7119 		sw	s7,412(sp)	#,
 2708 1a78 232C8119 		sw	s8,408(sp)	#,
 2709 1a7c 232A9119 		sw	s9,404(sp)	#,
 2710 1a80 2328A119 		sw	s10,400(sp)	#,
 2711 1a84 2326B119 		sw	s11,396(sp)	#,
 2712              	# main_raytrace_termio.c:96:   return M;
 2713 1a88 232C4113 		sw	s4,312(sp)	# tmp279, material.refractive_index
 2714 1a8c 232E4113 		sw	s4,316(sp)	# tmp279, material.albedo.x
 2715 1a90 23201103 		sw	a7,32(sp)	# dir$y, %sfp
 2716              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 2717 1a94 2324A106 		sw	a0,104(sp)	# tmp565, %sfp
 2718 1a98 232AD100 		sw	a3,20(sp)	# tmp568, %sfp
 2719 1a9c 232CE100 		sw	a4,24(sp)	# tmp569, %sfp
 2720              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 2721 1aa0 13062000 		li	a2,2		# tmp282,
 2722              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 2723 1aa4 23200105 		sw	a6,64(sp)	# tmp571, %sfp
 2724              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 2725 1aa8 63549612 		ble	s1,a2,.L334	#, depth, tmp282,
 2726              	.L336:
 2727              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 2728 1aac 03250102 		lw	a0,32(sp)		#, %sfp
 2729 1ab0 97000000 		call	__extendsfdf2		#
 2729      E7800000 
 2730              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 2731 1ab8 B7070000 		lui	a5,%hi(.LC17)	# tmp284,
 2732 1abc 03A60700 		lw	a2,%lo(.LC17)(a5)		#,
 2733 1ac0 83A64700 		lw	a3,%lo(.LC17+4)(a5)		#,
 2734 1ac4 97000000 		call	__adddf3		#
 2734      E7800000 
 2735              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 2736 1acc B7070000 		lui	a5,%hi(.LC9)	# tmp286,
 2737 1ad0 03A60700 		lw	a2,%lo(.LC9)(a5)		#,
 2738 1ad4 83A64700 		lw	a3,%lo(.LC9+4)(a5)		#,
 2739 1ad8 97000000 		call	__muldf3		#
 2739      E7800000 
 2740              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 2741 1ae0 97000000 		call	__truncdfsf2		#
 2741      E7800000 
 2742              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2743 1ae8 93050000 		mv	a1,zero	#,
 2744              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 2745 1aec 13040500 		mv	s0,a0	# tmp288, tmp573
 2746              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2747 1af0 97000000 		call	__mulsf3		#
 2747      E7800000 
 2748 1af8 B7070000 		lui	a5,%hi(.LC12)	# tmp290,
 2749 1afc 83A50700 		lw	a1,%lo(.LC12)(a5)		#,
 2750 1b00 93040500 		mv	s1,a0	# tmp289, tmp574
 2751 1b04 13050400 		mv	a0,s0	#, tmp288
 2752 1b08 97000000 		call	__mulsf3		#
 2752      E7800000 
 2753              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2754 1b10 93850400 		mv	a1,s1	#, tmp289
 2755 1b14 97000000 		call	__addsf3		#
 2755      E7800000 
 2756              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2757 1b1c B7070000 		lui	a5,%hi(.LC18)	# tmp293,
 2758 1b20 83A50700 		lw	a1,%lo(.LC18)(a5)		#,
 2759              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2760 1b24 13090500 		mv	s2,a0	# tmp575,
 2761              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2762 1b28 13050400 		mv	a0,s0	#, tmp288
 2763 1b2c 97000000 		call	__mulsf3		#
 2763      E7800000 
 2764              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2765 1b34 93850400 		mv	a1,s1	#, tmp289
 2766 1b38 97000000 		call	__addsf3		#
 2766      E7800000 
 2767              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2768 1b40 B7070000 		lui	a5,%hi(.LC19)	# tmp296,
 2769 1b44 83A50700 		lw	a1,%lo(.LC19)(a5)		#,
 2770              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2771 1b48 93040500 		mv	s1,a0	# tmp576,
 2772              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2773 1b4c 13050400 		mv	a0,s0	#, tmp288
 2774 1b50 97000000 		call	__mulsf3		#
 2774      E7800000 
 2775 1b58 B7070000 		lui	a5,%hi(.LC20)	# tmp298,
 2776 1b5c 83A50700 		lw	a1,%lo(.LC20)(a5)		#,
 2777 1b60 93090500 		mv	s3,a0	# tmp297, tmp577
 2778 1b64 13050400 		mv	a0,s0	#, tmp288
 2779 1b68 97000000 		call	__mulsf3		#
 2779      E7800000 
 2780 1b70 93050500 		mv	a1,a0	# tmp578,
 2781              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 2782 1b74 13850900 		mv	a0,s3	#, tmp297
 2783 1b78 97000000 		call	__addsf3		#
 2783      E7800000 
 2784              	.L335:
 2785              	# main_raytrace_termio.c:41:   return V;
 2786 1b80 83278106 		lw	a5,104(sp)		# .result_ptr, %sfp
 2787              	# main_raytrace_termio.c:229: }
 2788 1b84 8320C11B 		lw	ra,444(sp)		#,
 2789 1b88 0324811B 		lw	s0,440(sp)		#,
 2790              	# main_raytrace_termio.c:41:   return V;
 2791 1b8c 23A02701 		sw	s2,0(a5)	# _61, <retval>.x
 2792 1b90 23A29700 		sw	s1,4(a5)	# _50, <retval>.y
 2793 1b94 23A4A700 		sw	a0,8(a5)	# _31, <retval>.z
 2794              	# main_raytrace_termio.c:229: }
 2795 1b98 8324411B 		lw	s1,436(sp)		#,
 2796 1b9c 0329011B 		lw	s2,432(sp)		#,
 2797 1ba0 8329C11A 		lw	s3,428(sp)		#,
 2798 1ba4 032A811A 		lw	s4,424(sp)		#,
 2799 1ba8 832A411A 		lw	s5,420(sp)		#,
 2800 1bac 032B011A 		lw	s6,416(sp)		#,
 2801 1bb0 832BC119 		lw	s7,412(sp)		#,
 2802 1bb4 032C8119 		lw	s8,408(sp)		#,
 2803 1bb8 832C4119 		lw	s9,404(sp)		#,
 2804 1bbc 032D0119 		lw	s10,400(sp)		#,
 2805 1bc0 832DC118 		lw	s11,396(sp)		#,
 2806 1bc4 13850700 		mv	a0,a5	#, .result_ptr
 2807 1bc8 1301011C 		addi	sp,sp,448	#,,
 2808 1bcc 67800000 		jr	ra		#
 2809              	.L334:
 2810              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 2811 1bd0 83AF0500 		lw	t6,0(a1)		# orig, orig
 2812 1bd4 03AF4500 		lw	t5,4(a1)		# orig, orig
 2813 1bd8 83AE8500 		lw	t4,8(a1)		# orig, orig
 2814 1bdc 03AE0900 		lw	t3,0(s3)		# dir, dir
 2815 1be0 03A34900 		lw	t1,4(s3)		# dir, dir
 2816 1be4 83A88900 		lw	a7,8(s3)		# dir, dir
 2817 1be8 03264101 		lw	a2,20(sp)		#, %sfp
 2818 1bec 13840700 		mv	s0,a5	# lights, tmp570
 2819 1bf0 93060700 		mv	a3,a4	#, tmp569
 2820 1bf4 13088113 		addi	a6,sp,312	#,,
 2821 1bf8 9307810A 		addi	a5,sp,168	#,,
 2822 1bfc 1307C109 		addi	a4,sp,156	#,,
 2823 1c00 93050107 		addi	a1,sp,112	#,,
 2824 1c04 13050108 		addi	a0,sp,128	#, tmp755,
 2825 1c08 2320F109 		sw	t6,128(sp)	# orig,
 2826 1c0c 2322E109 		sw	t5,132(sp)	# orig,
 2827 1c10 2324D109 		sw	t4,136(sp)	# orig,
 2828 1c14 2328C107 		sw	t3,112(sp)	# dir,
 2829 1c18 232A6106 		sw	t1,116(sp)	# dir,
 2830 1c1c 232C1107 		sw	a7,120(sp)	# dir,
 2831 1c20 97000000 		call	scene_intersect		#
 2831      E7800000 
 2832              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 2833 1c28 E30205E8 		beq	a0,zero,.L336	#, tmp580,,
 2834 1c2c 832D810A 		lw	s11,168(sp)		# N$x, N.x
 2835              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2836 1c30 832B8104 		lw	s7,72(sp)		# dir$x, %sfp
 2837 1c34 032BC10A 		lw	s6,172(sp)		# N$y, N.y
 2838 1c38 93850D00 		mv	a1,s11	#, N$x
 2839 1c3c 13850B00 		mv	a0,s7	#, dir$x
 2840 1c40 97000000 		call	__mulsf3		#
 2840      E7800000 
 2841              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2842 1c48 032D0102 		lw	s10,32(sp)		# dir$y, %sfp
 2843              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2844 1c4c 930A0500 		mv	s5,a0	# tmp312, tmp581
 2845              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2846 1c50 93050B00 		mv	a1,s6	#, N$y
 2847 1c54 13050D00 		mv	a0,s10	#, dir$y
 2848 1c58 97000000 		call	__mulsf3		#
 2848      E7800000 
 2849 1c60 93050500 		mv	a1,a0	# tmp582,
 2850              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2851 1c64 13850A00 		mv	a0,s5	#, tmp312
 2852 1c68 97000000 		call	__addsf3		#
 2852      E7800000 
 2853 1c70 032C010B 		lw	s8,176(sp)		# N$z, N.z
 2854              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2855 1c74 832C4104 		lw	s9,68(sp)		# dir$z, %sfp
 2856              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2857 1c78 930A0500 		mv	s5,a0	# tmp314, tmp583
 2858              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2859 1c7c 93050C00 		mv	a1,s8	#, N$z
 2860 1c80 13850C00 		mv	a0,s9	#, dir$z
 2861 1c84 97000000 		call	__mulsf3		#
 2861      E7800000 
 2862 1c8c 93050500 		mv	a1,a0	# tmp584,
 2863              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 2864 1c90 13850A00 		mv	a0,s5	#, tmp314
 2865 1c94 97000000 		call	__addsf3		#
 2865      E7800000 
 2866 1c9c 93050500 		mv	a1,a0	# tmp585,
 2867              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 2868 1ca0 97000000 		call	__addsf3		#
 2868      E7800000 
 2869              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2870 1ca8 93850D00 		mv	a1,s11	#, N$x
 2871              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 2872 1cac 930A0500 		mv	s5,a0	# tmp317, tmp586
 2873              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2874 1cb0 97000000 		call	__mulsf3		#
 2874      E7800000 
 2875 1cb8 93050500 		mv	a1,a0	# tmp587,
 2876              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 2877 1cbc 13850B00 		mv	a0,s7	#, dir$x
 2878 1cc0 97000000 		call	__subsf3		#
 2878      E7800000 
 2879 1cc8 930B0500 		mv	s7,a0	# tmp588,
 2880              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2881 1ccc 93850A00 		mv	a1,s5	#, tmp317
 2882 1cd0 13050B00 		mv	a0,s6	#, N$y
 2883 1cd4 23266105 		sw	s6,76(sp)	# N$y, %sfp
 2884 1cd8 97000000 		call	__mulsf3		#
 2884      E7800000 
 2885 1ce0 93050500 		mv	a1,a0	# tmp589,
 2886              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 2887 1ce4 13050D00 		mv	a0,s10	#, dir$y
 2888 1ce8 97000000 		call	__subsf3		#
 2888      E7800000 
 2889 1cf0 130B0500 		mv	s6,a0	# tmp590,
 2890              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2891 1cf4 93050C00 		mv	a1,s8	#, N$z
 2892 1cf8 13850A00 		mv	a0,s5	#, tmp317
 2893 1cfc 23288105 		sw	s8,80(sp)	# N$z, %sfp
 2894 1d00 97000000 		call	__mulsf3		#
 2894      E7800000 
 2895 1d08 93050500 		mv	a1,a0	# tmp591,
 2896              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 2897 1d0c 13850C00 		mv	a0,s9	#, dir$z
 2898 1d10 97000000 		call	__subsf3		#
 2898      E7800000 
 2899 1d18 930A0500 		mv	s5,a0	# tmp592,
 2900              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2901 1d1c 93850B00 		mv	a1,s7	#, tmp319
 2902 1d20 13850B00 		mv	a0,s7	#, tmp319
 2903 1d24 97000000 		call	__mulsf3		#
 2903      E7800000 
 2904 1d2c 130C0500 		mv	s8,a0	# tmp324, tmp593
 2905              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2906 1d30 93050B00 		mv	a1,s6	#, tmp321
 2907 1d34 13050B00 		mv	a0,s6	#, tmp321
 2908 1d38 97000000 		call	__mulsf3		#
 2908      E7800000 
 2909 1d40 93050500 		mv	a1,a0	# tmp594,
 2910              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2911 1d44 13050C00 		mv	a0,s8	#, tmp324
 2912 1d48 97000000 		call	__addsf3		#
 2912      E7800000 
 2913 1d50 130C0500 		mv	s8,a0	# tmp326, tmp595
 2914              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2915 1d54 93850A00 		mv	a1,s5	#, tmp323
 2916 1d58 13850A00 		mv	a0,s5	#, tmp323
 2917 1d5c 97000000 		call	__mulsf3		#
 2917      E7800000 
 2918 1d64 93050500 		mv	a1,a0	# tmp596,
 2919              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2920 1d68 13050C00 		mv	a0,s8	#, tmp326
 2921 1d6c 97000000 		call	__addsf3		#
 2921      E7800000 
 2922 1d74 97000000 		call	sqrtf		#
 2922      E7800000 
 2923 1d7c 93050500 		mv	a1,a0	# tmp597,
 2924              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 2925 1d80 13050A00 		mv	a0,s4	#, tmp279
 2926 1d84 97000000 		call	__divsf3		#
 2926      E7800000 
 2927              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2928 1d8c 93850B00 		mv	a1,s7	#, tmp319
 2929              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 2930 1d90 130C0500 		mv	s8,a0	# tmp330, tmp598
 2931              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2932 1d94 97000000 		call	__mulsf3		#
 2932      E7800000 
 2933 1d9c 93050B00 		mv	a1,s6	#, tmp321
 2934 1da0 930C0500 		mv	s9,a0	# tmp599,
 2935 1da4 13050C00 		mv	a0,s8	#, tmp330
 2936 1da8 97000000 		call	__mulsf3		#
 2936      E7800000 
 2937 1db0 93850A00 		mv	a1,s5	#, tmp323
 2938 1db4 930B0500 		mv	s7,a0	# tmp600,
 2939 1db8 13050C00 		mv	a0,s8	#, tmp330
 2940 1dbc 97000000 		call	__mulsf3		#
 2940      E7800000 
 2941              	# main_raytrace_termio.c:196:   vec3 refract_dir = vec3_normalize(refract(dir, N, material.refracti
 2942 1dc4 83A78900 		lw	a5,8(s3)		# dir, dir
 2943 1dc8 83A80900 		lw	a7,0(s3)		# dir, dir
 2944 1dcc 03A84900 		lw	a6,4(s3)		# dir, dir
 2945 1dd0 2324F108 		sw	a5,136(sp)	# dir,
 2946 1dd4 8327810A 		lw	a5,168(sp)		# N, N
 2947 1dd8 83268113 		lw	a3,312(sp)		#, material.refractive_index
 2948 1ddc 13070A00 		mv	a4,s4	#, tmp279
 2949 1de0 2328F106 		sw	a5,112(sp)	# N,
 2950 1de4 8327C10A 		lw	a5,172(sp)		# N, N
 2951 1de8 13060107 		addi	a2,sp,112	#,,
 2952              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2953 1dec 130B0500 		mv	s6,a0	# tmp601,
 2954              	# main_raytrace_termio.c:196:   vec3 refract_dir = vec3_normalize(refract(dir, N, material.refracti
 2955 1df0 232AF106 		sw	a5,116(sp)	# N,
 2956 1df4 8327010B 		lw	a5,176(sp)		# N, N
 2957 1df8 93050108 		addi	a1,sp,128	#, tmp759,
 2958 1dfc 1305C112 		addi	a0,sp,300	#,,
 2959 1e00 232CF106 		sw	a5,120(sp)	# N,
 2960 1e04 23201109 		sw	a7,128(sp)	# dir,
 2961 1e08 23220109 		sw	a6,132(sp)	# dir,
 2962 1e0c 97000000 		call	refract		#
 2962      E7800000 
 2963 1e14 832AC112 		lw	s5,300(sp)		# U$x, D.2307.x
 2964 1e18 032D0113 		lw	s10,304(sp)		# U$y, D.2307.y
 2965 1e1c 032C4113 		lw	s8,308(sp)		# U$z, D.2307.z
 2966              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2967 1e20 93850A00 		mv	a1,s5	#, U$x
 2968 1e24 13850A00 		mv	a0,s5	#, U$x
 2969 1e28 97000000 		call	__mulsf3		#
 2969      E7800000 
 2970 1e30 93090500 		mv	s3,a0	# tmp346, tmp602
 2971              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2972 1e34 93050D00 		mv	a1,s10	#, U$y
 2973 1e38 13050D00 		mv	a0,s10	#, U$y
 2974 1e3c 97000000 		call	__mulsf3		#
 2974      E7800000 
 2975 1e44 93050500 		mv	a1,a0	# tmp603,
 2976              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2977 1e48 13850900 		mv	a0,s3	#, tmp346
 2978 1e4c 97000000 		call	__addsf3		#
 2978      E7800000 
 2979 1e54 93090500 		mv	s3,a0	# tmp348, tmp604
 2980              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2981 1e58 93050C00 		mv	a1,s8	#, U$z
 2982 1e5c 13050C00 		mv	a0,s8	#, U$z
 2983 1e60 97000000 		call	__mulsf3		#
 2983      E7800000 
 2984 1e68 93050500 		mv	a1,a0	# tmp605,
 2985              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 2986 1e6c 13850900 		mv	a0,s3	#, tmp348
 2987 1e70 97000000 		call	__addsf3		#
 2987      E7800000 
 2988 1e78 97000000 		call	sqrtf		#
 2988      E7800000 
 2989 1e80 93050500 		mv	a1,a0	# tmp606,
 2990              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 2991 1e84 13050A00 		mv	a0,s4	#, tmp279
 2992 1e88 97000000 		call	__divsf3		#
 2992      E7800000 
 2993 1e90 93090500 		mv	s3,a0	# tmp352, tmp607
 2994              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 2995 1e94 93050500 		mv	a1,a0	#, tmp352
 2996 1e98 13850A00 		mv	a0,s5	#, U$x
 2997 1e9c 97000000 		call	__mulsf3		#
 2997      E7800000 
 2998 1ea4 93850900 		mv	a1,s3	#, tmp352
 2999 1ea8 930A0500 		mv	s5,a0	# tmp608,
 3000 1eac 13050D00 		mv	a0,s10	#, U$y
 3001 1eb0 97000000 		call	__mulsf3		#
 3001      E7800000 
 3002 1eb8 93850900 		mv	a1,s3	#, tmp352
 3003 1ebc 130A0500 		mv	s4,a0	# tmp609,
 3004 1ec0 13050C00 		mv	a0,s8	#, U$z
 3005 1ec4 97000000 		call	__mulsf3		#
 3005      E7800000 
 3006              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3007 1ecc 93850D00 		mv	a1,s11	#, N$x
 3008              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3009 1ed0 93090500 		mv	s3,a0	# tmp610,
 3010              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3011 1ed4 13850C00 		mv	a0,s9	#, _107
 3012 1ed8 232AB105 		sw	s11,84(sp)	# N$x, %sfp
 3013 1edc 97000000 		call	__mulsf3		#
 3013      E7800000 
 3014 1ee4 130C0500 		mv	s8,a0	# tmp356, tmp611
 3015              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3016 1ee8 0325C104 		lw	a0,76(sp)		#, %sfp
 3017 1eec 93850B00 		mv	a1,s7	#, _108
 3018              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3019 1ef0 370D0000 		lui	s10,%hi(.LC21)	# tmp362,
 3020              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3021 1ef4 97000000 		call	__mulsf3		#
 3021      E7800000 
 3022 1efc 93050500 		mv	a1,a0	# tmp612,
 3023              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3024 1f00 13050C00 		mv	a0,s8	#, tmp356
 3025 1f04 97000000 		call	__addsf3		#
 3025      E7800000 
 3026              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3027 1f0c 83250105 		lw	a1,80(sp)		#, %sfp
 3028              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3029 1f10 130C0500 		mv	s8,a0	# tmp358, tmp613
 3030              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3031 1f14 13050B00 		mv	a0,s6	#, _109
 3032 1f18 97000000 		call	__mulsf3		#
 3032      E7800000 
 3033 1f20 93050500 		mv	a1,a0	# tmp614,
 3034              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3035 1f24 13050C00 		mv	a0,s8	#, tmp358
 3036 1f28 97000000 		call	__addsf3		#
 3036      E7800000 
 3037              	# main_raytrace_termio.c:198:   vec3 reflect_orig = vec3_dot(reflect_dir,N) < 0 ? vec3_sub(point,ve
 3038 1f30 93050000 		mv	a1,zero	#,
 3039 1f34 97000000 		call	__ltsf2		#
 3039      E7800000 
 3040 1f3c 8327C109 		lw	a5,156(sp)		# pretmp_548, point.x
 3041 1f40 832D010A 		lw	s11,160(sp)		# pretmp_547, point.y
 3042 1f44 032C410A 		lw	s8,164(sp)		# pretmp_549, point.z
 3043 1f48 232EF100 		sw	a5,28(sp)	# pretmp_548, %sfp
 3044              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3045 1f4c 83250D00 		lw	a1,%lo(.LC21)(s10)		#,
 3046              	# main_raytrace_termio.c:198:   vec3 reflect_orig = vec3_dot(reflect_dir,N) < 0 ? vec3_sub(point,ve
 3047 1f50 63440572 		blt	a0,zero,.L381	#, tmp615,,
 3048              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3049 1f54 03254105 		lw	a0,84(sp)		#, %sfp
 3050 1f58 97000000 		call	__mulsf3		#
 3050      E7800000 
 3051 1f60 93070500 		mv	a5,a0	# tmp622,
 3052 1f64 83250D00 		lw	a1,%lo(.LC21)(s10)		#,
 3053 1f68 0325C104 		lw	a0,76(sp)		#, %sfp
 3054 1f6c 232CF104 		sw	a5,88(sp)	# tmp622, %sfp
 3055 1f70 97000000 		call	__mulsf3		#
 3055      E7800000 
 3056 1f78 93070500 		mv	a5,a0	# tmp623,
 3057 1f7c 83250D00 		lw	a1,%lo(.LC21)(s10)		#,
 3058 1f80 03250105 		lw	a0,80(sp)		#, %sfp
 3059 1f84 138D0700 		mv	s10,a5	# _132, tmp623
 3060 1f88 2320F106 		sw	a5,96(sp)	# _132, %sfp
 3061 1f8c 97000000 		call	__mulsf3		#
 3061      E7800000 
 3062 1f94 93070500 		mv	a5,a0	# tmp624,
 3063              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3064 1f98 8325C101 		lw	a1,28(sp)		#, %sfp
 3065 1f9c 03258105 		lw	a0,88(sp)		#, %sfp
 3066              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3067 1fa0 232EF104 		sw	a5,92(sp)	# tmp624, %sfp
 3068              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3069 1fa4 97000000 		call	__addsf3		#
 3069      E7800000 
 3070 1fac 93070500 		mv	a5,a0	# tmp625,
 3071 1fb0 93850D00 		mv	a1,s11	#, pretmp_547
 3072 1fb4 13050D00 		mv	a0,s10	#, _132
 3073 1fb8 2326F100 		sw	a5,12(sp)	# _128, %sfp
 3074 1fbc 97000000 		call	__addsf3		#
 3074      E7800000 
 3075 1fc4 130D0500 		mv	s10,a0	# tmp626,
 3076 1fc8 0325C105 		lw	a0,92(sp)		#, %sfp
 3077 1fcc 93050C00 		mv	a1,s8	#, pretmp_549
 3078 1fd0 97000000 		call	__addsf3		#
 3078      E7800000 
 3079 1fd8 0327C100 		lw	a4,12(sp)		# _128, %sfp
 3080 1fdc 93070500 		mv	a5,a0	# _130, tmp627
 3081              	.L339:
 3082              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3083 1fe0 83254105 		lw	a1,84(sp)		#, %sfp
 3084 1fe4 13850A00 		mv	a0,s5	#, _97
 3085              	# main_raytrace_termio.c:41:   return V;
 3086 1fe8 2326E10C 		sw	a4,204(sp)	# _128, reflect_orig.x
 3087 1fec 232AF10C 		sw	a5,212(sp)	# _130, reflect_orig.z
 3088 1ff0 2328A10D 		sw	s10,208(sp)	# _129, reflect_orig.y
 3089              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3090 1ff4 97000000 		call	__mulsf3		#
 3090      E7800000 
 3091 1ffc 130D0500 		mv	s10,a0	# tmp380, tmp628
 3092              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3093 2000 0325C104 		lw	a0,76(sp)		#, %sfp
 3094 2004 93050A00 		mv	a1,s4	#, _98
 3095 2008 97000000 		call	__mulsf3		#
 3095      E7800000 
 3096 2010 93050500 		mv	a1,a0	# tmp629,
 3097              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3098 2014 13050D00 		mv	a0,s10	#, tmp380
 3099 2018 97000000 		call	__addsf3		#
 3099      E7800000 
 3100              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3101 2020 83250105 		lw	a1,80(sp)		#, %sfp
 3102              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3103 2024 130D0500 		mv	s10,a0	# tmp382, tmp630
 3104              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3105 2028 13850900 		mv	a0,s3	#, _99
 3106 202c 97000000 		call	__mulsf3		#
 3106      E7800000 
 3107 2034 93050500 		mv	a1,a0	# tmp631,
 3108              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3109 2038 13050D00 		mv	a0,s10	#, tmp382
 3110 203c 97000000 		call	__addsf3		#
 3110      E7800000 
 3111              	# main_raytrace_termio.c:199:   vec3 refract_orig = vec3_dot(refract_dir,N) < 0 ? vec3_sub(point,ve
 3112 2044 93050000 		mv	a1,zero	#,
 3113 2048 97000000 		call	__ltsf2		#
 3113      E7800000 
 3114 2050 E346051A 		blt	a0,zero,.L382	#, tmp632,,
 3115              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3116 2054 8325C101 		lw	a1,28(sp)		#, %sfp
 3117 2058 03258105 		lw	a0,88(sp)		#, %sfp
 3118 205c 97000000 		call	__addsf3		#
 3118      E7800000 
 3119 2064 93070500 		mv	a5,a0	# tmp636,
 3120 2068 03250106 		lw	a0,96(sp)		#, %sfp
 3121 206c 93850D00 		mv	a1,s11	#, pretmp_547
 3122 2070 2326F100 		sw	a5,12(sp)	# _145, %sfp
 3123 2074 97000000 		call	__addsf3		#
 3123      E7800000 
 3124 207c 130D0500 		mv	s10,a0	# tmp637,
 3125 2080 0325C105 		lw	a0,92(sp)		#, %sfp
 3126 2084 93050C00 		mv	a1,s8	#, pretmp_549
 3127 2088 97000000 		call	__addsf3		#
 3127      E7800000 
 3128 2090 032EC100 		lw	t3,12(sp)		# _145, %sfp
 3129 2094 13030500 		mv	t1,a0	# _147, tmp638
 3130              	.L342:
 3131              	# main_raytrace_termio.c:41:   return V;
 3132 2098 2320610E 		sw	t1,224(sp)	# _147, refract_orig.z
 3133              	# main_raytrace_termio.c:200:   vec3 reflect_color = cast_ray(reflect_orig, reflect_dir, spheres, n
 3134 209c 0323C10C 		lw	t1,204(sp)		# reflect_orig, reflect_orig
 3135 20a0 03280104 		lw	a6,64(sp)		#, %sfp
 3136 20a4 03278101 		lw	a4,24(sp)		#, %sfp
 3137 20a8 23206108 		sw	t1,128(sp)	# reflect_orig,
 3138 20ac 0323010D 		lw	t1,208(sp)		# reflect_orig, reflect_orig
 3139 20b0 83264101 		lw	a3,20(sp)		#, %sfp
 3140 20b4 93841400 		addi	s1,s1,1	#, _8, depth
 3141 20b8 23226108 		sw	t1,132(sp)	# reflect_orig,
 3142 20bc 0323410D 		lw	t1,212(sp)		# reflect_orig, reflect_orig
 3143 20c0 93880400 		mv	a7,s1	#, _8
 3144 20c4 93070400 		mv	a5,s0	#, lights
 3145 20c8 13060107 		addi	a2,sp,112	#,,
 3146 20cc 93050108 		addi	a1,sp,128	#, tmp761,
 3147 20d0 1305410E 		addi	a0,sp,228	#,,
 3148 20d4 23246108 		sw	t1,136(sp)	# reflect_orig,
 3149              	# main_raytrace_termio.c:41:   return V;
 3150 20d8 232CC10D 		sw	t3,216(sp)	# _145, refract_orig.x
 3151 20dc 232EA10D 		sw	s10,220(sp)	# _146, refract_orig.y
 3152              	# main_raytrace_termio.c:200:   vec3 reflect_color = cast_ray(reflect_orig, reflect_dir, spheres, n
 3153 20e0 232A910B 		sw	s9,180(sp)	# _107, reflect_dir.x
 3154 20e4 232C710B 		sw	s7,184(sp)	# _108, reflect_dir.y
 3155 20e8 232E610B 		sw	s6,188(sp)	# _109, reflect_dir.z
 3156 20ec 23289107 		sw	s9,112(sp)	# _107,
 3157 20f0 232A7107 		sw	s7,116(sp)	# _108,
 3158 20f4 232C6107 		sw	s6,120(sp)	# _109,
 3159 20f8 97000000 		call	cast_ray		#
 3159      E7800000 
 3160              	# main_raytrace_termio.c:201:   vec3 refract_color = cast_ray(refract_orig, refract_dir, spheres, n
 3161 2100 0323810D 		lw	t1,216(sp)		# refract_orig, refract_orig
 3162 2104 93880400 		mv	a7,s1	#, _8
 3163 2108 83240104 		lw	s1,64(sp)		# nb_lights, %sfp
 3164 210c 23206108 		sw	t1,128(sp)	# refract_orig,
 3165 2110 0323C10D 		lw	t1,220(sp)		# refract_orig, refract_orig
 3166 2114 03278101 		lw	a4,24(sp)		#, %sfp
 3167 2118 83264101 		lw	a3,20(sp)		#, %sfp
 3168 211c 23226108 		sw	t1,132(sp)	# refract_orig,
 3169 2120 0323010E 		lw	t1,224(sp)		# refract_orig, refract_orig
 3170 2124 13880400 		mv	a6,s1	#, nb_lights
 3171 2128 93070400 		mv	a5,s0	#, lights
 3172 212c 13060107 		addi	a2,sp,112	#,,
 3173 2130 93050108 		addi	a1,sp,128	#, tmp762,
 3174 2134 1305010F 		addi	a0,sp,240	#,,
 3175 2138 2320510D 		sw	s5,192(sp)	# _97, refract_dir.x
 3176 213c 2322410D 		sw	s4,196(sp)	# _98, refract_dir.y
 3177 2140 2324310D 		sw	s3,200(sp)	# _99, refract_dir.z
 3178 2144 23246108 		sw	t1,136(sp)	# refract_orig,
 3179 2148 23285107 		sw	s5,112(sp)	# _97,
 3180 214c 232A4107 		sw	s4,116(sp)	# _98,
 3181 2150 232C3107 		sw	s3,120(sp)	# _99,
 3182 2154 97000000 		call	cast_ray		#
 3182      E7800000 
 3183              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3184 215c E354900E 		ble	s1,zero,.L359	#, nb_lights,,
 3185              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 3186 2160 83270900 		lw	a5,%lo(.LC1)(s2)		# tmp545,
 3187              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 3188 2164 032DC101 		lw	s10,28(sp)		# pretmp_548, %sfp
 3189              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3190 2168 23260100 		sw	zero,12(sp)	#, %sfp
 3191              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 3192 216c 2322F106 		sw	a5,100(sp)	# tmp545, %sfp
 3193              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3194 2170 B7070000 		lui	a5,%hi(.LC15)	# tmp547,
 3195 2174 03A84700 		lw	a6,%lo(.LC15+4)(a5)		#,
 3196 2178 83A70700 		lw	a5,%lo(.LC15)(a5)		# tmp548,
 3197              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 3198 217c 370A0080 		li	s4,-2147483648		# tmp546,
 3199              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3200 2180 232A0103 		sw	a6,52(sp)	#, %sfp
 3201 2184 2328F102 		sw	a5,48(sp)	# tmp548, %sfp
 3202              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3203 2188 B7070000 		lui	a5,%hi(.LC16)	# tmp549,
 3204 218c 03A84700 		lw	a6,%lo(.LC16+4)(a5)		#,
 3205 2190 83A70700 		lw	a5,%lo(.LC16)(a5)		# tmp550,
 3206 2194 232E0103 		sw	a6,60(sp)	#, %sfp
 3207 2198 232CF102 		sw	a5,56(sp)	# tmp550, %sfp
 3208              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 3209 219c 93070000 		mv	a5,zero	# specular_light_intensity,
 3210 21a0 2326F106 		sw	a5,108(sp)	# specular_light_intensity, %sfp
 3211              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 3212 21a4 2328F100 		sw	a5,16(sp)	# diffuse_light_intensity, %sfp
 3213 21a8 6F00002A 		j	.L358		#
 3214              	.L375:
 3215              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3216 21ac 03258105 		lw	a0,88(sp)		#, %sfp
 3217 21b0 93050D00 		mv	a1,s10	#, pretmp_548
 3218 21b4 97000000 		call	__addsf3		#
 3218      E7800000 
 3219 21bc 130B0500 		mv	s6,a0	# tmp667,
 3220 21c0 03250106 		lw	a0,96(sp)		#, %sfp
 3221 21c4 93850D00 		mv	a1,s11	#, pretmp_547
 3222 21c8 97000000 		call	__addsf3		#
 3222      E7800000 
 3223 21d0 930A0500 		mv	s5,a0	# tmp668,
 3224 21d4 0325C105 		lw	a0,92(sp)		#, %sfp
 3225 21d8 93050C00 		mv	a1,s8	#, pretmp_549
 3226 21dc 97000000 		call	__addsf3		#
 3226      E7800000 
 3227 21e4 930C0500 		mv	s9,a0	# shadow_orig$z, tmp669
 3228              	.L346:
 3229              	# main_raytrace_termio.c:212:     if (scene_intersect(shadow_orig, light_dir, spheres, nb_spheres, 
 3230 21e8 83268101 		lw	a3,24(sp)		#, %sfp
 3231 21ec 03264101 		lw	a2,20(sp)		#, %sfp
 3232 21f0 1308C115 		addi	a6,sp,348	#, tmp769,
 3233 21f4 93070112 		addi	a5,sp,288	#, tmp770,
 3234 21f8 13074111 		addi	a4,sp,276	#, tmp771,
 3235 21fc 93050107 		addi	a1,sp,112	#,,
 3236 2200 13050108 		addi	a0,sp,128	#, tmp772,
 3237 2204 23246111 		sw	s6,264(sp)	# shadow_orig$x, shadow_orig.x
 3238 2208 23265111 		sw	s5,268(sp)	# shadow_orig$y, shadow_orig.y
 3239 220c 23289111 		sw	s9,272(sp)	# shadow_orig$z, shadow_orig.z
 3240 2210 232E310F 		sw	s3,252(sp)	# _172, light_dir.x
 3241 2214 23202111 		sw	s2,256(sp)	# _173, light_dir.y
 3242 2218 23229110 		sw	s1,260(sp)	# _174, light_dir.z
 3243 221c 23206109 		sw	s6,128(sp)	# shadow_orig$x,
 3244 2220 23225109 		sw	s5,132(sp)	# shadow_orig$y,
 3245 2224 23249109 		sw	s9,136(sp)	# shadow_orig$z,
 3246 2228 23283107 		sw	s3,112(sp)	# _172,
 3247 222c 232A2107 		sw	s2,116(sp)	# _173,
 3248 2230 232C9106 		sw	s1,120(sp)	# _174,
 3249 2234 97000000 		call	scene_intersect		#
 3249      E7800000 
 3250              	# main_raytrace_termio.c:212:     if (scene_intersect(shadow_orig, light_dir, spheres, nb_spheres, 
 3251 223c 6316054C 		bne	a0,zero,.L383	#, tmp670,,
 3252              	.L347:
 3253 2240 0327810A 		lw	a4,168(sp)		# V$x, N.x
 3254 2244 832AC10A 		lw	s5,172(sp)		# V$y, N.y
 3255              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3256 2248 13850900 		mv	a0,s3	#, _172
 3257 224c 93050700 		mv	a1,a4	#, V$x
 3258 2250 2326E102 		sw	a4,44(sp)	# V$x, %sfp
 3259 2254 23225103 		sw	s5,36(sp)	# V$y, %sfp
 3260 2258 97000000 		call	__mulsf3		#
 3260      E7800000 
 3261 2260 832C010B 		lw	s9,176(sp)		# V$z, N.z
 3262              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3263 2264 93850A00 		mv	a1,s5	#, V$y
 3264              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3265 2268 930B0500 		mv	s7,a0	# tmp680,
 3266              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3267 226c 13050900 		mv	a0,s2	#, _173
 3268 2270 97000000 		call	__mulsf3		#
 3268      E7800000 
 3269 2278 130B0500 		mv	s6,a0	# tmp681,
 3270              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3271 227c 93850C00 		mv	a1,s9	#, V$z
 3272 2280 13850400 		mv	a0,s1	#, _174
 3273 2284 97000000 		call	__mulsf3		#
 3273      E7800000 
 3274 228c 930A0500 		mv	s5,a0	# _224, tmp682
 3275              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3276 2290 93050B00 		mv	a1,s6	#, _222
 3277 2294 13850B00 		mv	a0,s7	#, _221
 3278 2298 97000000 		call	__addsf3		#
 3278      E7800000 
 3279              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3280 22a0 93850A00 		mv	a1,s5	#, _224
 3281 22a4 97000000 		call	__addsf3		#
 3281      E7800000 
 3282              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 3283 22ac 93050000 		mv	a1,zero	#,
 3284              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3285 22b0 2324A102 		sw	a0,40(sp)	# iftmp.40_220, %sfp
 3286              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 3287 22b4 97000000 		call	__ltsf2		#
 3287      E7800000 
 3288              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 3289 22bc 8327C400 		lw	a5,12(s0)		# _14, MEM[(float *)_270 + 12B]
 3290              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 3291 22c0 0327C102 		lw	a4,44(sp)		# V$x, %sfp
 3292              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 3293 22c4 232EF100 		sw	a5,28(sp)	# _14, %sfp
 3294              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 3295 22c8 83278102 		lw	a5,40(sp)		# iftmp.40_220, %sfp
 3296 22cc 63540500 		bge	a0,zero,.L349	#, tmp684,,
 3297 22d0 93070000 		mv	a5,zero	# iftmp.40_220,
 3298              	.L349:
 3299              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 3300 22d4 0325C101 		lw	a0,28(sp)		#, %sfp
 3301 22d8 93850700 		mv	a1,a5	#, iftmp.40_220
 3302 22dc 2324E102 		sw	a4,40(sp)	# V$x, %sfp
 3303 22e0 97000000 		call	__mulsf3		#
 3303      E7800000 
 3304 22e8 93050500 		mv	a1,a0	# tmp685,
 3305              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 3306 22ec 03250101 		lw	a0,16(sp)		#, %sfp
 3307              	# main_raytrace_termio.c:50: static inline vec3 vec3_neg(vec3 V)            { return make_vec3(-V.x
 3308 22f0 B3493A01 		xor	s3,s4,s3	# _172, tmp476, tmp546
 3309 22f4 33492A01 		xor	s2,s4,s2	# _173, tmp483, tmp546
 3310              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 3311 22f8 97000000 		call	__addsf3		#
 3311      E7800000 
 3312 2300 93070500 		mv	a5,a0	# tmp686,
 3313              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 3314 2304 93850B00 		mv	a1,s7	#, _221
 3315 2308 33456A01 		xor	a0,s4,s6	# _222,, tmp546
 3316              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 3317 230c 2328F100 		sw	a5,16(sp)	# tmp686, %sfp
 3318              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 3319 2310 97000000 		call	__subsf3		#
 3319      E7800000 
 3320 2318 93850A00 		mv	a1,s5	#, _224
 3321 231c 97000000 		call	__subsf3		#
 3321      E7800000 
 3322 2324 93050500 		mv	a1,a0	# tmp687,
 3323 2328 97000000 		call	__addsf3		#
 3323      E7800000 
 3324              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3325 2330 03278102 		lw	a4,40(sp)		# V$x, %sfp
 3326              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 3327 2334 930A0500 		mv	s5,a0	# tmp475, tmp688
 3328              	# main_raytrace_termio.c:50: static inline vec3 vec3_neg(vec3 V)            { return make_vec3(-V.x
 3329 2338 B3449A00 		xor	s1,s4,s1	# _174, tmp491, tmp546
 3330              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3331 233c 93050700 		mv	a1,a4	#, V$x
 3332 2340 97000000 		call	__mulsf3		#
 3332      E7800000 
 3333 2348 93050500 		mv	a1,a0	# tmp689,
 3334              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3335 234c 13850900 		mv	a0,s3	#, tmp476
 3336 2350 97000000 		call	__subsf3		#
 3336      E7800000 
 3337              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3338 2358 83258104 		lw	a1,72(sp)		#, %sfp
 3339 235c 3345AA00 		xor	a0,s4,a0	# tmp690,, tmp546
 3340 2360 97000000 		call	__mulsf3		#
 3340      E7800000 
 3341              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3342 2368 83254102 		lw	a1,36(sp)		#, %sfp
 3343              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3344 236c 93090500 		mv	s3,a0	# tmp691,
 3345              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3346 2370 13850A00 		mv	a0,s5	#, tmp475
 3347 2374 97000000 		call	__mulsf3		#
 3347      E7800000 
 3348 237c 93050500 		mv	a1,a0	# tmp692,
 3349              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3350 2380 13050900 		mv	a0,s2	#, tmp483
 3351 2384 97000000 		call	__subsf3		#
 3351      E7800000 
 3352              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3353 238c 83250102 		lw	a1,32(sp)		#, %sfp
 3354 2390 3345AA00 		xor	a0,s4,a0	# tmp693,, tmp546
 3355 2394 97000000 		call	__mulsf3		#
 3355      E7800000 
 3356 239c 93050500 		mv	a1,a0	# tmp694,
 3357              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3358 23a0 13850900 		mv	a0,s3	#, tmp482
 3359 23a4 97000000 		call	__addsf3		#
 3359      E7800000 
 3360 23ac 13090500 		mv	s2,a0	# tmp695,
 3361              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3362 23b0 93850C00 		mv	a1,s9	#, V$z
 3363 23b4 13850A00 		mv	a0,s5	#, tmp475
 3364 23b8 97000000 		call	__mulsf3		#
 3364      E7800000 
 3365 23c0 93050500 		mv	a1,a0	# tmp696,
 3366              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3367 23c4 13850400 		mv	a0,s1	#, tmp491
 3368 23c8 97000000 		call	__subsf3		#
 3368      E7800000 
 3369              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3370 23d0 83254104 		lw	a1,68(sp)		#, %sfp
 3371 23d4 3345AA00 		xor	a0,s4,a0	# tmp697,, tmp546
 3372 23d8 97000000 		call	__mulsf3		#
 3372      E7800000 
 3373 23e0 93050500 		mv	a1,a0	# tmp698,
 3374              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3375 23e4 13050900 		mv	a0,s2	#, tmp490
 3376 23e8 97000000 		call	__addsf3		#
 3376      E7800000 
 3377              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 3378 23f0 93050000 		mv	a1,zero	#,
 3379              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3380 23f4 93090500 		mv	s3,a0	# _204, tmp699
 3381              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 3382 23f8 97000000 		call	__ltsf2		#
 3382      E7800000 
 3383 2400 63480502 		blt	a0,zero,.L348	#, tmp700,,
 3384              	# main_raytrace_termio.c:220:     if(abc > 0.0f && def > 0.0f) {
 3385 2404 93050000 		mv	a1,zero	#,
 3386 2408 13850900 		mv	a0,s3	#, _204
 3387 240c 97000000 		call	__gtsf2		#
 3387      E7800000 
 3388              	# main_raytrace_termio.c:219:     float def = material.specular_exponent;
 3389 2414 83248115 		lw	s1,344(sp)		# def, material.specular_exponent
 3390              	# main_raytrace_termio.c:220:     if(abc > 0.0f && def > 0.0f) {
 3391 2418 635CA000 		ble	a0,zero,.L348	#, tmp701,,
 3392              	# main_raytrace_termio.c:220:     if(abc > 0.0f && def > 0.0f) {
 3393 241c 93050000 		mv	a1,zero	#,
 3394 2420 13850400 		mv	a0,s1	#, def
 3395 2424 97000000 		call	__gtsf2		#
 3395      E7800000 
 3396 242c 634AA050 		bgt	a0,zero,.L384	#, tmp702,,
 3397              	.L348:
 3398              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3399 2430 8327C100 		lw	a5,12(sp)		# i, %sfp
 3400              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3401 2434 03270104 		lw	a4,64(sp)		# nb_lights, %sfp
 3402 2438 13040401 		addi	s0,s0,16	#, ivtmp.1114, ivtmp.1114
 3403              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3404 243c 93871700 		addi	a5,a5,1	#, i, i
 3405 2440 2326F100 		sw	a5,12(sp)	# i, %sfp
 3406              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3407 2444 630AF738 		beq	a4,a5,.L343	#, nb_lights, i,
 3408              	.L358:
 3409              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3410 2448 03250400 		lw	a0,0(s0)		#, MEM[(float *)_270]
 3411 244c 93050D00 		mv	a1,s10	#, pretmp_548
 3412 2450 97000000 		call	__subsf3		#
 3412      E7800000 
 3413 2458 93090500 		mv	s3,a0	# tmp639,
 3414 245c 03254400 		lw	a0,4(s0)		#, MEM[(float *)_270 + 4B]
 3415 2460 93850D00 		mv	a1,s11	#, pretmp_547
 3416 2464 97000000 		call	__subsf3		#
 3416      E7800000 
 3417 246c 13090500 		mv	s2,a0	# tmp640,
 3418 2470 03258400 		lw	a0,8(s0)		#, MEM[(float *)_270 + 8B]
 3419 2474 93050C00 		mv	a1,s8	#, pretmp_549
 3420 2478 97000000 		call	__subsf3		#
 3420      E7800000 
 3421 2480 93040500 		mv	s1,a0	# tmp641,
 3422              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3423 2484 93850900 		mv	a1,s3	#, tmp410
 3424 2488 13850900 		mv	a0,s3	#, tmp410
 3425 248c 97000000 		call	__mulsf3		#
 3425      E7800000 
 3426 2494 930A0500 		mv	s5,a0	# tmp413, tmp642
 3427              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3428 2498 93050900 		mv	a1,s2	#, tmp411
 3429 249c 13050900 		mv	a0,s2	#, tmp411
 3430 24a0 97000000 		call	__mulsf3		#
 3430      E7800000 
 3431 24a8 93050500 		mv	a1,a0	# tmp643,
 3432              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3433 24ac 13850A00 		mv	a0,s5	#, tmp413
 3434 24b0 97000000 		call	__addsf3		#
 3434      E7800000 
 3435 24b8 930A0500 		mv	s5,a0	# tmp415, tmp644
 3436              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3437 24bc 93850400 		mv	a1,s1	#, tmp412
 3438 24c0 13850400 		mv	a0,s1	#, tmp412
 3439 24c4 97000000 		call	__mulsf3		#
 3439      E7800000 
 3440 24cc 93050500 		mv	a1,a0	# tmp645,
 3441              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3442 24d0 13850A00 		mv	a0,s5	#, tmp415
 3443 24d4 97000000 		call	__addsf3		#
 3443      E7800000 
 3444 24dc 97000000 		call	sqrtf		#
 3444      E7800000 
 3445 24e4 93050500 		mv	a1,a0	# tmp646,
 3446              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 3447 24e8 03254106 		lw	a0,100(sp)		#, %sfp
 3448 24ec 97000000 		call	__divsf3		#
 3448      E7800000 
 3449              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3450 24f4 93850900 		mv	a1,s3	#, tmp410
 3451              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 3452 24f8 930A0500 		mv	s5,a0	# tmp419, tmp647
 3453              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3454 24fc 97000000 		call	__mulsf3		#
 3454      E7800000 
 3455 2504 93050900 		mv	a1,s2	#, tmp411
 3456 2508 93090500 		mv	s3,a0	# tmp648,
 3457 250c 13850A00 		mv	a0,s5	#, tmp419
 3458 2510 97000000 		call	__mulsf3		#
 3458      E7800000 
 3459 2518 93850400 		mv	a1,s1	#, tmp412
 3460 251c 13090500 		mv	s2,a0	# tmp649,
 3461 2520 13850A00 		mv	a0,s5	#, tmp419
 3462 2524 97000000 		call	__mulsf3		#
 3462      E7800000 
 3463 252c 93040500 		mv	s1,a0	# tmp650,
 3464              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3465 2530 03250400 		lw	a0,0(s0)		#, MEM[(float *)_270]
 3466 2534 93050D00 		mv	a1,s10	#, pretmp_548
 3467 2538 97000000 		call	__subsf3		#
 3467      E7800000 
 3468 2540 930A0500 		mv	s5,a0	# tmp651,
 3469 2544 03254400 		lw	a0,4(s0)		#, MEM[(float *)_270 + 4B]
 3470 2548 93850D00 		mv	a1,s11	#, pretmp_547
 3471 254c 97000000 		call	__subsf3		#
 3471      E7800000 
 3472 2554 930B0500 		mv	s7,a0	# tmp652,
 3473 2558 03258400 		lw	a0,8(s0)		#, MEM[(float *)_270 + 8B]
 3474 255c 93050C00 		mv	a1,s8	#, pretmp_549
 3475 2560 97000000 		call	__subsf3		#
 3475      E7800000 
 3476 2568 130B0500 		mv	s6,a0	# tmp653,
 3477              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3478 256c 93850A00 		mv	a1,s5	#, tmp423
 3479 2570 13850A00 		mv	a0,s5	#, tmp11
 3480 2574 97000000 		call	__mulsf3		#
 3480      E7800000 
 3481 257c 930A0500 		mv	s5,a0	# tmp426, tmp654
 3482              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3483 2580 93850B00 		mv	a1,s7	#, tmp424
 3484 2584 13850B00 		mv	a0,s7	#, tmp11
 3485 2588 97000000 		call	__mulsf3		#
 3485      E7800000 
 3486 2590 93050500 		mv	a1,a0	# tmp655,
 3487              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3488 2594 13850A00 		mv	a0,s5	#, tmp426
 3489 2598 97000000 		call	__addsf3		#
 3489      E7800000 
 3490 25a0 930A0500 		mv	s5,a0	# tmp428, tmp656
 3491              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3492 25a4 93050B00 		mv	a1,s6	#, tmp425
 3493 25a8 13050B00 		mv	a0,s6	#, tmp11
 3494 25ac 97000000 		call	__mulsf3		#
 3494      E7800000 
 3495 25b4 93050500 		mv	a1,a0	# tmp657,
 3496              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3497 25b8 13850A00 		mv	a0,s5	#, tmp428
 3498 25bc 97000000 		call	__addsf3		#
 3498      E7800000 
 3499 25c4 97000000 		call	sqrtf		#
 3499      E7800000 
 3500              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3501 25cc 83254105 		lw	a1,84(sp)		#, %sfp
 3502              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3503 25d0 930B0500 		mv	s7,a0	# tmp658,
 3504              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3505 25d4 13850900 		mv	a0,s3	#, _172
 3506 25d8 97000000 		call	__mulsf3		#
 3506      E7800000 
 3507 25e0 930A0500 		mv	s5,a0	# tmp431, tmp659
 3508              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3509 25e4 0325C104 		lw	a0,76(sp)		#, %sfp
 3510 25e8 93050900 		mv	a1,s2	#, _173
 3511 25ec 97000000 		call	__mulsf3		#
 3511      E7800000 
 3512 25f4 93050500 		mv	a1,a0	# tmp660,
 3513              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3514 25f8 13850A00 		mv	a0,s5	#, tmp431
 3515 25fc 97000000 		call	__addsf3		#
 3515      E7800000 
 3516              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3517 2604 83250105 		lw	a1,80(sp)		#, %sfp
 3518              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3519 2608 930A0500 		mv	s5,a0	# tmp433, tmp661
 3520              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3521 260c 13850400 		mv	a0,s1	#, _174
 3522 2610 97000000 		call	__mulsf3		#
 3522      E7800000 
 3523 2618 93050500 		mv	a1,a0	# tmp662,
 3524              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3525 261c 13850A00 		mv	a0,s5	#, tmp433
 3526 2620 97000000 		call	__addsf3		#
 3526      E7800000 
 3527              	# main_raytrace_termio.c:208:     vec3 shadow_orig = vec3_dot(light_dir,N) < 0 ? vec3_sub(point,vec
 3528 2628 93050000 		mv	a1,zero	#,
 3529 262c 97000000 		call	__ltsf2		#
 3529      E7800000 
 3530 2634 E35C05B6 		bge	a0,zero,.L375	#, tmp663,,
 3531              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3532 2638 83258105 		lw	a1,88(sp)		#, %sfp
 3533 263c 13050D00 		mv	a0,s10	#, pretmp_548
 3534 2640 97000000 		call	__subsf3		#
 3534      E7800000 
 3535 2648 83250106 		lw	a1,96(sp)		#, %sfp
 3536 264c 130B0500 		mv	s6,a0	# tmp664,
 3537 2650 13850D00 		mv	a0,s11	#, pretmp_547
 3538 2654 97000000 		call	__subsf3		#
 3538      E7800000 
 3539 265c 8325C105 		lw	a1,92(sp)		#, %sfp
 3540 2660 930A0500 		mv	s5,a0	# tmp665,
 3541 2664 13050C00 		mv	a0,s8	#, pretmp_549
 3542 2668 97000000 		call	__subsf3		#
 3542      E7800000 
 3543 2670 930C0500 		mv	s9,a0	# shadow_orig$z, tmp666
 3544 2674 6FF05FB7 		j	.L346		#
 3545              	.L381:
 3546              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3547 2678 03254105 		lw	a0,84(sp)		#, %sfp
 3548 267c 97000000 		call	__mulsf3		#
 3548      E7800000 
 3549 2684 93070500 		mv	a5,a0	# tmp616,
 3550 2688 83250D00 		lw	a1,%lo(.LC21)(s10)		#,
 3551 268c 0325C104 		lw	a0,76(sp)		#, %sfp
 3552 2690 232CF104 		sw	a5,88(sp)	# tmp616, %sfp
 3553 2694 97000000 		call	__mulsf3		#
 3553      E7800000 
 3554 269c 93070500 		mv	a5,a0	# tmp617,
 3555 26a0 83250D00 		lw	a1,%lo(.LC21)(s10)		#,
 3556 26a4 03250105 		lw	a0,80(sp)		#, %sfp
 3557 26a8 138D0700 		mv	s10,a5	# _132, tmp617
 3558 26ac 2320F106 		sw	a5,96(sp)	# _132, %sfp
 3559 26b0 97000000 		call	__mulsf3		#
 3559      E7800000 
 3560 26b8 93070500 		mv	a5,a0	# tmp618,
 3561              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3562 26bc 83258105 		lw	a1,88(sp)		#, %sfp
 3563 26c0 0325C101 		lw	a0,28(sp)		#, %sfp
 3564              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3565 26c4 232EF104 		sw	a5,92(sp)	# tmp618, %sfp
 3566              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3567 26c8 97000000 		call	__subsf3		#
 3567      E7800000 
 3568 26d0 93070500 		mv	a5,a0	# tmp619,
 3569 26d4 93050D00 		mv	a1,s10	#, _132
 3570 26d8 13850D00 		mv	a0,s11	#, pretmp_547
 3571 26dc 2326F100 		sw	a5,12(sp)	# _128, %sfp
 3572 26e0 97000000 		call	__subsf3		#
 3572      E7800000 
 3573 26e8 8325C105 		lw	a1,92(sp)		#, %sfp
 3574 26ec 130D0500 		mv	s10,a0	# tmp620,
 3575 26f0 13050C00 		mv	a0,s8	#, pretmp_549
 3576 26f4 97000000 		call	__subsf3		#
 3576      E7800000 
 3577 26fc 0327C100 		lw	a4,12(sp)		# _128, %sfp
 3578 2700 93070500 		mv	a5,a0	# _130, tmp621
 3579 2704 6FF0DF8D 		j	.L339		#
 3580              	.L383:
 3581 2708 03254111 		lw	a0,276(sp)		#, shadow_pt.x
 3582 270c 93050B00 		mv	a1,s6	#, shadow_orig$x
 3583 2710 97000000 		call	__subsf3		#
 3583      E7800000 
 3584 2718 93070500 		mv	a5,a0	# tmp671,
 3585 271c 03258111 		lw	a0,280(sp)		#, shadow_pt.y
 3586 2720 93850A00 		mv	a1,s5	#, shadow_orig$y
 3587 2724 938A0700 		mv	s5,a5	# tmp454, tmp671
 3588 2728 97000000 		call	__subsf3		#
 3588      E7800000 
 3589 2730 93070500 		mv	a5,a0	# tmp672,
 3590 2734 0325C111 		lw	a0,284(sp)		#, shadow_pt.z
 3591 2738 93850C00 		mv	a1,s9	#, shadow_orig$z
 3592 273c 938C0700 		mv	s9,a5	# tmp455, tmp672
 3593 2740 97000000 		call	__subsf3		#
 3593      E7800000 
 3594 2748 130B0500 		mv	s6,a0	# tmp673,
 3595              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3596 274c 93850A00 		mv	a1,s5	#, tmp454
 3597 2750 13850A00 		mv	a0,s5	#, tmp11
 3598 2754 97000000 		call	__mulsf3		#
 3598      E7800000 
 3599 275c 930A0500 		mv	s5,a0	# tmp457, tmp674
 3600              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3601 2760 93850C00 		mv	a1,s9	#, tmp455
 3602 2764 13850C00 		mv	a0,s9	#, tmp11
 3603 2768 97000000 		call	__mulsf3		#
 3603      E7800000 
 3604 2770 93050500 		mv	a1,a0	# tmp675,
 3605              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3606 2774 13850A00 		mv	a0,s5	#, tmp457
 3607 2778 97000000 		call	__addsf3		#
 3607      E7800000 
 3608 2780 930A0500 		mv	s5,a0	# tmp459, tmp676
 3609              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3610 2784 93050B00 		mv	a1,s6	#, tmp456
 3611 2788 13050B00 		mv	a0,s6	#, tmp11
 3612 278c 97000000 		call	__mulsf3		#
 3612      E7800000 
 3613 2794 93050500 		mv	a1,a0	# tmp677,
 3614              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 3615 2798 13850A00 		mv	a0,s5	#, tmp459
 3616 279c 97000000 		call	__addsf3		#
 3616      E7800000 
 3617 27a4 97000000 		call	sqrtf		#
 3617      E7800000 
 3618 27ac 93050500 		mv	a1,a0	# tmp678,
 3619              	# main_raytrace_termio.c:212:     if (scene_intersect(shadow_orig, light_dir, spheres, nb_spheres, 
 3620 27b0 13850B00 		mv	a0,s7	#, _161
 3621 27b4 97000000 		call	__gtsf2		#
 3621      E7800000 
 3622 27bc E352A0A8 		ble	a0,zero,.L347	#, tmp679,,
 3623              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3624 27c0 8327C100 		lw	a5,12(sp)		# i, %sfp
 3625              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3626 27c4 03270104 		lw	a4,64(sp)		# nb_lights, %sfp
 3627 27c8 13040401 		addi	s0,s0,16	#, ivtmp.1114, ivtmp.1114
 3628              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3629 27cc 93871700 		addi	a5,a5,1	#, i, i
 3630 27d0 2326F100 		sw	a5,12(sp)	# i, %sfp
 3631              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 3632 27d4 E31AF7C6 		bne	a4,a5,.L358	#, nb_lights, i,
 3633              	.L343:
 3634              	# main_raytrace_termio.c:224:   vec3 alu_rslt = vec3_scale(diffuse_light_intensity * material.albed
 3635 27d8 8325C113 		lw	a1,316(sp)		#, material.albedo.x
 3636 27dc 03250101 		lw	a0,16(sp)		#, %sfp
 3637 27e0 97000000 		call	__mulsf3		#
 3637      E7800000 
 3638 27e8 93090500 		mv	s3,a0	# tmp711,
 3639              	# main_raytrace_termio.c:225:   alu_rslt = vec3_add(alu_rslt, vec3_scale(specular_light_intensity *
 3640 27ec 83250114 		lw	a1,320(sp)		#, material.albedo.y
 3641 27f0 0325C106 		lw	a0,108(sp)		#, %sfp
 3642 27f4 97000000 		call	__mulsf3		#
 3642      E7800000 
 3643              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3644 27fc 8325C114 		lw	a1,332(sp)		#, material.diffuse_color.x
 3645              	# main_raytrace_termio.c:225:   alu_rslt = vec3_add(alu_rslt, vec3_scale(specular_light_intensity *
 3646 2800 13040500 		mv	s0,a0	# tmp516, tmp712
 3647              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3648 2804 13850900 		mv	a0,s3	#, tmp515
 3649 2808 97000000 		call	__mulsf3		#
 3649      E7800000 
 3650              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3651 2810 93050400 		mv	a1,s0	#, tmp516
 3652 2814 97000000 		call	__addsf3		#
 3652      E7800000 
 3653              	# main_raytrace_termio.c:226:   alu_rslt = vec3_add(alu_rslt, vec3_scale(material.albedo.z, reflect
 3654 281c 832A4114 		lw	s5,324(sp)		# _20, material.albedo.z
 3655              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3656 2820 8325410E 		lw	a1,228(sp)		#, reflect_color.x
 3657              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3658 2824 93040500 		mv	s1,a0	# tmp518, tmp713
 3659              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3660 2828 13850A00 		mv	a0,s5	#, _20
 3661 282c 97000000 		call	__mulsf3		#
 3661      E7800000 
 3662 2834 93050500 		mv	a1,a0	# tmp714,
 3663              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3664 2838 13850400 		mv	a0,s1	#, tmp518
 3665 283c 97000000 		call	__addsf3		#
 3665      E7800000 
 3666              	# main_raytrace_termio.c:227:   alu_rslt = vec3_add(alu_rslt, vec3_scale(material.albedo.w, refract
 3667 2844 032A8114 		lw	s4,328(sp)		# _21, material.albedo.w
 3668              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3669 2848 8325010F 		lw	a1,240(sp)		#, refract_color.x
 3670              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3671 284c 93040500 		mv	s1,a0	# tmp520, tmp715
 3672              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3673 2850 13050A00 		mv	a0,s4	#, _21
 3674 2854 97000000 		call	__mulsf3		#
 3674      E7800000 
 3675 285c 93050500 		mv	a1,a0	# tmp716,
 3676              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3677 2860 13850400 		mv	a0,s1	#, tmp520
 3678 2864 97000000 		call	__addsf3		#
 3678      E7800000 
 3679              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3680 286c 83250115 		lw	a1,336(sp)		#, material.diffuse_color.y
 3681              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3682 2870 13090500 		mv	s2,a0	# tmp717,
 3683              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3684 2874 13850900 		mv	a0,s3	#, tmp515
 3685 2878 97000000 		call	__mulsf3		#
 3685      E7800000 
 3686              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3687 2880 93050400 		mv	a1,s0	#, tmp516
 3688 2884 97000000 		call	__addsf3		#
 3688      E7800000 
 3689              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3690 288c 8325810E 		lw	a1,232(sp)		#, reflect_color.y
 3691              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3692 2890 93040500 		mv	s1,a0	# tmp524, tmp718
 3693              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3694 2894 13850A00 		mv	a0,s5	#, _20
 3695 2898 97000000 		call	__mulsf3		#
 3695      E7800000 
 3696 28a0 93050500 		mv	a1,a0	# tmp719,
 3697              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3698 28a4 13850400 		mv	a0,s1	#, tmp524
 3699 28a8 97000000 		call	__addsf3		#
 3699      E7800000 
 3700              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3701 28b0 8325410F 		lw	a1,244(sp)		#, refract_color.y
 3702              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3703 28b4 93040500 		mv	s1,a0	# tmp526, tmp720
 3704              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3705 28b8 13050A00 		mv	a0,s4	#, _21
 3706 28bc 97000000 		call	__mulsf3		#
 3706      E7800000 
 3707 28c4 93050500 		mv	a1,a0	# tmp721,
 3708              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3709 28c8 13850400 		mv	a0,s1	#, tmp526
 3710 28cc 97000000 		call	__addsf3		#
 3710      E7800000 
 3711              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3712 28d4 83254115 		lw	a1,340(sp)		#, material.diffuse_color.z
 3713              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3714 28d8 93040500 		mv	s1,a0	# tmp722,
 3715              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3716 28dc 13850900 		mv	a0,s3	#, tmp515
 3717 28e0 97000000 		call	__mulsf3		#
 3717      E7800000 
 3718              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3719 28e8 93050400 		mv	a1,s0	#, tmp516
 3720 28ec 97000000 		call	__addsf3		#
 3720      E7800000 
 3721              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3722 28f4 8325C10E 		lw	a1,236(sp)		#, reflect_color.z
 3723              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3724 28f8 13040500 		mv	s0,a0	# tmp530, tmp723
 3725              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3726 28fc 13850A00 		mv	a0,s5	#, _20
 3727 2900 97000000 		call	__mulsf3		#
 3727      E7800000 
 3728 2908 93050500 		mv	a1,a0	# tmp724,
 3729              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3730 290c 13050400 		mv	a0,s0	#, tmp530
 3731 2910 97000000 		call	__addsf3		#
 3731      E7800000 
 3732              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3733 2918 8325810F 		lw	a1,248(sp)		#, refract_color.z
 3734              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3735 291c 13040500 		mv	s0,a0	# tmp532, tmp725
 3736              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3737 2920 13050A00 		mv	a0,s4	#, _21
 3738 2924 97000000 		call	__mulsf3		#
 3738      E7800000 
 3739 292c 93050500 		mv	a1,a0	# tmp726,
 3740              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3741 2930 13050400 		mv	a0,s0	#, tmp532
 3742 2934 97000000 		call	__addsf3		#
 3742      E7800000 
 3743              	# main_raytrace_termio.c:228:   return alu_rslt;
 3744 293c 6FF04FA4 		j	.L335		#
 3745              	.L384:
 3746              	# main_raytrace_termio.c:170:   int Y = (int)y;
 3747 2940 13850400 		mv	a0,s1	#, def
 3748 2944 97000000 		call	__fixsfsi		#
 3748      E7800000 
 3749 294c 13090500 		mv	s2,a0	# Y, tmp703
 3750              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 3751 2950 93840900 		mv	s1,s3	# alu_rslt, _204
 3752              	# main_raytrace_termio.c:171:   while(Y > 2) {
 3753 2954 930A2000 		li	s5,2		# tmp510,
 3754              	# main_raytrace_termio.c:171:   while(Y > 2) {
 3755 2958 6F008005 		j	.L353		#
 3756              	.L355:
 3757              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 3758 295c 97000000 		call	__mulsf3		#
 3758      E7800000 
 3759 2964 93040500 		mv	s1,a0	# alu_rslt, tmp704
 3760              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3761 2968 97000000 		call	__extendsfdf2		#
 3761      E7800000 
 3762              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3763 2970 03260103 		lw	a2,48(sp)		#, %sfp
 3764 2974 83264103 		lw	a3,52(sp)		#, %sfp
 3765              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3766 2978 930B0500 		mv	s7,a0	# _231, tmp730
 3767 297c 138B0500 		mv	s6,a1	# _231, tmp731
 3768              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3769 2980 97000000 		call	__ltdf2		#
 3769      E7800000 
 3770 2988 93070500 		mv	a5,a0	# tmp706,
 3771              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3772 298c 03268103 		lw	a2,56(sp)		#, %sfp
 3773 2990 8326C103 		lw	a3,60(sp)		#, %sfp
 3774 2994 13850B00 		mv	a0,s7	# tmp732, _231
 3775 2998 93050B00 		mv	a1,s6	#, _231
 3776              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 3777 299c 13591940 		srai	s2,s2,1	#, Y, Y
 3778              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3779 29a0 63CA0702 		blt	a5,zero,.L354	#, tmp706,,
 3780              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 3781 29a4 97000000 		call	__gtdf2		#
 3781      E7800000 
 3782 29ac 6344A002 		bgt	a0,zero,.L354	#, tmp707,,
 3783              	.L353:
 3784              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 3785 29b0 93850400 		mv	a1,s1	#, alu_rslt
 3786 29b4 13850400 		mv	a0,s1	#, tmp11
 3787              	# main_raytrace_termio.c:171:   while(Y > 2) {
 3788 29b8 E3C22AFB 		bgt	s2,s5,.L355	#, Y, tmp510,
 3789              	# main_raytrace_termio.c:177:   while(Y > 1) {
 3790 29bc 631C5901 		bne	s2,s5,.L354	#, Y, tmp510,
 3791              	# main_raytrace_termio.c:178:     Y--; alu_rslt *= x;
 3792 29c0 13850400 		mv	a0,s1	#, alu_rslt
 3793 29c4 93850900 		mv	a1,s3	#, _204
 3794 29c8 97000000 		call	__mulsf3		#
 3794      E7800000 
 3795 29d0 93040500 		mv	s1,a0	# alu_rslt, tmp708
 3796              	.L354:
 3797              	# main_raytrace_termio.c:221:        specular_light_intensity += my_pow(abc,def)*lights[i].intensit
 3798 29d4 0325C101 		lw	a0,28(sp)		#, %sfp
 3799 29d8 93850400 		mv	a1,s1	#, alu_rslt
 3800 29dc 97000000 		call	__mulsf3		#
 3800      E7800000 
 3801 29e4 93050500 		mv	a1,a0	# tmp709,
 3802              	# main_raytrace_termio.c:221:        specular_light_intensity += my_pow(abc,def)*lights[i].intensit
 3803 29e8 0325C106 		lw	a0,108(sp)		#, %sfp
 3804 29ec 97000000 		call	__addsf3		#
 3804      E7800000 
 3805 29f4 2326A106 		sw	a0,108(sp)	# tmp710, %sfp
 3806 29f8 6FF09FA3 		j	.L348		#
 3807              	.L382:
 3808              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 3809 29fc 83258105 		lw	a1,88(sp)		#, %sfp
 3810 2a00 0325C101 		lw	a0,28(sp)		#, %sfp
 3811 2a04 97000000 		call	__subsf3		#
 3811      E7800000 
 3812 2a0c 83250106 		lw	a1,96(sp)		#, %sfp
 3813 2a10 93070500 		mv	a5,a0	# tmp633,
 3814 2a14 13850D00 		mv	a0,s11	#, pretmp_547
 3815 2a18 2326F100 		sw	a5,12(sp)	# _145, %sfp
 3816 2a1c 97000000 		call	__subsf3		#
 3816      E7800000 
 3817 2a24 8325C105 		lw	a1,92(sp)		#, %sfp
 3818 2a28 130D0500 		mv	s10,a0	# tmp634,
 3819 2a2c 13050C00 		mv	a0,s8	#, pretmp_549
 3820 2a30 97000000 		call	__subsf3		#
 3820      E7800000 
 3821 2a38 032EC100 		lw	t3,12(sp)		# _145, %sfp
 3822 2a3c 13030500 		mv	t1,a0	# _147, tmp635
 3823 2a40 6FF08FE5 		j	.L342		#
 3824              	.L359:
 3825              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 3826 2a44 93070000 		mv	a5,zero	# specular_light_intensity,
 3827 2a48 2326F106 		sw	a5,108(sp)	# specular_light_intensity, %sfp
 3828              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 3829 2a4c 2328F100 		sw	a5,16(sp)	# diffuse_light_intensity, %sfp
 3830 2a50 6FF09FD8 		j	.L343		#
 3832              		.align	2
 3834              	cast_ray.constprop.0:
 3835 2a54 130101E4 		addi	sp,sp,-448	#,,
 3836 2a58 2328211B 		sw	s2,432(sp)	#,
 3837 2a5c 13090600 		mv	s2,a2	# tmp271, tmp564
 3838 2a60 232E111A 		sw	ra,444(sp)	#,
 3839 2a64 83200900 		lw	ra,0(s2)		# dir$x, dir.x
 3840 2a68 232A911A 		sw	s1,436(sp)	#,
 3841              	# main_raytrace_termio.c:96:   return M;
 3842 2a6c B7040000 		lui	s1,%hi(.LC1)	# tmp534,
 3843              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 3844 2a70 2326311B 		sw	s3,428(sp)	#,
 3845 2a74 2324411B 		sw	s4,424(sp)	#,
 3846              	# main_raytrace_termio.c:96:   return M;
 3847 2a78 83A90400 		lw	s3,%lo(.LC1)(s1)		# tmp277,
 3848 2a7c 032A4900 		lw	s4,4(s2)		# dir$y, dir.y
 3849 2a80 23241104 		sw	ra,72(sp)	# dir$x, %sfp
 3850 2a84 83208900 		lw	ra,8(s2)		# dir$z, dir.z
 3851              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 3852 2a88 83AF0500 		lw	t6,0(a1)		# orig, orig
 3853 2a8c 03AF4500 		lw	t5,4(a1)		# orig, orig
 3854 2a90 83AE8500 		lw	t4,8(a1)		# orig, orig
 3855 2a94 032E0600 		lw	t3,0(a2)		# dir, dir
 3856 2a98 03234600 		lw	t1,4(a2)		# dir, dir
 3857 2a9c 83288600 		lw	a7,8(a2)		# dir, dir
 3858              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 3859 2aa0 93020800 		mv	t0,a6	# tmp568, nb_lights
 3860 2aa4 93030500 		mv	t2,a0	# tmp562, .result_ptr
 3861 2aa8 232C811A 		sw	s0,440(sp)	#,
 3862 2aac 2322511B 		sw	s5,420(sp)	#,
 3863 2ab0 2320611B 		sw	s6,416(sp)	#,
 3864 2ab4 232E7119 		sw	s7,412(sp)	#,
 3865 2ab8 232C8119 		sw	s8,408(sp)	#,
 3866 2abc 232A9119 		sw	s9,404(sp)	#,
 3867 2ac0 2328A119 		sw	s10,400(sp)	#,
 3868 2ac4 2326B119 		sw	s11,396(sp)	#,
 3869              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 3870 2ac8 232AD102 		sw	a3,52(sp)	# spheres, %sfp
 3871 2acc 232CE102 		sw	a4,56(sp)	# nb_spheres, %sfp
 3872 2ad0 232E5102 		sw	t0,60(sp)	# tmp568, %sfp
 3873 2ad4 13860600 		mv	a2,a3	# spheres, tmp565
 3874              	# main_raytrace_termio.c:96:   return M;
 3875 2ad8 93020000 		mv	t0,zero	# tmp745,
 3876              	# main_raytrace_termio.c:187: vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, L
 3877 2adc 93060700 		mv	a3,a4	# nb_spheres, tmp566
 3878 2ae0 13840700 		mv	s0,a5	# tmp567, lights
 3879 2ae4 23221104 		sw	ra,68(sp)	# dir$z, %sfp
 3880 2ae8 23204105 		sw	s4,64(sp)	# dir$y, %sfp
 3881 2aec 23247106 		sw	t2,104(sp)	# tmp562, %sfp
 3882              	# main_raytrace_termio.c:96:   return M;
 3883 2af0 232C3113 		sw	s3,312(sp)	# tmp277, material.refractive_index
 3884 2af4 232E3113 		sw	s3,316(sp)	# tmp277, material.albedo.x
 3885              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 3886 2af8 9307810A 		addi	a5,sp,168	#,,
 3887 2afc 13088113 		addi	a6,sp,312	#,,
 3888 2b00 1307C109 		addi	a4,sp,156	#,,
 3889 2b04 93050107 		addi	a1,sp,112	#,,
 3890 2b08 13050108 		addi	a0,sp,128	#, tmp741,
 3891              	# main_raytrace_termio.c:96:   return M;
 3892 2b0c 23205114 		sw	t0,320(sp)	# tmp745, material.albedo.y
 3893 2b10 23225114 		sw	t0,324(sp)	# tmp746, material.albedo.z
 3894 2b14 23245114 		sw	t0,328(sp)	# tmp747, material.albedo.w
 3895 2b18 23265114 		sw	t0,332(sp)	# tmp748, material.diffuse_color.x
 3896 2b1c 23285114 		sw	t0,336(sp)	# tmp749, material.diffuse_color.y
 3897 2b20 232A5114 		sw	t0,340(sp)	# tmp750, material.diffuse_color.z
 3898 2b24 232C5114 		sw	t0,344(sp)	# tmp751, material.specular_exponent
 3899              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 3900 2b28 2320F109 		sw	t6,128(sp)	# orig,
 3901 2b2c 2322E109 		sw	t5,132(sp)	# orig,
 3902 2b30 2324D109 		sw	t4,136(sp)	# orig,
 3903 2b34 2328C107 		sw	t3,112(sp)	# dir,
 3904 2b38 232A6106 		sw	t1,116(sp)	# dir,
 3905 2b3c 232C1107 		sw	a7,120(sp)	# dir,
 3906 2b40 97000000 		call	scene_intersect		#
 3906      E7800000 
 3907              	# main_raytrace_termio.c:190:   if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &po
 3908 2b48 63140512 		bne	a0,zero,.L386	#, tmp569,,
 3909              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 3910 2b4c 13050A00 		mv	a0,s4	#, dir$y
 3911 2b50 97000000 		call	__extendsfdf2		#
 3911      E7800000 
 3912              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 3913 2b58 B7070000 		lui	a5,%hi(.LC17)	# tmp292,
 3914 2b5c 03A60700 		lw	a2,%lo(.LC17)(a5)		#,
 3915 2b60 83A64700 		lw	a3,%lo(.LC17+4)(a5)		#,
 3916 2b64 97000000 		call	__adddf3		#
 3916      E7800000 
 3917              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 3918 2b6c B7070000 		lui	a5,%hi(.LC9)	# tmp294,
 3919 2b70 03A60700 		lw	a2,%lo(.LC9)(a5)		#,
 3920 2b74 83A64700 		lw	a3,%lo(.LC9+4)(a5)		#,
 3921 2b78 97000000 		call	__muldf3		#
 3921      E7800000 
 3922              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 3923 2b80 97000000 		call	__truncdfsf2		#
 3923      E7800000 
 3924              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3925 2b88 93050000 		mv	a1,zero	#,
 3926              	# main_raytrace_termio.c:191:     float s = 0.5*(dir.y + 1.0);
 3927 2b8c 13040500 		mv	s0,a0	# tmp296, tmp570
 3928              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3929 2b90 97000000 		call	__mulsf3		#
 3929      E7800000 
 3930 2b98 B7070000 		lui	a5,%hi(.LC12)	# tmp298,
 3931 2b9c 83A50700 		lw	a1,%lo(.LC12)(a5)		#,
 3932 2ba0 93040500 		mv	s1,a0	# tmp297, tmp571
 3933 2ba4 13050400 		mv	a0,s0	#, tmp296
 3934 2ba8 97000000 		call	__mulsf3		#
 3934      E7800000 
 3935              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3936 2bb0 93850400 		mv	a1,s1	#, tmp297
 3937 2bb4 97000000 		call	__addsf3		#
 3937      E7800000 
 3938              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3939 2bbc B7070000 		lui	a5,%hi(.LC18)	# tmp301,
 3940 2bc0 83A50700 		lw	a1,%lo(.LC18)(a5)		#,
 3941              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3942 2bc4 13090500 		mv	s2,a0	# tmp572,
 3943              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3944 2bc8 13050400 		mv	a0,s0	#, tmp296
 3945 2bcc 97000000 		call	__mulsf3		#
 3945      E7800000 
 3946              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3947 2bd4 93850400 		mv	a1,s1	#, tmp297
 3948 2bd8 97000000 		call	__addsf3		#
 3948      E7800000 
 3949              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3950 2be0 B7070000 		lui	a5,%hi(.LC20)	# tmp304,
 3951 2be4 83A50700 		lw	a1,%lo(.LC20)(a5)		#,
 3952              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3953 2be8 93040500 		mv	s1,a0	# tmp573,
 3954              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 3955 2bec 13050400 		mv	a0,s0	#, tmp296
 3956 2bf0 97000000 		call	__mulsf3		#
 3956      E7800000 
 3957 2bf8 B7070000 		lui	a5,%hi(.LC19)	# tmp306,
 3958 2bfc 83A50700 		lw	a1,%lo(.LC19)(a5)		#,
 3959 2c00 93090500 		mv	s3,a0	# tmp305, tmp574
 3960 2c04 13050400 		mv	a0,s0	#, tmp296
 3961 2c08 97000000 		call	__mulsf3		#
 3961      E7800000 
 3962 2c10 93050500 		mv	a1,a0	# tmp575,
 3963              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 3964 2c14 13850900 		mv	a0,s3	#, tmp305
 3965 2c18 97000000 		call	__addsf3		#
 3965      E7800000 
 3966              	.L387:
 3967              	# main_raytrace_termio.c:41:   return V;
 3968 2c20 83278106 		lw	a5,104(sp)		# .result_ptr, %sfp
 3969              	# main_raytrace_termio.c:229: }
 3970 2c24 8320C11B 		lw	ra,444(sp)		#,
 3971 2c28 0324811B 		lw	s0,440(sp)		#,
 3972              	# main_raytrace_termio.c:41:   return V;
 3973 2c2c 23A02701 		sw	s2,0(a5)	# _14, <retval>.x
 3974 2c30 23A29700 		sw	s1,4(a5)	# _15, <retval>.y
 3975 2c34 23A4A700 		sw	a0,8(a5)	# _16, <retval>.z
 3976              	# main_raytrace_termio.c:229: }
 3977 2c38 8324411B 		lw	s1,436(sp)		#,
 3978 2c3c 0329011B 		lw	s2,432(sp)		#,
 3979 2c40 8329C11A 		lw	s3,428(sp)		#,
 3980 2c44 032A811A 		lw	s4,424(sp)		#,
 3981 2c48 832A411A 		lw	s5,420(sp)		#,
 3982 2c4c 032B011A 		lw	s6,416(sp)		#,
 3983 2c50 832BC119 		lw	s7,412(sp)		#,
 3984 2c54 032C8119 		lw	s8,408(sp)		#,
 3985 2c58 832C4119 		lw	s9,404(sp)		#,
 3986 2c5c 032D0119 		lw	s10,400(sp)		#,
 3987 2c60 832DC118 		lw	s11,396(sp)		#,
 3988 2c64 13850700 		mv	a0,a5	#, .result_ptr
 3989 2c68 1301011C 		addi	sp,sp,448	#,,
 3990 2c6c 67800000 		jr	ra		#
 3991              	.L386:
 3992 2c70 032D810A 		lw	s10,168(sp)		# N$x, N.x
 3993              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 3994 2c74 832B8104 		lw	s7,72(sp)		# dir$x, %sfp
 3995 2c78 832DC10A 		lw	s11,172(sp)		# N$y, N.y
 3996 2c7c 13050D00 		mv	a0,s10	#, N$x
 3997 2c80 93850B00 		mv	a1,s7	#, dir$x
 3998 2c84 97000000 		call	__mulsf3		#
 3998      E7800000 
 3999              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4000 2c8c 032B0104 		lw	s6,64(sp)		# dir$y, %sfp
 4001              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4002 2c90 130A0500 		mv	s4,a0	# tmp309, tmp577
 4003              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4004 2c94 93850D00 		mv	a1,s11	#, N$y
 4005 2c98 13050B00 		mv	a0,s6	#, dir$y
 4006 2c9c 97000000 		call	__mulsf3		#
 4006      E7800000 
 4007 2ca4 93050500 		mv	a1,a0	# tmp578,
 4008              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4009 2ca8 13050A00 		mv	a0,s4	#, tmp309
 4010 2cac 97000000 		call	__addsf3		#
 4010      E7800000 
 4011 2cb4 832A010B 		lw	s5,176(sp)		# N$z, N.z
 4012              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4013 2cb8 032C4104 		lw	s8,68(sp)		# dir$z, %sfp
 4014              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4015 2cbc 130A0500 		mv	s4,a0	# tmp311, tmp579
 4016              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4017 2cc0 13850A00 		mv	a0,s5	#, N$z
 4018 2cc4 93050C00 		mv	a1,s8	#, dir$z
 4019 2cc8 97000000 		call	__mulsf3		#
 4019      E7800000 
 4020 2cd0 93050500 		mv	a1,a0	# tmp580,
 4021              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4022 2cd4 13050A00 		mv	a0,s4	#, tmp311
 4023 2cd8 97000000 		call	__addsf3		#
 4023      E7800000 
 4024 2ce0 93050500 		mv	a1,a0	# tmp581,
 4025              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 4026 2ce4 97000000 		call	__addsf3		#
 4026      E7800000 
 4027 2cec 130A0500 		mv	s4,a0	# tmp314, tmp582
 4028              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4029 2cf0 93050500 		mv	a1,a0	#, tmp314
 4030 2cf4 13050D00 		mv	a0,s10	#, N$x
 4031 2cf8 97000000 		call	__mulsf3		#
 4031      E7800000 
 4032 2d00 93050500 		mv	a1,a0	# tmp583,
 4033              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4034 2d04 13850B00 		mv	a0,s7	#, dir$x
 4035 2d08 97000000 		call	__subsf3		#
 4035      E7800000 
 4036 2d10 930B0500 		mv	s7,a0	# tmp584,
 4037              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4038 2d14 93050A00 		mv	a1,s4	#, tmp314
 4039 2d18 13850D00 		mv	a0,s11	#, N$y
 4040 2d1c 97000000 		call	__mulsf3		#
 4040      E7800000 
 4041 2d24 93050500 		mv	a1,a0	# tmp585,
 4042              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4043 2d28 13050B00 		mv	a0,s6	#, dir$y
 4044 2d2c 97000000 		call	__subsf3		#
 4044      E7800000 
 4045 2d34 130B0500 		mv	s6,a0	# tmp586,
 4046              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4047 2d38 93050A00 		mv	a1,s4	#, tmp314
 4048 2d3c 13850A00 		mv	a0,s5	#, N$z
 4049 2d40 23265105 		sw	s5,76(sp)	# N$z, %sfp
 4050 2d44 97000000 		call	__mulsf3		#
 4050      E7800000 
 4051 2d4c 93050500 		mv	a1,a0	# tmp587,
 4052              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4053 2d50 13050C00 		mv	a0,s8	#, dir$z
 4054 2d54 97000000 		call	__subsf3		#
 4054      E7800000 
 4055 2d5c 130A0500 		mv	s4,a0	# tmp588,
 4056              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4057 2d60 93850B00 		mv	a1,s7	#, tmp316
 4058 2d64 13850B00 		mv	a0,s7	#, tmp316
 4059 2d68 97000000 		call	__mulsf3		#
 4059      E7800000 
 4060 2d70 930A0500 		mv	s5,a0	# tmp321, tmp589
 4061              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4062 2d74 93050B00 		mv	a1,s6	#, tmp318
 4063 2d78 13050B00 		mv	a0,s6	#, tmp318
 4064 2d7c 97000000 		call	__mulsf3		#
 4064      E7800000 
 4065 2d84 93050500 		mv	a1,a0	# tmp590,
 4066              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4067 2d88 13850A00 		mv	a0,s5	#, tmp321
 4068 2d8c 97000000 		call	__addsf3		#
 4068      E7800000 
 4069 2d94 930A0500 		mv	s5,a0	# tmp323, tmp591
 4070              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4071 2d98 93050A00 		mv	a1,s4	#, tmp320
 4072 2d9c 13050A00 		mv	a0,s4	#, tmp320
 4073 2da0 97000000 		call	__mulsf3		#
 4073      E7800000 
 4074 2da8 93050500 		mv	a1,a0	# tmp592,
 4075              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4076 2dac 13850A00 		mv	a0,s5	#, tmp323
 4077 2db0 97000000 		call	__addsf3		#
 4077      E7800000 
 4078 2db8 97000000 		call	sqrtf		#
 4078      E7800000 
 4079 2dc0 93050500 		mv	a1,a0	# tmp593,
 4080              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 4081 2dc4 13850900 		mv	a0,s3	#, tmp277
 4082 2dc8 97000000 		call	__divsf3		#
 4082      E7800000 
 4083 2dd0 930A0500 		mv	s5,a0	# tmp327, tmp594
 4084              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4085 2dd4 93050500 		mv	a1,a0	#, tmp327
 4086 2dd8 13850B00 		mv	a0,s7	#, tmp316
 4087 2ddc 97000000 		call	__mulsf3		#
 4087      E7800000 
 4088 2de4 93850A00 		mv	a1,s5	#, tmp327
 4089 2de8 930B0500 		mv	s7,a0	# tmp595,
 4090 2dec 13050B00 		mv	a0,s6	#, tmp318
 4091 2df0 97000000 		call	__mulsf3		#
 4091      E7800000 
 4092 2df8 93850A00 		mv	a1,s5	#, tmp327
 4093 2dfc 130B0500 		mv	s6,a0	# tmp596,
 4094 2e00 13050A00 		mv	a0,s4	#, tmp320
 4095 2e04 97000000 		call	__mulsf3		#
 4095      E7800000 
 4096              	# main_raytrace_termio.c:196:   vec3 refract_dir = vec3_normalize(refract(dir, N, material.refracti
 4097 2e0c 83278900 		lw	a5,8(s2)		# dir, dir
 4098 2e10 83280900 		lw	a7,0(s2)		# dir, dir
 4099 2e14 03284900 		lw	a6,4(s2)		# dir, dir
 4100 2e18 2324F108 		sw	a5,136(sp)	# dir,
 4101 2e1c 8327810A 		lw	a5,168(sp)		# N, N
 4102 2e20 83268113 		lw	a3,312(sp)		#, material.refractive_index
 4103 2e24 13870900 		mv	a4,s3	#, tmp277
 4104 2e28 2328F106 		sw	a5,112(sp)	# N,
 4105 2e2c 8327C10A 		lw	a5,172(sp)		# N, N
 4106 2e30 13060107 		addi	a2,sp,112	#,,
 4107              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4108 2e34 930A0500 		mv	s5,a0	# tmp597,
 4109              	# main_raytrace_termio.c:196:   vec3 refract_dir = vec3_normalize(refract(dir, N, material.refracti
 4110 2e38 232AF106 		sw	a5,116(sp)	# N,
 4111 2e3c 8327010B 		lw	a5,176(sp)		# N, N
 4112 2e40 93050108 		addi	a1,sp,128	#, tmp755,
 4113 2e44 1305C112 		addi	a0,sp,300	#,,
 4114 2e48 23201109 		sw	a7,128(sp)	# dir,
 4115 2e4c 23220109 		sw	a6,132(sp)	# dir,
 4116 2e50 232CF106 		sw	a5,120(sp)	# N,
 4117 2e54 97000000 		call	refract		#
 4117      E7800000 
 4118 2e5c 032AC112 		lw	s4,300(sp)		# U$x, D.4151.x
 4119 2e60 832C0113 		lw	s9,304(sp)		# U$y, D.4151.y
 4120 2e64 032C4113 		lw	s8,308(sp)		# U$z, D.4151.z
 4121              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4122 2e68 93050A00 		mv	a1,s4	#, U$x
 4123 2e6c 13050A00 		mv	a0,s4	#, U$x
 4124 2e70 97000000 		call	__mulsf3		#
 4124      E7800000 
 4125 2e78 13090500 		mv	s2,a0	# tmp343, tmp598
 4126              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4127 2e7c 93850C00 		mv	a1,s9	#, U$y
 4128 2e80 13850C00 		mv	a0,s9	#, U$y
 4129 2e84 97000000 		call	__mulsf3		#
 4129      E7800000 
 4130 2e8c 93050500 		mv	a1,a0	# tmp599,
 4131              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4132 2e90 13050900 		mv	a0,s2	#, tmp343
 4133 2e94 97000000 		call	__addsf3		#
 4133      E7800000 
 4134 2e9c 13090500 		mv	s2,a0	# tmp345, tmp600
 4135              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4136 2ea0 93050C00 		mv	a1,s8	#, U$z
 4137 2ea4 13050C00 		mv	a0,s8	#, U$z
 4138 2ea8 97000000 		call	__mulsf3		#
 4138      E7800000 
 4139 2eb0 93050500 		mv	a1,a0	# tmp601,
 4140              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4141 2eb4 13050900 		mv	a0,s2	#, tmp345
 4142 2eb8 97000000 		call	__addsf3		#
 4142      E7800000 
 4143 2ec0 97000000 		call	sqrtf		#
 4143      E7800000 
 4144 2ec8 93050500 		mv	a1,a0	# tmp602,
 4145              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 4146 2ecc 13850900 		mv	a0,s3	#, tmp277
 4147 2ed0 97000000 		call	__divsf3		#
 4147      E7800000 
 4148 2ed8 13090500 		mv	s2,a0	# tmp349, tmp603
 4149              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4150 2edc 93050500 		mv	a1,a0	#, tmp349
 4151 2ee0 13050A00 		mv	a0,s4	#, U$x
 4152 2ee4 97000000 		call	__mulsf3		#
 4152      E7800000 
 4153 2eec 93050900 		mv	a1,s2	#, tmp349
 4154 2ef0 130A0500 		mv	s4,a0	# tmp604,
 4155 2ef4 13850C00 		mv	a0,s9	#, U$y
 4156 2ef8 97000000 		call	__mulsf3		#
 4156      E7800000 
 4157 2f00 93050900 		mv	a1,s2	#, tmp349
 4158 2f04 93090500 		mv	s3,a0	# tmp605,
 4159 2f08 13050C00 		mv	a0,s8	#, U$z
 4160 2f0c 97000000 		call	__mulsf3		#
 4160      E7800000 
 4161              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4162 2f14 93850B00 		mv	a1,s7	#, _41
 4163              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4164 2f18 13090500 		mv	s2,a0	# tmp606,
 4165              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4166 2f1c 13050D00 		mv	a0,s10	#, N$x
 4167 2f20 2328A105 		sw	s10,80(sp)	# N$x, %sfp
 4168 2f24 97000000 		call	__mulsf3		#
 4168      E7800000 
 4169 2f2c 130C0500 		mv	s8,a0	# tmp353, tmp607
 4170              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4171 2f30 93050B00 		mv	a1,s6	#, _42
 4172 2f34 13850D00 		mv	a0,s11	#, N$y
 4173 2f38 232AB105 		sw	s11,84(sp)	# N$y, %sfp
 4174 2f3c 97000000 		call	__mulsf3		#
 4174      E7800000 
 4175 2f44 93050500 		mv	a1,a0	# tmp608,
 4176              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4177 2f48 13050C00 		mv	a0,s8	#, tmp353
 4178 2f4c 97000000 		call	__addsf3		#
 4178      E7800000 
 4179 2f54 130C0500 		mv	s8,a0	# tmp355, tmp609
 4180              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4181 2f58 0325C104 		lw	a0,76(sp)		#, %sfp
 4182 2f5c 93850A00 		mv	a1,s5	#, _43
 4183              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4184 2f60 B70C0000 		lui	s9,%hi(.LC21)	# tmp359,
 4185              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4186 2f64 97000000 		call	__mulsf3		#
 4186      E7800000 
 4187 2f6c 93050500 		mv	a1,a0	# tmp610,
 4188              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4189 2f70 13050C00 		mv	a0,s8	#, tmp355
 4190 2f74 97000000 		call	__addsf3		#
 4190      E7800000 
 4191              	# main_raytrace_termio.c:198:   vec3 reflect_orig = vec3_dot(reflect_dir,N) < 0 ? vec3_sub(point,ve
 4192 2f7c 93050000 		mv	a1,zero	#,
 4193 2f80 97000000 		call	__ltsf2		#
 4193      E7800000 
 4194              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4195 2f88 83A50C00 		lw	a1,%lo(.LC21)(s9)		#,
 4196 2f8c 832DC109 		lw	s11,156(sp)		# pretmp_498, point.x
 4197 2f90 032D010A 		lw	s10,160(sp)		# pretmp_499, point.y
 4198 2f94 032C410A 		lw	s8,164(sp)		# pretmp_500, point.z
 4199              	# main_raytrace_termio.c:198:   vec3 reflect_orig = vec3_dot(reflect_dir,N) < 0 ? vec3_sub(point,ve
 4200 2f98 63440572 		blt	a0,zero,.L429	#, tmp611,,
 4201              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4202 2f9c 03250105 		lw	a0,80(sp)		#, %sfp
 4203 2fa0 97000000 		call	__mulsf3		#
 4203      E7800000 
 4204 2fa8 93070500 		mv	a5,a0	# tmp618,
 4205 2fac 83A50C00 		lw	a1,%lo(.LC21)(s9)		#,
 4206 2fb0 03254105 		lw	a0,84(sp)		#, %sfp
 4207 2fb4 232CF104 		sw	a5,88(sp)	# tmp618, %sfp
 4208 2fb8 97000000 		call	__mulsf3		#
 4208      E7800000 
 4209 2fc0 93070500 		mv	a5,a0	# tmp619,
 4210 2fc4 83A50C00 		lw	a1,%lo(.LC21)(s9)		#,
 4211 2fc8 0325C104 		lw	a0,76(sp)		#, %sfp
 4212 2fcc 938C0700 		mv	s9,a5	# _73, tmp619
 4213 2fd0 2320F106 		sw	a5,96(sp)	# _73, %sfp
 4214 2fd4 97000000 		call	__mulsf3		#
 4214      E7800000 
 4215 2fdc 93070500 		mv	a5,a0	# tmp620,
 4216              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4217 2fe0 03258105 		lw	a0,88(sp)		#, %sfp
 4218 2fe4 93850D00 		mv	a1,s11	#, pretmp_498
 4219              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4220 2fe8 232EF104 		sw	a5,92(sp)	# tmp620, %sfp
 4221              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4222 2fec 97000000 		call	__addsf3		#
 4222      E7800000 
 4223 2ff4 93070500 		mv	a5,a0	# tmp621,
 4224 2ff8 93050D00 		mv	a1,s10	#, pretmp_499
 4225 2ffc 13850C00 		mv	a0,s9	#, _73
 4226 3000 2326F100 		sw	a5,12(sp)	# _78, %sfp
 4227 3004 97000000 		call	__addsf3		#
 4227      E7800000 
 4228 300c 930C0500 		mv	s9,a0	# tmp622,
 4229 3010 0325C105 		lw	a0,92(sp)		#, %sfp
 4230 3014 93050C00 		mv	a1,s8	#, pretmp_500
 4231 3018 97000000 		call	__addsf3		#
 4231      E7800000 
 4232 3020 0327C100 		lw	a4,12(sp)		# _78, %sfp
 4233 3024 93070500 		mv	a5,a0	# _80, tmp623
 4234              	.L390:
 4235              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4236 3028 03250105 		lw	a0,80(sp)		#, %sfp
 4237 302c 93050A00 		mv	a1,s4	#, _55
 4238              	# main_raytrace_termio.c:41:   return V;
 4239 3030 2326E10C 		sw	a4,204(sp)	# _78, reflect_orig.x
 4240 3034 232AF10C 		sw	a5,212(sp)	# _80, reflect_orig.z
 4241 3038 2328910D 		sw	s9,208(sp)	# _79, reflect_orig.y
 4242              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4243 303c 97000000 		call	__mulsf3		#
 4243      E7800000 
 4244 3044 930C0500 		mv	s9,a0	# tmp377, tmp624
 4245              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4246 3048 03254105 		lw	a0,84(sp)		#, %sfp
 4247 304c 93850900 		mv	a1,s3	#, _56
 4248 3050 97000000 		call	__mulsf3		#
 4248      E7800000 
 4249 3058 93050500 		mv	a1,a0	# tmp625,
 4250              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4251 305c 13850C00 		mv	a0,s9	#, tmp377
 4252 3060 97000000 		call	__addsf3		#
 4252      E7800000 
 4253 3068 930C0500 		mv	s9,a0	# tmp379, tmp626
 4254              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4255 306c 0325C104 		lw	a0,76(sp)		#, %sfp
 4256 3070 93050900 		mv	a1,s2	#, _57
 4257 3074 97000000 		call	__mulsf3		#
 4257      E7800000 
 4258 307c 93050500 		mv	a1,a0	# tmp627,
 4259              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4260 3080 13850C00 		mv	a0,s9	#, tmp379
 4261 3084 97000000 		call	__addsf3		#
 4261      E7800000 
 4262              	# main_raytrace_termio.c:199:   vec3 refract_orig = vec3_dot(refract_dir,N) < 0 ? vec3_sub(point,ve
 4263 308c 93050000 		mv	a1,zero	#,
 4264 3090 97000000 		call	__ltsf2		#
 4264      E7800000 
 4265 3098 E346051A 		blt	a0,zero,.L430	#, tmp628,,
 4266              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4267 309c 03258105 		lw	a0,88(sp)		#, %sfp
 4268 30a0 93850D00 		mv	a1,s11	#, pretmp_498
 4269 30a4 97000000 		call	__addsf3		#
 4269      E7800000 
 4270 30ac 93070500 		mv	a5,a0	# tmp632,
 4271 30b0 03250106 		lw	a0,96(sp)		#, %sfp
 4272 30b4 93050D00 		mv	a1,s10	#, pretmp_499
 4273 30b8 2326F100 		sw	a5,12(sp)	# _101, %sfp
 4274 30bc 97000000 		call	__addsf3		#
 4274      E7800000 
 4275 30c4 930C0500 		mv	s9,a0	# tmp633,
 4276 30c8 0325C105 		lw	a0,92(sp)		#, %sfp
 4277 30cc 93050C00 		mv	a1,s8	#, pretmp_500
 4278 30d0 97000000 		call	__addsf3		#
 4278      E7800000 
 4279 30d8 032EC100 		lw	t3,12(sp)		# _101, %sfp
 4280 30dc 13030500 		mv	t1,a0	# _103, tmp634
 4281              	.L393:
 4282              	# main_raytrace_termio.c:41:   return V;
 4283 30e0 2320610E 		sw	t1,224(sp)	# _103, refract_orig.z
 4284              	# main_raytrace_termio.c:200:   vec3 reflect_color = cast_ray(reflect_orig, reflect_dir, spheres, n
 4285 30e4 0323C10C 		lw	t1,204(sp)		# reflect_orig, reflect_orig
 4286 30e8 0328C103 		lw	a6,60(sp)		#, %sfp
 4287 30ec 03278103 		lw	a4,56(sp)		#, %sfp
 4288 30f0 23206108 		sw	t1,128(sp)	# reflect_orig,
 4289 30f4 0323010D 		lw	t1,208(sp)		# reflect_orig, reflect_orig
 4290 30f8 83264103 		lw	a3,52(sp)		#, %sfp
 4291 30fc 93081000 		li	a7,1		#,
 4292 3100 23226108 		sw	t1,132(sp)	# reflect_orig,
 4293 3104 0323410D 		lw	t1,212(sp)		# reflect_orig, reflect_orig
 4294 3108 93070400 		mv	a5,s0	#, lights
 4295 310c 13060107 		addi	a2,sp,112	#,,
 4296 3110 93050108 		addi	a1,sp,128	#, tmp756,
 4297 3114 1305410E 		addi	a0,sp,228	#,,
 4298 3118 232E510B 		sw	s5,188(sp)	# _43, reflect_dir.z
 4299 311c 23246108 		sw	t1,136(sp)	# reflect_orig,
 4300 3120 232C5107 		sw	s5,120(sp)	# _43,
 4301              	# main_raytrace_termio.c:41:   return V;
 4302 3124 232CC10D 		sw	t3,216(sp)	# _101, refract_orig.x
 4303 3128 232E910D 		sw	s9,220(sp)	# _102, refract_orig.y
 4304              	# main_raytrace_termio.c:200:   vec3 reflect_color = cast_ray(reflect_orig, reflect_dir, spheres, n
 4305 312c 232A710B 		sw	s7,180(sp)	# _41, reflect_dir.x
 4306 3130 232C610B 		sw	s6,184(sp)	# _42, reflect_dir.y
 4307 3134 23287107 		sw	s7,112(sp)	# _41,
 4308 3138 232A6107 		sw	s6,116(sp)	# _42,
 4309 313c 97000000 		call	cast_ray		#
 4309      E7800000 
 4310              	# main_raytrace_termio.c:201:   vec3 refract_color = cast_ray(refract_orig, refract_dir, spheres, n
 4311 3144 0323810D 		lw	t1,216(sp)		# refract_orig, refract_orig
 4312 3148 832AC103 		lw	s5,60(sp)		# nb_lights, %sfp
 4313 314c 03278103 		lw	a4,56(sp)		#, %sfp
 4314 3150 23206108 		sw	t1,128(sp)	# refract_orig,
 4315 3154 0323C10D 		lw	t1,220(sp)		# refract_orig, refract_orig
 4316 3158 83264103 		lw	a3,52(sp)		#, %sfp
 4317 315c 93081000 		li	a7,1		#,
 4318 3160 23226108 		sw	t1,132(sp)	# refract_orig,
 4319 3164 0323010E 		lw	t1,224(sp)		# refract_orig, refract_orig
 4320 3168 13880A00 		mv	a6,s5	#, nb_lights
 4321 316c 93070400 		mv	a5,s0	#, lights
 4322 3170 13060107 		addi	a2,sp,112	#,,
 4323 3174 93050108 		addi	a1,sp,128	#, tmp757,
 4324 3178 1305010F 		addi	a0,sp,240	#,,
 4325 317c 2320410D 		sw	s4,192(sp)	# _55, refract_dir.x
 4326 3180 2322310D 		sw	s3,196(sp)	# _56, refract_dir.y
 4327 3184 2324210D 		sw	s2,200(sp)	# _57, refract_dir.z
 4328 3188 23246108 		sw	t1,136(sp)	# refract_orig,
 4329 318c 23284107 		sw	s4,112(sp)	# _55,
 4330 3190 232A3107 		sw	s3,116(sp)	# _56,
 4331 3194 232C2107 		sw	s2,120(sp)	# _57,
 4332 3198 97000000 		call	cast_ray		#
 4332      E7800000 
 4333              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4334 31a0 E356500F 		ble	s5,zero,.L410	#, nb_lights,,
 4335              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 4336 31a4 83A70400 		lw	a5,%lo(.LC1)(s1)		# tmp542,
 4337              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4338 31a8 23260100 		sw	zero,12(sp)	#, %sfp
 4339              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 4340 31ac 370A0080 		li	s4,-2147483648		# tmp543,
 4341              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 4342 31b0 2322F106 		sw	a5,100(sp)	# tmp542, %sfp
 4343              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4344 31b4 B7070000 		lui	a5,%hi(.LC15)	# tmp544,
 4345 31b8 03A84700 		lw	a6,%lo(.LC15+4)(a5)		#,
 4346 31bc 83A70700 		lw	a5,%lo(.LC15)(a5)		# tmp545,
 4347 31c0 23220103 		sw	a6,36(sp)	#, %sfp
 4348 31c4 2320F102 		sw	a5,32(sp)	# tmp545, %sfp
 4349              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4350 31c8 B7070000 		lui	a5,%hi(.LC16)	# tmp546,
 4351 31cc 03A84700 		lw	a6,%lo(.LC16+4)(a5)		#,
 4352 31d0 83A70700 		lw	a5,%lo(.LC16)(a5)		# tmp547,
 4353 31d4 23260103 		sw	a6,44(sp)	#, %sfp
 4354 31d8 2324F102 		sw	a5,40(sp)	# tmp547, %sfp
 4355              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 4356 31dc 93070000 		mv	a5,zero	# specular_light_intensity,
 4357 31e0 2326F106 		sw	a5,108(sp)	# specular_light_intensity, %sfp
 4358              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 4359 31e4 2328F100 		sw	a5,16(sp)	# diffuse_light_intensity, %sfp
 4360 31e8 6F00402A 		j	.L409		#
 4361              	.L423:
 4362              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4363 31ec 03258105 		lw	a0,88(sp)		#, %sfp
 4364 31f0 93850D00 		mv	a1,s11	#, pretmp_498
 4365 31f4 97000000 		call	__addsf3		#
 4365      E7800000 
 4366 31fc 130B0500 		mv	s6,a0	# tmp663,
 4367 3200 03250106 		lw	a0,96(sp)		#, %sfp
 4368 3204 93050D00 		mv	a1,s10	#, pretmp_499
 4369 3208 97000000 		call	__addsf3		#
 4369      E7800000 
 4370 3210 930A0500 		mv	s5,a0	# tmp664,
 4371 3214 0325C105 		lw	a0,92(sp)		#, %sfp
 4372 3218 93050C00 		mv	a1,s8	#, pretmp_500
 4373 321c 97000000 		call	__addsf3		#
 4373      E7800000 
 4374 3224 930C0500 		mv	s9,a0	# shadow_orig$z, tmp665
 4375              	.L397:
 4376              	# main_raytrace_termio.c:212:     if (scene_intersect(shadow_orig, light_dir, spheres, nb_spheres, 
 4377 3228 83268103 		lw	a3,56(sp)		#, %sfp
 4378 322c 03264103 		lw	a2,52(sp)		#, %sfp
 4379 3230 1308C115 		addi	a6,sp,348	#, tmp764,
 4380 3234 93070112 		addi	a5,sp,288	#, tmp765,
 4381 3238 13074111 		addi	a4,sp,276	#, tmp766,
 4382 323c 93050107 		addi	a1,sp,112	#,,
 4383 3240 13050108 		addi	a0,sp,128	#, tmp767,
 4384 3244 23246111 		sw	s6,264(sp)	# shadow_orig$x, shadow_orig.x
 4385 3248 23265111 		sw	s5,268(sp)	# shadow_orig$y, shadow_orig.y
 4386 324c 23289111 		sw	s9,272(sp)	# shadow_orig$z, shadow_orig.z
 4387 3250 232E310F 		sw	s3,252(sp)	# _127, light_dir.x
 4388 3254 23202111 		sw	s2,256(sp)	# _128, light_dir.y
 4389 3258 23229110 		sw	s1,260(sp)	# _129, light_dir.z
 4390 325c 23206109 		sw	s6,128(sp)	# shadow_orig$x,
 4391 3260 23225109 		sw	s5,132(sp)	# shadow_orig$y,
 4392 3264 23249109 		sw	s9,136(sp)	# shadow_orig$z,
 4393 3268 23283107 		sw	s3,112(sp)	# _127,
 4394 326c 232A2107 		sw	s2,116(sp)	# _128,
 4395 3270 232C9106 		sw	s1,120(sp)	# _129,
 4396 3274 97000000 		call	scene_intersect		#
 4396      E7800000 
 4397              	# main_raytrace_termio.c:212:     if (scene_intersect(shadow_orig, light_dir, spheres, nb_spheres, 
 4398 327c 631A054C 		bne	a0,zero,.L431	#, tmp666,,
 4399              	.L398:
 4400 3280 0327810A 		lw	a4,168(sp)		# V$x, N.x
 4401 3284 832AC10A 		lw	s5,172(sp)		# V$y, N.y
 4402              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4403 3288 13850900 		mv	a0,s3	#, _127
 4404 328c 93050700 		mv	a1,a4	#, V$x
 4405 3290 2328E102 		sw	a4,48(sp)	# V$x, %sfp
 4406 3294 232C5101 		sw	s5,24(sp)	# V$y, %sfp
 4407 3298 97000000 		call	__mulsf3		#
 4407      E7800000 
 4408 32a0 832C010B 		lw	s9,176(sp)		# V$z, N.z
 4409              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4410 32a4 93850A00 		mv	a1,s5	#, V$y
 4411              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4412 32a8 130B0500 		mv	s6,a0	# tmp676,
 4413              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4414 32ac 13050900 		mv	a0,s2	#, _128
 4415 32b0 97000000 		call	__mulsf3		#
 4415      E7800000 
 4416 32b8 930B0500 		mv	s7,a0	# tmp677,
 4417              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4418 32bc 93850C00 		mv	a1,s9	#, V$z
 4419 32c0 13850400 		mv	a0,s1	#, _129
 4420 32c4 97000000 		call	__mulsf3		#
 4420      E7800000 
 4421 32cc 930A0500 		mv	s5,a0	# _182, tmp678
 4422              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4423 32d0 93850B00 		mv	a1,s7	#, _180
 4424 32d4 13050B00 		mv	a0,s6	#, _179
 4425 32d8 97000000 		call	__addsf3		#
 4425      E7800000 
 4426              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4427 32e0 93850A00 		mv	a1,s5	#, _182
 4428 32e4 97000000 		call	__addsf3		#
 4428      E7800000 
 4429              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 4430 32ec 93050000 		mv	a1,zero	#,
 4431              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4432 32f0 232EA100 		sw	a0,28(sp)	# _183, %sfp
 4433              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 4434 32f4 97000000 		call	__ltsf2		#
 4434      E7800000 
 4435              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 4436 32fc 8327C400 		lw	a5,12(s0)		# _175, MEM[(float *)_292 + 12B]
 4437              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 4438 3300 03270103 		lw	a4,48(sp)		# V$x, %sfp
 4439              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 4440 3304 232AF100 		sw	a5,20(sp)	# _175, %sfp
 4441              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 4442 3308 8327C101 		lw	a5,28(sp)		# _183, %sfp
 4443 330c 63540500 		bge	a0,zero,.L400	#, tmp680,,
 4444 3310 93070000 		mv	a5,zero	# _183,
 4445              	.L400:
 4446              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 4447 3314 03254101 		lw	a0,20(sp)		#, %sfp
 4448 3318 93850700 		mv	a1,a5	#, _183
 4449 331c 232EE100 		sw	a4,28(sp)	# V$x, %sfp
 4450 3320 97000000 		call	__mulsf3		#
 4450      E7800000 
 4451 3328 93050500 		mv	a1,a0	# tmp681,
 4452              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 4453 332c 03250101 		lw	a0,16(sp)		#, %sfp
 4454              	# main_raytrace_termio.c:50: static inline vec3 vec3_neg(vec3 V)            { return make_vec3(-V.x
 4455 3330 B3493A01 		xor	s3,s4,s3	# _127, tmp473, tmp543
 4456 3334 33492A01 		xor	s2,s4,s2	# _128, tmp480, tmp543
 4457              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 4458 3338 97000000 		call	__addsf3		#
 4458      E7800000 
 4459 3340 93070500 		mv	a5,a0	# tmp682,
 4460              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 4461 3344 93850B00 		mv	a1,s7	#, _180
 4462 3348 33456A01 		xor	a0,s4,s6	# _179,, tmp543
 4463              	# main_raytrace_termio.c:216:     diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_d
 4464 334c 2328F100 		sw	a5,16(sp)	# tmp682, %sfp
 4465              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 4466 3350 97000000 		call	__subsf3		#
 4466      E7800000 
 4467 3358 93850A00 		mv	a1,s5	#, _182
 4468 335c 97000000 		call	__subsf3		#
 4468      E7800000 
 4469 3364 93050500 		mv	a1,a0	# tmp683,
 4470 3368 97000000 		call	__addsf3		#
 4470      E7800000 
 4471              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4472 3370 0327C101 		lw	a4,28(sp)		# V$x, %sfp
 4473              	# main_raytrace_termio.c:129: vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3
 4474 3374 930A0500 		mv	s5,a0	# tmp472, tmp684
 4475              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4476 3378 93050500 		mv	a1,a0	#, tmp472
 4477 337c 13050700 		mv	a0,a4	#, V$x
 4478 3380 97000000 		call	__mulsf3		#
 4478      E7800000 
 4479 3388 93050500 		mv	a1,a0	# tmp685,
 4480              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4481 338c 13850900 		mv	a0,s3	#, tmp473
 4482 3390 97000000 		call	__subsf3		#
 4482      E7800000 
 4483              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4484 3398 83258104 		lw	a1,72(sp)		#, %sfp
 4485 339c 3345AA00 		xor	a0,s4,a0	# tmp686,, tmp543
 4486              	# main_raytrace_termio.c:50: static inline vec3 vec3_neg(vec3 V)            { return make_vec3(-V.x
 4487 33a0 B3449A00 		xor	s1,s4,s1	# _129, tmp488, tmp543
 4488              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4489 33a4 97000000 		call	__mulsf3		#
 4489      E7800000 
 4490 33ac 93090500 		mv	s3,a0	# tmp687,
 4491              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4492 33b0 03258101 		lw	a0,24(sp)		#, %sfp
 4493 33b4 93850A00 		mv	a1,s5	#, tmp472
 4494 33b8 97000000 		call	__mulsf3		#
 4494      E7800000 
 4495 33c0 93050500 		mv	a1,a0	# tmp688,
 4496              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4497 33c4 13050900 		mv	a0,s2	#, tmp480
 4498 33c8 97000000 		call	__subsf3		#
 4498      E7800000 
 4499              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4500 33d0 83250104 		lw	a1,64(sp)		#, %sfp
 4501 33d4 3345AA00 		xor	a0,s4,a0	# tmp689,, tmp543
 4502 33d8 97000000 		call	__mulsf3		#
 4502      E7800000 
 4503 33e0 93050500 		mv	a1,a0	# tmp690,
 4504              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4505 33e4 13850900 		mv	a0,s3	#, tmp479
 4506 33e8 97000000 		call	__addsf3		#
 4506      E7800000 
 4507 33f0 13090500 		mv	s2,a0	# tmp691,
 4508              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4509 33f4 93850A00 		mv	a1,s5	#, tmp472
 4510 33f8 13850C00 		mv	a0,s9	#, V$z
 4511 33fc 97000000 		call	__mulsf3		#
 4511      E7800000 
 4512 3404 93050500 		mv	a1,a0	# tmp692,
 4513              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4514 3408 13850400 		mv	a0,s1	#, tmp488
 4515 340c 97000000 		call	__subsf3		#
 4515      E7800000 
 4516              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4517 3414 83254104 		lw	a1,68(sp)		#, %sfp
 4518 3418 3345AA00 		xor	a0,s4,a0	# tmp693,, tmp543
 4519 341c 97000000 		call	__mulsf3		#
 4519      E7800000 
 4520 3424 93050500 		mv	a1,a0	# tmp694,
 4521              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4522 3428 13050900 		mv	a0,s2	#, tmp487
 4523 342c 97000000 		call	__addsf3		#
 4523      E7800000 
 4524              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 4525 3434 93050000 		mv	a1,zero	#,
 4526              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4527 3438 93090500 		mv	s3,a0	# _212, tmp695
 4528              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 4529 343c 97000000 		call	__ltsf2		#
 4529      E7800000 
 4530 3444 63480502 		blt	a0,zero,.L399	#, tmp696,,
 4531              	# main_raytrace_termio.c:220:     if(abc > 0.0f && def > 0.0f) {
 4532 3448 93050000 		mv	a1,zero	#,
 4533 344c 13850900 		mv	a0,s3	#, _212
 4534 3450 97000000 		call	__gtsf2		#
 4534      E7800000 
 4535              	# main_raytrace_termio.c:219:     float def = material.specular_exponent;
 4536 3458 83248115 		lw	s1,344(sp)		# def, material.specular_exponent
 4537              	# main_raytrace_termio.c:220:     if(abc > 0.0f && def > 0.0f) {
 4538 345c 635CA000 		ble	a0,zero,.L399	#, tmp697,,
 4539              	# main_raytrace_termio.c:220:     if(abc > 0.0f && def > 0.0f) {
 4540 3460 93050000 		mv	a1,zero	#,
 4541 3464 13850400 		mv	a0,s1	#, def
 4542 3468 97000000 		call	__gtsf2		#
 4542      E7800000 
 4543 3470 634CA050 		bgt	a0,zero,.L432	#, tmp698,,
 4544              	.L399:
 4545              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4546 3474 8327C100 		lw	a5,12(sp)		# i, %sfp
 4547              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4548 3478 0327C103 		lw	a4,60(sp)		# nb_lights, %sfp
 4549 347c 13040401 		addi	s0,s0,16	#, ivtmp.1123, ivtmp.1123
 4550              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4551 3480 93871700 		addi	a5,a5,1	#, i, i
 4552 3484 2326F100 		sw	a5,12(sp)	# i, %sfp
 4553              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4554 3488 630CF738 		beq	a4,a5,.L394	#, nb_lights, i,
 4555              	.L409:
 4556              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4557 348c 03250400 		lw	a0,0(s0)		#, MEM[(float *)_292]
 4558 3490 93850D00 		mv	a1,s11	#, pretmp_498
 4559 3494 97000000 		call	__subsf3		#
 4559      E7800000 
 4560 349c 93090500 		mv	s3,a0	# tmp635,
 4561 34a0 03254400 		lw	a0,4(s0)		#, MEM[(float *)_292 + 4B]
 4562 34a4 93050D00 		mv	a1,s10	#, pretmp_499
 4563 34a8 97000000 		call	__subsf3		#
 4563      E7800000 
 4564 34b0 13090500 		mv	s2,a0	# tmp636,
 4565 34b4 03258400 		lw	a0,8(s0)		#, MEM[(float *)_292 + 8B]
 4566 34b8 93050C00 		mv	a1,s8	#, pretmp_500
 4567 34bc 97000000 		call	__subsf3		#
 4567      E7800000 
 4568 34c4 93040500 		mv	s1,a0	# tmp637,
 4569              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4570 34c8 93850900 		mv	a1,s3	#, tmp407
 4571 34cc 13850900 		mv	a0,s3	#, tmp407
 4572 34d0 97000000 		call	__mulsf3		#
 4572      E7800000 
 4573 34d8 930A0500 		mv	s5,a0	# tmp410, tmp638
 4574              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4575 34dc 93050900 		mv	a1,s2	#, tmp408
 4576 34e0 13050900 		mv	a0,s2	#, tmp408
 4577 34e4 97000000 		call	__mulsf3		#
 4577      E7800000 
 4578 34ec 93050500 		mv	a1,a0	# tmp639,
 4579              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4580 34f0 13850A00 		mv	a0,s5	#, tmp410
 4581 34f4 97000000 		call	__addsf3		#
 4581      E7800000 
 4582 34fc 930A0500 		mv	s5,a0	# tmp412, tmp640
 4583              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4584 3500 93850400 		mv	a1,s1	#, tmp409
 4585 3504 13850400 		mv	a0,s1	#, tmp409
 4586 3508 97000000 		call	__mulsf3		#
 4586      E7800000 
 4587 3510 93050500 		mv	a1,a0	# tmp641,
 4588              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4589 3514 13850A00 		mv	a0,s5	#, tmp412
 4590 3518 97000000 		call	__addsf3		#
 4590      E7800000 
 4591 3520 97000000 		call	sqrtf		#
 4591      E7800000 
 4592 3528 93050500 		mv	a1,a0	# tmp642,
 4593              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 4594 352c 03254106 		lw	a0,100(sp)		#, %sfp
 4595 3530 97000000 		call	__divsf3		#
 4595      E7800000 
 4596 3538 930A0500 		mv	s5,a0	# tmp416, tmp643
 4597              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4598 353c 93050500 		mv	a1,a0	#, tmp416
 4599 3540 13850900 		mv	a0,s3	#, tmp407
 4600 3544 97000000 		call	__mulsf3		#
 4600      E7800000 
 4601 354c 93850A00 		mv	a1,s5	#, tmp416
 4602 3550 93090500 		mv	s3,a0	# tmp644,
 4603 3554 13050900 		mv	a0,s2	#, tmp408
 4604 3558 97000000 		call	__mulsf3		#
 4604      E7800000 
 4605 3560 93850A00 		mv	a1,s5	#, tmp416
 4606 3564 13090500 		mv	s2,a0	# tmp645,
 4607 3568 13850400 		mv	a0,s1	#, tmp409
 4608 356c 97000000 		call	__mulsf3		#
 4608      E7800000 
 4609 3574 93040500 		mv	s1,a0	# tmp646,
 4610              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4611 3578 03250400 		lw	a0,0(s0)		#, MEM[(float *)_292]
 4612 357c 93850D00 		mv	a1,s11	#, pretmp_498
 4613 3580 97000000 		call	__subsf3		#
 4613      E7800000 
 4614 3588 930A0500 		mv	s5,a0	# tmp647,
 4615 358c 03254400 		lw	a0,4(s0)		#, MEM[(float *)_292 + 4B]
 4616 3590 93050D00 		mv	a1,s10	#, pretmp_499
 4617 3594 97000000 		call	__subsf3		#
 4617      E7800000 
 4618 359c 930B0500 		mv	s7,a0	# tmp648,
 4619 35a0 03258400 		lw	a0,8(s0)		#, MEM[(float *)_292 + 8B]
 4620 35a4 93050C00 		mv	a1,s8	#, pretmp_500
 4621 35a8 97000000 		call	__subsf3		#
 4621      E7800000 
 4622 35b0 130B0500 		mv	s6,a0	# tmp649,
 4623              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4624 35b4 93850A00 		mv	a1,s5	#, tmp420
 4625 35b8 13850A00 		mv	a0,s5	#, tmp11
 4626 35bc 97000000 		call	__mulsf3		#
 4626      E7800000 
 4627 35c4 930A0500 		mv	s5,a0	# tmp423, tmp650
 4628              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4629 35c8 93850B00 		mv	a1,s7	#, tmp421
 4630 35cc 13850B00 		mv	a0,s7	#, tmp11
 4631 35d0 97000000 		call	__mulsf3		#
 4631      E7800000 
 4632 35d8 93050500 		mv	a1,a0	# tmp651,
 4633              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4634 35dc 13850A00 		mv	a0,s5	#, tmp423
 4635 35e0 97000000 		call	__addsf3		#
 4635      E7800000 
 4636 35e8 930A0500 		mv	s5,a0	# tmp425, tmp652
 4637              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4638 35ec 93050B00 		mv	a1,s6	#, tmp422
 4639 35f0 13050B00 		mv	a0,s6	#, tmp11
 4640 35f4 97000000 		call	__mulsf3		#
 4640      E7800000 
 4641 35fc 93050500 		mv	a1,a0	# tmp653,
 4642              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4643 3600 13850A00 		mv	a0,s5	#, tmp425
 4644 3604 97000000 		call	__addsf3		#
 4644      E7800000 
 4645 360c 97000000 		call	sqrtf		#
 4645      E7800000 
 4646 3614 930B0500 		mv	s7,a0	# tmp654,
 4647              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4648 3618 03250105 		lw	a0,80(sp)		#, %sfp
 4649 361c 93850900 		mv	a1,s3	#, _127
 4650 3620 97000000 		call	__mulsf3		#
 4650      E7800000 
 4651 3628 930A0500 		mv	s5,a0	# tmp428, tmp655
 4652              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4653 362c 03254105 		lw	a0,84(sp)		#, %sfp
 4654 3630 93050900 		mv	a1,s2	#, _128
 4655 3634 97000000 		call	__mulsf3		#
 4655      E7800000 
 4656 363c 93050500 		mv	a1,a0	# tmp656,
 4657              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4658 3640 13850A00 		mv	a0,s5	#, tmp428
 4659 3644 97000000 		call	__addsf3		#
 4659      E7800000 
 4660 364c 930A0500 		mv	s5,a0	# tmp430, tmp657
 4661              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4662 3650 0325C104 		lw	a0,76(sp)		#, %sfp
 4663 3654 93850400 		mv	a1,s1	#, _129
 4664 3658 97000000 		call	__mulsf3		#
 4664      E7800000 
 4665 3660 93050500 		mv	a1,a0	# tmp658,
 4666              	# main_raytrace_termio.c:53: static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.
 4667 3664 13850A00 		mv	a0,s5	#, tmp430
 4668 3668 97000000 		call	__addsf3		#
 4668      E7800000 
 4669              	# main_raytrace_termio.c:208:     vec3 shadow_orig = vec3_dot(light_dir,N) < 0 ? vec3_sub(point,vec
 4670 3670 93050000 		mv	a1,zero	#,
 4671 3674 97000000 		call	__ltsf2		#
 4671      E7800000 
 4672 367c E35805B6 		bge	a0,zero,.L423	#, tmp659,,
 4673              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4674 3680 83258105 		lw	a1,88(sp)		#, %sfp
 4675 3684 13850D00 		mv	a0,s11	#, pretmp_498
 4676 3688 97000000 		call	__subsf3		#
 4676      E7800000 
 4677 3690 83250106 		lw	a1,96(sp)		#, %sfp
 4678 3694 130B0500 		mv	s6,a0	# tmp660,
 4679 3698 13050D00 		mv	a0,s10	#, pretmp_499
 4680 369c 97000000 		call	__subsf3		#
 4680      E7800000 
 4681 36a4 8325C105 		lw	a1,92(sp)		#, %sfp
 4682 36a8 930A0500 		mv	s5,a0	# tmp661,
 4683 36ac 13050C00 		mv	a0,s8	#, pretmp_500
 4684 36b0 97000000 		call	__subsf3		#
 4684      E7800000 
 4685 36b8 930C0500 		mv	s9,a0	# shadow_orig$z, tmp662
 4686 36bc 6FF0DFB6 		j	.L397		#
 4687              	.L429:
 4688              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4689 36c0 03250105 		lw	a0,80(sp)		#, %sfp
 4690 36c4 97000000 		call	__mulsf3		#
 4690      E7800000 
 4691 36cc 93070500 		mv	a5,a0	# tmp612,
 4692 36d0 83A50C00 		lw	a1,%lo(.LC21)(s9)		#,
 4693 36d4 03254105 		lw	a0,84(sp)		#, %sfp
 4694 36d8 232CF104 		sw	a5,88(sp)	# tmp612, %sfp
 4695 36dc 97000000 		call	__mulsf3		#
 4695      E7800000 
 4696 36e4 93070500 		mv	a5,a0	# tmp613,
 4697 36e8 83A50C00 		lw	a1,%lo(.LC21)(s9)		#,
 4698 36ec 0325C104 		lw	a0,76(sp)		#, %sfp
 4699 36f0 938C0700 		mv	s9,a5	# _73, tmp613
 4700 36f4 2320F106 		sw	a5,96(sp)	# _73, %sfp
 4701 36f8 97000000 		call	__mulsf3		#
 4701      E7800000 
 4702              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4703 3700 83258105 		lw	a1,88(sp)		#, %sfp
 4704              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4705 3704 93070500 		mv	a5,a0	# tmp614,
 4706              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4707 3708 13850D00 		mv	a0,s11	#, pretmp_498
 4708              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4709 370c 232EF104 		sw	a5,92(sp)	# tmp614, %sfp
 4710              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4711 3710 97000000 		call	__subsf3		#
 4711      E7800000 
 4712 3718 93070500 		mv	a5,a0	# tmp615,
 4713 371c 93850C00 		mv	a1,s9	#, _73
 4714 3720 13050D00 		mv	a0,s10	#, pretmp_499
 4715 3724 2326F100 		sw	a5,12(sp)	# _78, %sfp
 4716 3728 97000000 		call	__subsf3		#
 4716      E7800000 
 4717 3730 8325C105 		lw	a1,92(sp)		#, %sfp
 4718 3734 930C0500 		mv	s9,a0	# tmp616,
 4719 3738 13050C00 		mv	a0,s8	#, pretmp_500
 4720 373c 97000000 		call	__subsf3		#
 4720      E7800000 
 4721 3744 0327C100 		lw	a4,12(sp)		# _78, %sfp
 4722 3748 93070500 		mv	a5,a0	# _80, tmp617
 4723 374c 6FF0DF8D 		j	.L390		#
 4724              	.L431:
 4725 3750 03254111 		lw	a0,276(sp)		#, shadow_pt.x
 4726 3754 93050B00 		mv	a1,s6	#, shadow_orig$x
 4727 3758 97000000 		call	__subsf3		#
 4727      E7800000 
 4728 3760 93070500 		mv	a5,a0	# tmp667,
 4729 3764 03258111 		lw	a0,280(sp)		#, shadow_pt.y
 4730 3768 93850A00 		mv	a1,s5	#, shadow_orig$y
 4731 376c 938A0700 		mv	s5,a5	# tmp451, tmp667
 4732 3770 97000000 		call	__subsf3		#
 4732      E7800000 
 4733 3778 93070500 		mv	a5,a0	# tmp668,
 4734 377c 0325C111 		lw	a0,284(sp)		#, shadow_pt.z
 4735 3780 93850C00 		mv	a1,s9	#, shadow_orig$z
 4736 3784 938C0700 		mv	s9,a5	# tmp452, tmp668
 4737 3788 97000000 		call	__subsf3		#
 4737      E7800000 
 4738 3790 130B0500 		mv	s6,a0	# tmp669,
 4739              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4740 3794 93850A00 		mv	a1,s5	#, tmp451
 4741 3798 13850A00 		mv	a0,s5	#, tmp11
 4742 379c 97000000 		call	__mulsf3		#
 4742      E7800000 
 4743 37a4 930A0500 		mv	s5,a0	# tmp454, tmp670
 4744              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4745 37a8 93850C00 		mv	a1,s9	#, tmp452
 4746 37ac 13850C00 		mv	a0,s9	#, tmp11
 4747 37b0 97000000 		call	__mulsf3		#
 4747      E7800000 
 4748 37b8 93050500 		mv	a1,a0	# tmp671,
 4749              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4750 37bc 13850A00 		mv	a0,s5	#, tmp454
 4751 37c0 97000000 		call	__addsf3		#
 4751      E7800000 
 4752 37c8 930A0500 		mv	s5,a0	# tmp456, tmp672
 4753              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4754 37cc 93050B00 		mv	a1,s6	#, tmp453
 4755 37d0 13050B00 		mv	a0,s6	#, tmp11
 4756 37d4 97000000 		call	__mulsf3		#
 4756      E7800000 
 4757 37dc 93050500 		mv	a1,a0	# tmp673,
 4758              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 4759 37e0 13850A00 		mv	a0,s5	#, tmp456
 4760 37e4 97000000 		call	__addsf3		#
 4760      E7800000 
 4761 37ec 97000000 		call	sqrtf		#
 4761      E7800000 
 4762 37f4 93050500 		mv	a1,a0	# tmp674,
 4763              	# main_raytrace_termio.c:212:     if (scene_intersect(shadow_orig, light_dir, spheres, nb_spheres, 
 4764 37f8 13850B00 		mv	a0,s7	#, _141
 4765 37fc 97000000 		call	__gtsf2		#
 4765      E7800000 
 4766 3804 E35EA0A6 		ble	a0,zero,.L398	#, tmp675,,
 4767              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4768 3808 8327C100 		lw	a5,12(sp)		# i, %sfp
 4769              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4770 380c 0327C103 		lw	a4,60(sp)		# nb_lights, %sfp
 4771 3810 13040401 		addi	s0,s0,16	#, ivtmp.1123, ivtmp.1123
 4772              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4773 3814 93871700 		addi	a5,a5,1	#, i, i
 4774 3818 2326F100 		sw	a5,12(sp)	# i, %sfp
 4775              	# main_raytrace_termio.c:204:   for (int i=0; i<nb_lights; i++) {
 4776 381c E318F7C6 		bne	a4,a5,.L409	#, nb_lights, i,
 4777              	.L394:
 4778              	# main_raytrace_termio.c:224:   vec3 alu_rslt = vec3_scale(diffuse_light_intensity * material.albed
 4779 3820 8325C113 		lw	a1,316(sp)		#, material.albedo.x
 4780 3824 03250101 		lw	a0,16(sp)		#, %sfp
 4781 3828 97000000 		call	__mulsf3		#
 4781      E7800000 
 4782 3830 93090500 		mv	s3,a0	# tmp707,
 4783              	# main_raytrace_termio.c:225:   alu_rslt = vec3_add(alu_rslt, vec3_scale(specular_light_intensity *
 4784 3834 83250114 		lw	a1,320(sp)		#, material.albedo.y
 4785 3838 0325C106 		lw	a0,108(sp)		#, %sfp
 4786 383c 97000000 		call	__mulsf3		#
 4786      E7800000 
 4787              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4788 3844 8325C114 		lw	a1,332(sp)		#, material.diffuse_color.x
 4789              	# main_raytrace_termio.c:225:   alu_rslt = vec3_add(alu_rslt, vec3_scale(specular_light_intensity *
 4790 3848 13040500 		mv	s0,a0	# tmp513, tmp708
 4791              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4792 384c 13850900 		mv	a0,s3	#, tmp512
 4793 3850 97000000 		call	__mulsf3		#
 4793      E7800000 
 4794              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4795 3858 93050400 		mv	a1,s0	#, tmp513
 4796 385c 97000000 		call	__addsf3		#
 4796      E7800000 
 4797              	# main_raytrace_termio.c:226:   alu_rslt = vec3_add(alu_rslt, vec3_scale(material.albedo.z, reflect
 4798 3864 832A4114 		lw	s5,324(sp)		# _246, material.albedo.z
 4799              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4800 3868 8325410E 		lw	a1,228(sp)		#, reflect_color.x
 4801              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4802 386c 93040500 		mv	s1,a0	# tmp515, tmp709
 4803              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4804 3870 13850A00 		mv	a0,s5	#, _246
 4805 3874 97000000 		call	__mulsf3		#
 4805      E7800000 
 4806 387c 93050500 		mv	a1,a0	# tmp710,
 4807              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4808 3880 13850400 		mv	a0,s1	#, tmp515
 4809 3884 97000000 		call	__addsf3		#
 4809      E7800000 
 4810              	# main_raytrace_termio.c:227:   alu_rslt = vec3_add(alu_rslt, vec3_scale(material.albedo.w, refract
 4811 388c 032A8114 		lw	s4,328(sp)		# _256, material.albedo.w
 4812              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4813 3890 8325010F 		lw	a1,240(sp)		#, refract_color.x
 4814              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4815 3894 93040500 		mv	s1,a0	# tmp517, tmp711
 4816              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4817 3898 13050A00 		mv	a0,s4	#, _256
 4818 389c 97000000 		call	__mulsf3		#
 4818      E7800000 
 4819 38a4 93050500 		mv	a1,a0	# tmp712,
 4820              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4821 38a8 13850400 		mv	a0,s1	#, tmp517
 4822 38ac 97000000 		call	__addsf3		#
 4822      E7800000 
 4823              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4824 38b4 83250115 		lw	a1,336(sp)		#, material.diffuse_color.y
 4825              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4826 38b8 13090500 		mv	s2,a0	# tmp713,
 4827              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4828 38bc 13850900 		mv	a0,s3	#, tmp512
 4829 38c0 97000000 		call	__mulsf3		#
 4829      E7800000 
 4830              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4831 38c8 93050400 		mv	a1,s0	#, tmp513
 4832 38cc 97000000 		call	__addsf3		#
 4832      E7800000 
 4833              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4834 38d4 8325810E 		lw	a1,232(sp)		#, reflect_color.y
 4835              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4836 38d8 93040500 		mv	s1,a0	# tmp521, tmp714
 4837              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4838 38dc 13850A00 		mv	a0,s5	#, _246
 4839 38e0 97000000 		call	__mulsf3		#
 4839      E7800000 
 4840 38e8 93050500 		mv	a1,a0	# tmp715,
 4841              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4842 38ec 13850400 		mv	a0,s1	#, tmp521
 4843 38f0 97000000 		call	__addsf3		#
 4843      E7800000 
 4844              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4845 38f8 8325410F 		lw	a1,244(sp)		#, refract_color.y
 4846              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4847 38fc 93040500 		mv	s1,a0	# tmp523, tmp716
 4848              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4849 3900 13050A00 		mv	a0,s4	#, _256
 4850 3904 97000000 		call	__mulsf3		#
 4850      E7800000 
 4851 390c 93050500 		mv	a1,a0	# tmp717,
 4852              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4853 3910 13850400 		mv	a0,s1	#, tmp523
 4854 3914 97000000 		call	__addsf3		#
 4854      E7800000 
 4855              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4856 391c 83254115 		lw	a1,340(sp)		#, material.diffuse_color.z
 4857              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4858 3920 93040500 		mv	s1,a0	# tmp718,
 4859              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4860 3924 13850900 		mv	a0,s3	#, tmp512
 4861 3928 97000000 		call	__mulsf3		#
 4861      E7800000 
 4862              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4863 3930 93050400 		mv	a1,s0	#, tmp513
 4864 3934 97000000 		call	__addsf3		#
 4864      E7800000 
 4865              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4866 393c 8325C10E 		lw	a1,236(sp)		#, reflect_color.z
 4867              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4868 3940 13040500 		mv	s0,a0	# tmp527, tmp719
 4869              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4870 3944 13850A00 		mv	a0,s5	#, _246
 4871 3948 97000000 		call	__mulsf3		#
 4871      E7800000 
 4872 3950 93050500 		mv	a1,a0	# tmp720,
 4873              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4874 3954 13050400 		mv	a0,s0	#, tmp527
 4875 3958 97000000 		call	__addsf3		#
 4875      E7800000 
 4876              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4877 3960 8325810F 		lw	a1,248(sp)		#, refract_color.z
 4878              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4879 3964 13040500 		mv	s0,a0	# tmp529, tmp721
 4880              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 4881 3968 13050A00 		mv	a0,s4	#, _256
 4882 396c 97000000 		call	__mulsf3		#
 4882      E7800000 
 4883 3974 93050500 		mv	a1,a0	# tmp722,
 4884              	# main_raytrace_termio.c:51: static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+
 4885 3978 13050400 		mv	a0,s0	#, tmp529
 4886 397c 97000000 		call	__addsf3		#
 4886      E7800000 
 4887              	# main_raytrace_termio.c:228:   return alu_rslt;
 4888 3984 6FF0CFA9 		j	.L387		#
 4889              	.L432:
 4890              	# main_raytrace_termio.c:170:   int Y = (int)y;
 4891 3988 13850400 		mv	a0,s1	#, def
 4892 398c 97000000 		call	__fixsfsi		#
 4892      E7800000 
 4893 3994 13090500 		mv	s2,a0	# Y, tmp699
 4894              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 4895 3998 93840900 		mv	s1,s3	# alu_rslt, _212
 4896              	# main_raytrace_termio.c:171:   while(Y > 2) {
 4897 399c 930A2000 		li	s5,2		# tmp507,
 4898              	# main_raytrace_termio.c:171:   while(Y > 2) {
 4899 39a0 6F008005 		j	.L404		#
 4900              	.L406:
 4901              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 4902 39a4 97000000 		call	__mulsf3		#
 4902      E7800000 
 4903 39ac 93040500 		mv	s1,a0	# alu_rslt, tmp700
 4904              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4905 39b0 97000000 		call	__extendsfdf2		#
 4905      E7800000 
 4906              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4907 39b8 03260102 		lw	a2,32(sp)		#, %sfp
 4908 39bc 83264102 		lw	a3,36(sp)		#, %sfp
 4909              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4910 39c0 930B0500 		mv	s7,a0	# _220, tmp726
 4911 39c4 138B0500 		mv	s6,a1	# _220, tmp727
 4912              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4913 39c8 97000000 		call	__ltdf2		#
 4913      E7800000 
 4914 39d0 93070500 		mv	a5,a0	# tmp702,
 4915              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4916 39d4 03268102 		lw	a2,40(sp)		#, %sfp
 4917 39d8 8326C102 		lw	a3,44(sp)		#, %sfp
 4918 39dc 13850B00 		mv	a0,s7	# tmp728, _220
 4919 39e0 93050B00 		mv	a1,s6	#, _220
 4920              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 4921 39e4 13591940 		srai	s2,s2,1	#, Y, Y
 4922              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4923 39e8 63CA0702 		blt	a5,zero,.L405	#, tmp702,,
 4924              	# main_raytrace_termio.c:173:     if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 4925 39ec 97000000 		call	__gtdf2		#
 4925      E7800000 
 4926 39f4 6344A002 		bgt	a0,zero,.L405	#, tmp703,,
 4927              	.L404:
 4928              	# main_raytrace_termio.c:172:     Y /= 2; alu_rslt *= alu_rslt;
 4929 39f8 93850400 		mv	a1,s1	#, alu_rslt
 4930 39fc 13850400 		mv	a0,s1	#, tmp11
 4931              	# main_raytrace_termio.c:171:   while(Y > 2) {
 4932 3a00 E3C22AFB 		bgt	s2,s5,.L406	#, Y, tmp507,
 4933              	# main_raytrace_termio.c:177:   while(Y > 1) {
 4934 3a04 631C5901 		bne	s2,s5,.L405	#, Y, tmp507,
 4935              	# main_raytrace_termio.c:178:     Y--; alu_rslt *= x;
 4936 3a08 13850400 		mv	a0,s1	#, alu_rslt
 4937 3a0c 93850900 		mv	a1,s3	#, _212
 4938 3a10 97000000 		call	__mulsf3		#
 4938      E7800000 
 4939 3a18 93040500 		mv	s1,a0	# alu_rslt, tmp704
 4940              	.L405:
 4941              	# main_raytrace_termio.c:221:        specular_light_intensity += my_pow(abc,def)*lights[i].intensit
 4942 3a1c 03254101 		lw	a0,20(sp)		#, %sfp
 4943 3a20 93850400 		mv	a1,s1	#, alu_rslt
 4944 3a24 97000000 		call	__mulsf3		#
 4944      E7800000 
 4945 3a2c 93050500 		mv	a1,a0	# tmp705,
 4946              	# main_raytrace_termio.c:221:        specular_light_intensity += my_pow(abc,def)*lights[i].intensit
 4947 3a30 0325C106 		lw	a0,108(sp)		#, %sfp
 4948 3a34 97000000 		call	__addsf3		#
 4948      E7800000 
 4949 3a3c 2326A106 		sw	a0,108(sp)	# tmp706, %sfp
 4950 3a40 6FF05FA3 		j	.L399		#
 4951              	.L430:
 4952              	# main_raytrace_termio.c:52: static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-
 4953 3a44 83258105 		lw	a1,88(sp)		#, %sfp
 4954 3a48 13850D00 		mv	a0,s11	#, pretmp_498
 4955 3a4c 97000000 		call	__subsf3		#
 4955      E7800000 
 4956 3a54 83250106 		lw	a1,96(sp)		#, %sfp
 4957 3a58 93070500 		mv	a5,a0	# tmp629,
 4958 3a5c 13050D00 		mv	a0,s10	#, pretmp_499
 4959 3a60 2326F100 		sw	a5,12(sp)	# _101, %sfp
 4960 3a64 97000000 		call	__subsf3		#
 4960      E7800000 
 4961 3a6c 8325C105 		lw	a1,92(sp)		#, %sfp
 4962 3a70 930C0500 		mv	s9,a0	# tmp630,
 4963 3a74 13050C00 		mv	a0,s8	#, pretmp_500
 4964 3a78 97000000 		call	__subsf3		#
 4964      E7800000 
 4965 3a80 032EC100 		lw	t3,12(sp)		# _101, %sfp
 4966 3a84 13030500 		mv	t1,a0	# _103, tmp631
 4967 3a88 6FF08FE5 		j	.L393		#
 4968              	.L410:
 4969              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 4970 3a8c 93070000 		mv	a5,zero	# specular_light_intensity,
 4971 3a90 2326F106 		sw	a5,108(sp)	# specular_light_intensity, %sfp
 4972              	# main_raytrace_termio.c:203:   float diffuse_light_intensity = 0, specular_light_intensity = 0;
 4973 3a94 2328F100 		sw	a5,16(sp)	# diffuse_light_intensity, %sfp
 4974 3a98 6FF09FD8 		j	.L394		#
 4976              		.section	.rodata.str1.4
 4977 0011 000000   		.align	2
 4978              	.LC22:
 4979 0014 72646379 		.string	"rdcycle       :"
 4979      636C6520 
 4979      20202020 
 4979      20203A00 
 4980              		.align	2
 4981              	.LC23:
 4982 0024 7264696E 		.string	"rdinstret     :"
 4982      73747265 
 4982      74202020 
 4982      20203A00 
 4983              		.text
 4984              		.align	2
 4985              		.globl	show_csr_timer_cnt
 4987              	show_csr_timer_cnt:
 4988 3a9c 130101FD 		addi	sp,sp,-48	#,,
 4989              	# main_raytrace_termio.c:267:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 4990              	 #APP
 4991              	# 267 "main_raytrace_termio.c" 1
   1              	/* A port of Dmitry Sokolov's tiny raytracer to C and to FemtoRV32 */
   2              	/* Displays on the small OLED display and/or HDMI                  */
   3              	/* Bruno Levy, 2020                                                */
   4              	/* Original tinyraytracer: https://github.com/ssloy/tinyraytracer  */
   5              	/* adapted for kianv riscv soc Hirosh Dabui, 2021 */
   6              	
   7              	#include <stdint.h>
   8              	#include <math.h>
   9              	#include <fenv.h>
  10              	#include "stdlib.c"
  11              	
  12              	typedef short Pixel;
  13              	
  14              	
  15              	//const int HRES = 640;
  16              	//const int VRES = 480;
  17              	
  18              	//const int HRENDER = 640;
  19              	//const int VRENDER = 480;
  20              	
  21              	const int HRES = 128;
  22              	const int VRES = 128;
  23              	
  24              	const int HRENDER = 96;
  25              	const int VRENDER = 64;
  26              	
  27              	
  28              	int __errno; // needed when compiling to hex, not needed otherwise.
  29              	
  30              	typedef int BOOL;
  31              	
  32              	static inline float max(float x, float y) { return x>y?x:y; }
  33              	static inline float min(float x, float y) { return x<y?x:y; }
  34              	
  35              	typedef struct { float x,y,z; }   vec3;
  36              	typedef struct { float x,y,z,w; } vec4;
  37              	
  38              	static inline vec3 make_vec3(float x, float y, float z) {
  39              	  vec3 V;
  40              	  V.x = x; V.y = y; V.z = z;
  41              	  return V;
  42              	}
  43              	
  44              	static inline vec4 make_vec4(float x, float y, float z, float w) {
  45              	  vec4 V;
  46              	  V.x = x; V.y = y; V.z = z; V.w = w;
  47              	  return V;
  48              	}
  49              	
  50              	static inline vec3 vec3_neg(vec3 V)            { return make_vec3(-V.x, -V.y, -V.z); }
  51              	static inline vec3 vec3_add(vec3 U, vec3 V)    { return make_vec3(U.x+V.x, U.y+V.y, U.z+V.z); }
  52              	static inline vec3 vec3_sub(vec3 U, vec3 V)    { return make_vec3(U.x-V.x, U.y-V.y, U.z-V.z); }
  53              	static inline float vec3_dot(vec3 U, vec3 V)   { return U.x*V.x+U.y*V.y+U.z*V.z; }
  54              	static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.x, s*U.y, s*U.z); }
  55              	static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+U.y*U.y+U.z*U.z); }
  56              	static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0f/vec3_length(U),U); }
  57              	
  58              	/*************************************************************************/
  59              	
  60              	typedef struct Light {
  61              	  vec3 position;
  62              	  float intensity;
  63              	} Light;
  64              	
  65              	Light make_Light(vec3 position, float intensity) {
  66              	  Light L;
  67              	  L.position = position;
  68              	  L.intensity = intensity;
  69              	  return L;
  70              	}
  71              	
  72              	/*************************************************************************/
  73              	
  74              	typedef struct {
  75              	  float refractive_index;
  76              	  vec4  albedo;
  77              	  vec3  diffuse_color;
  78              	  float specular_exponent;
  79              	} Material;
  80              	
  81              	Material make_Material(float r, vec4 a, vec3 color, float spec) {
  82              	  Material M;
  83              	  M.refractive_index = r;
  84              	  M.albedo = a;
  85              	  M.diffuse_color = color;
  86              	  M.specular_exponent = spec;
  87              	  return M;
  88              	}
  89              	
  90              	Material make_Material_default() {
  91              	  Material M;
  92              	  M.refractive_index = 1;
  93              	  M.albedo = make_vec4(1,0,0,0);
  94              	  M.diffuse_color = make_vec3(0,0,0);
  95              	  M.specular_exponent = 0;
  96              	  return M;
  97              	}
  98              	
  99              	/*************************************************************************/
 100              	
 101              	typedef struct {
 102              	  vec3 center;
 103              	  float radius;
 104              	  Material material;
 105              	} Sphere;
 106              	
 107              	Sphere make_Sphere(vec3 c, float r, Material M) {
 108              	  Sphere S;
 109              	  S.center = c;
 110              	  S.radius = r;
 111              	  S.material = M;
 112              	  return S;
 113              	}
 114              	
 115              	BOOL Sphere_ray_intersect(Sphere* S, vec3 orig, vec3 dir, float* t0) {
 116              	  vec3 L = vec3_sub(S->center, orig);
 117              	  float tca = vec3_dot(L,dir);
 118              	  float d2 = vec3_dot(L,L) - tca*tca;
 119              	  float r2 = S->radius*S->radius;
 120              	  if (d2 > r2) return 0;
 121              	  float thc = sqrtf(r2 - d2);
 122              	  *t0       = tca - thc;
 123              	  float t1 = tca + thc;
 124              	  if (*t0 < 0) *t0 = t1;
 125              	  if (*t0 < 0) return 0;
 126              	  return 1;
 127              	}
 128              	
 129              	vec3 reflect(vec3 I, vec3 N) { return vec3_sub(I, vec3_scale(2.f*vec3_dot(I,N),N)); }
 130              	
 131              	vec3 refract(vec3 I, vec3 N, float eta_t, float eta_i /* =1.f */) { // Snell's law
 132              	  float cosi = -max(-1.f, min(1.f, vec3_dot(I,N)));
 133              	  if (cosi<0) return refract(I, vec3_neg(N), eta_i, eta_t); // if the ray comes from the inside the
 134              	  float eta = eta_i / eta_t;
 135              	  float k = 1 - eta*eta*(1 - cosi*cosi);
 136              	  return k<0 ? make_vec3(1,0,0) : vec3_add(vec3_scale(eta,I),vec3_scale((eta*cosi - sqrtf(k)),N));
 137              	  // k<0 = total reflection, no ray to refract. I refract it anyways, this has no physical meaning
 138              	}
 139              	
 140              	BOOL scene_intersect(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, vec3* hit, vec3* N, Mate
 141              	BOOL scene_intersect(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, vec3* hit, vec3* N, Mate
 142              	  float spheres_dist = 1e30;
 143              	  for(int i=0; i<nb_spheres; ++i) {
 144              	    float dist_i;
 145              	    if(Sphere_ray_intersect(&spheres[i], orig, dir, &dist_i) && (dist_i < spheres_dist)) {
 146              	      spheres_dist = dist_i;
 147              	      *hit = vec3_add(orig,vec3_scale(dist_i,dir));
 148              	      *N = vec3_normalize(vec3_sub(*hit, spheres[i].center));
 149              	      *material = spheres[i].material;
 150              	    }
 151              	  }
 152              	  float checkerboard_dist = 1e30;
 153              	  if (fabs(dir.y)>1e-3)  {
 154              	    float d = -(orig.y+4)/dir.y; // the checkerboard plane has equation y = -4
 155              	    vec3 pt = vec3_add(orig, vec3_scale(d,dir));
 156              	    if (d>0 && fabs(pt.x)<10 && pt.z<-10 && pt.z>-30 && d<spheres_dist) {
 157              	      checkerboard_dist = d;
 158              	      *hit = pt;
 159              	      *N = make_vec3(0,1,0);
 160              	      material->diffuse_color = (((int)(.5*hit->x+1000) + (int)(.5*hit->z)) & 1) ? make_vec3(.3, .3
 161              	    }
 162              	  }
 163              	  return min(spheres_dist, checkerboard_dist)<1000;
 164              	}
 165              	
 166              	/* It crashes when I call powf(), because it probably underflows, and I do not know how to disable 
 167              	float my_pow(float x, float y) RV32_FASTCODE;
 168              	float my_pow(float x, float y) {
 169              	  float alu_rslt = x;
 170              	  int Y = (int)y;
 171              	  while(Y > 2) {
 172              	    Y /= 2; alu_rslt *= alu_rslt;
 173              	    if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 174              	      return alu_rslt;
 175              	    }
 176              	  }
 177              	  while(Y > 1) {
 178              	    Y--; alu_rslt *= x;
 179              	    if(alu_rslt < 1e-100 || alu_rslt > 1e100) {
 180              	      return alu_rslt;
 181              	    }
 182              	  }
 183              	  return alu_rslt;
 184              	}
 185              	
 186              	vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, Light* lights, int nb_lights, i
 187              	vec3 cast_ray(vec3 orig, vec3 dir, Sphere* spheres, int nb_spheres, Light* lights, int nb_lights, i
 188              	  vec3 point,N;
 189              	  Material material = make_Material_default();
 190              	  if (depth>2 || !scene_intersect(orig, dir, spheres, nb_spheres, &point, &N, &material)) {
 191              	    float s = 0.5*(dir.y + 1.0);
 192              	    return vec3_add(vec3_scale(s,make_vec3(0.2, 0.7, 0.8)),vec3_scale(s,make_vec3(0.0, 0.0, 0.5)));
 193              	  }
 194              	
 195              	  vec3 reflect_dir = vec3_normalize(reflect(dir, N));
 196              	  vec3 refract_dir = vec3_normalize(refract(dir, N, material.refractive_index, 1));
 197              	  // offset the original point to avoid occlusion by the object itself
 198              	  vec3 reflect_orig = vec3_dot(reflect_dir,N) < 0 ? vec3_sub(point,vec3_scale(1e-3,N)) : vec3_add(p
 199              	  vec3 refract_orig = vec3_dot(refract_dir,N) < 0 ? vec3_sub(point,vec3_scale(1e-3,N)) : vec3_add(p
 200              	  vec3 reflect_color = cast_ray(reflect_orig, reflect_dir, spheres, nb_spheres, lights, nb_lights, 
 201              	  vec3 refract_color = cast_ray(refract_orig, refract_dir, spheres, nb_spheres, lights, nb_lights, 
 202              	
 203              	  float diffuse_light_intensity = 0, specular_light_intensity = 0;
 204              	  for (int i=0; i<nb_lights; i++) {
 205              	    vec3  light_dir = vec3_normalize(vec3_sub(lights[i].position,point));
 206              	    float light_distance = vec3_length(vec3_sub(lights[i].position,point));
 207              	
 208              	    vec3 shadow_orig = vec3_dot(light_dir,N) < 0 ? vec3_sub(point,vec3_scale(1e-3,N)) : vec3_add(po
 209              	        // checking if the point lies in the shadow of the lights[i]
 210              	    vec3 shadow_pt, shadow_N;
 211              	    Material tmpmaterial;
 212              	    if (scene_intersect(shadow_orig, light_dir, spheres, nb_spheres, &shadow_pt, &shadow_N, &tmpmat
 213              		vec3_length(vec3_sub(shadow_pt,shadow_orig)) < light_distance
 214              	    ) continue ;
 215              	
 216              	    diffuse_light_intensity  += lights[i].intensity * max(0.f, vec3_dot(light_dir,N));
 217              	
 218              	    float abc = max(0.f, vec3_dot(vec3_neg(reflect(vec3_neg(light_dir), N)),dir));
 219              	    float def = material.specular_exponent;
 220              	    if(abc > 0.0f && def > 0.0f) {
 221              	       specular_light_intensity += my_pow(abc,def)*lights[i].intensity;
 222              	    }
 223              	  }
 224              	  vec3 alu_rslt = vec3_scale(diffuse_light_intensity * material.albedo.x, material.diffuse_color);
 225              	  alu_rslt = vec3_add(alu_rslt, vec3_scale(specular_light_intensity * material.albedo.y, make_vec3(
 226              	  alu_rslt = vec3_add(alu_rslt, vec3_scale(material.albedo.z, reflect_color));
 227              	  alu_rslt = vec3_add(alu_rslt, vec3_scale(material.albedo.w, refract_color));
 228              	  return alu_rslt;
 229              	}
 230              	
 231              	const uint8_t dither[4][4] = {
 232              	  { 0, 8, 2,10},
 233              	  {12, 4,14, 6},
 234              	  { 3,11, 1, 9},
 235              	  {15, 7,13, 5}
 236              	};
 237              	
 238              	/* adapted from https://github.com/BrunoLevy/learn-fpga/blob/master/FemtoRV/FIRMWARE/LiteX/TinyRayt
 239              	static void set_pixel(volatile Pixel *fb, int x, int y, float r, float g, float b) {
 240              	  r = max(0.0f, min(1.0f, r));
 241              	  g = max(0.0f, min(1.0f, g));                                                                     
 242              	  b = max(0.0f, min(1.0f, b));
 243              	
 244              	  uint8_t R = (uint8_t)(255.0f * r);
 245              	  uint8_t G = (uint8_t)(255.0f * g);
 246              	  uint8_t B = (uint8_t)(255.0f * b);
 247              	
 248              	  //oled_setpixel_RGB(x,y,R,G,B);
 249              	
 250              	 // if(tty_output_active) {
 251              	    // See: https://stackoverflow.com/questions/4842424/
 252              	    //          list-of-ansi-color-escape-sequences   
 253              	    printf("\033[48;2;%d;%d;%dm ",R,G,B);
 254              	    if(x == HRENDER-1) {
 255              	      printf("\033[48;2;0;0;0m");
 256              	      printf("\n");
 257              	    }
 258              	 // }
 259              	}
 260              	
 261              	void show_csr_timer_cnt() {
 262              	  volatile uint32_t tmph0;
 263              	  volatile uint32_t tmpl0;
 264              	  volatile uint32_t tmph1;
 265              	  volatile uint32_t tmpl1;
 266              	
 267 3aa0 F32700C8 	  asm volatile ("rdcycleh %0" : "=r"(tmph0));
 268              	  asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 4992              		rdcycleh a5	# tmp114
 4993              	# 0 "" 2
 4994              	 #NO_APP
 4995 3aa4 2326F100 		sw	a5,12(sp)	# tmp114, tmph0
 4996              	# main_raytrace_termio.c:268:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 4997              	 #APP
 4998              	# 268 "main_raytrace_termio.c" 1
 269              	
 4999              		rdcycle  a5	# tmp115
 5000              	# 0 "" 2
 5001              	 #NO_APP
 5002 3aac 2328F100 		sw	a5,16(sp)	# tmp115, tmpl0
 5003              	# main_raytrace_termio.c:270:   asm volatile ("rdinstreth %0" : "=r"(tmph1));
 5004              	 #APP
 5005              	# 270 "main_raytrace_termio.c" 1
 270 3ab0 F32720C8 	  asm volatile ("rdinstreth %0" : "=r"(tmph1));
 271              	  asm volatile ("rdinstret %0"  : "=r"(tmpl1));
 5006              		rdinstreth a5	# tmp116
 5007              	# 0 "" 2
 5008              	 #NO_APP
 5009 3ab4 232AF100 		sw	a5,20(sp)	# tmp116, tmph1
 5010              	# main_raytrace_termio.c:271:   asm volatile ("rdinstret %0"  : "=r"(tmpl1));
 5011              	 #APP
 5012              	# 271 "main_raytrace_termio.c" 1
 272              	
 5013              		rdinstret a5	# tmp117
 5014              	# 0 "" 2
 5015              	 #NO_APP
 5016 3abc 232CF100 		sw	a5,24(sp)	# tmp117, tmpl1
 5017              	# main_raytrace_termio.c:273:   uint64_t rdcycles    = ((uint64_t)(tmph0)<<32) + tmpl0;
 5018 3ac0 032FC100 		lw	t5,12(sp)		# tmph0.50_1, tmph0
 5019              	# main_raytrace_termio.c:273:   uint64_t rdcycles    = ((uint64_t)(tmph0)<<32) + tmpl0;
 5020 3ac4 03250101 		lw	a0,16(sp)		# rdcycles, tmpl0
 5021              	# main_raytrace_termio.c:274:   uint64_t rdinstret = ((uint64_t)(tmph1)<<32) + tmpl1;
 5022 3ac8 83254101 		lw	a1,20(sp)		# tmph1.52_6, tmph1
 5023              	# main_raytrace_termio.c:274:   uint64_t rdinstret = ((uint64_t)(tmph1)<<32) + tmpl1;
 5024 3acc 83268101 		lw	a3,24(sp)		# rdinstret, tmpl1
 5025              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5026 3ad0 37070030 		li	a4,805306368		# tmp134,
 5027              	.L434:
 5028 3ad4 83270700 		lw	a5,0(a4)		# _57, MEM[(volatile uint32_t *)805306368B]
 5029              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5030 3ad8 E38E07FE 		beq	a5,zero,.L434	#, _57,,
 5031              	# kianv_stdlib.h:112:   *((volatile uint32_t*) UART_TX) = c;
 5032 3adc 9307A000 		li	a5,10		# tmp136,
 5033 3ae0 37060000 		lui	a2,%hi(.LC22)	# tmp112,
 5034 3ae4 2320F700 		sw	a5,0(a4)	# tmp136, MEM[(volatile uint32_t *)805306368B]
 5035              	# kianv_stdlib.h:122:   while (*p != 0) {
 5036 3ae8 13082007 		li	a6,114		# _46,
 5037              	# kianv_stdlib.h:112:   *((volatile uint32_t*) UART_TX) = c;
 5038 3aec 13060600 		addi	a2,a2,%lo(.LC22)	# p, tmp112,
 5039              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 5040 3af0 37070030 		li	a4,805306368		# tmp137,
 5041              	.L435:
 5042 3af4 83270700 		lw	a5,0(a4)		# _52, MEM[(volatile uint32_t *)805306368B]
 5043              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 5044 3af8 E38E07FE 		beq	a5,zero,.L435	#, _52,,
 5045              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 5046 3afc 13061600 		addi	a2,a2,1	#, p, p
 5047              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 5048 3b00 23200701 		sw	a6,0(a4)	# _46, MEM[(volatile uint32_t *)805306368B]
 5049              	# kianv_stdlib.h:122:   while (*p != 0) {
 5050 3b04 03480600 		lbu	a6,0(a2)	# _46, MEM[(char *)p_54]
 5051              	# kianv_stdlib.h:122:   while (*p != 0) {
 5052 3b08 E31608FE 		bne	a6,zero,.L435	#, _46,,
 5053              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5054 3b0c 37DECCCC 		li	t3,-858992640		# tmp522,
 5055              	# kianv_stdlib.h:150:   char *p = buffer;
 5056 3b10 1306C101 		addi	a2,sp,28	#, tmp512,
 5057              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5058 3b14 37030010 		li	t1,268435456		# tmp519,
 5059 3b18 9308DECC 		addi	a7,t3,-819	#, tmp523, tmp522
 5060              	# kianv_stdlib.h:150:   char *p = buffer;
 5061 3b1c 13080600 		mv	a6,a2	# p, tmp512
 5062              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5063 3b20 1303F3FF 		addi	t1,t1,-1	#, tmp520, tmp519
 5064 3b24 930E5000 		li	t4,5		# tmp521,
 5065 3b28 130ECECC 		addi	t3,t3,-820	#, tmp524, tmp522
 5066 3b2c 6F008005 		j	.L437		#
 5067              	.L438:
 5068 3b30 B3F7D703 		remu	a5,a5,t4	# tmp521, tmp155, tmp152
 5069              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5070 3b34 13081800 		addi	a6,a6,1	#, p, p
 5071              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5072 3b38 B307F540 		sub	a5,a0,a5	# tmp426, rdcycles, tmp155
 5073 3b3c 3337F500 		sgtu	a4,a5,a0	# tmp159, tmp426, rdcycles
 5074 3b40 3307EF40 		sub	a4,t5,a4	# tmp161, rdcycles, tmp159
 5075 3b44 B38FC703 		mul	t6,a5,t3	# tmp165, tmp426, tmp524
 5076 3b48 33071703 		mul	a4,a4,a7	# tmp162, tmp161, tmp523
 5077 3b4c 33BF1703 		mulhu	t5,a5,a7	# tmp429, tmp426, tmp523
 5078 3b50 3307F701 		add	a4,a4,t6	# tmp165, tmp168, tmp162
 5079 3b54 B3871703 		mul	a5,a5,a7	# tmp172, tmp426, tmp523
 5080 3b58 3307E701 		add	a4,a4,t5	# tmp429, tmp173, tmp168
 5081 3b5c 931FF701 		slli	t6,a4,31	#, tmp191, tmp173
 5082              	# kianv_stdlib.h:153:     val = val / 10;
 5083 3b60 135F1700 		srli	t5,a4,1	#, rdcycles, tmp173
 5084              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5085 3b64 93D71700 		srli	a5,a5,1	#, tmp436, tmp172
 5086 3b68 B3E7FF00 		or	a5,t6,a5	# tmp436, tmp436, tmp191
 5087 3b6c 13972700 		slli	a4,a5,2	#, tmp440, tmp436
 5088 3b70 3307F700 		add	a4,a4,a5	# tmp436, tmp442, tmp440
 5089 3b74 13171700 		slli	a4,a4,1	#, tmp444, tmp442
 5090 3b78 3307E540 		sub	a4,a0,a4	# tmp446, rdcycles, tmp444
 5091              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5092 3b7c A30FE8FE 		sb	a4,-1(a6)	# tmp446, MEM[(char *)p_42 + 4294967295B]
 5093              	# kianv_stdlib.h:153:     val = val / 10;
 5094 3b80 13850700 		mv	a0,a5	# rdcycles, tmp436
 5095              	.L437:
 5096              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5097 3b84 93174F00 		slli	a5,t5,4	#, tmp146, rdcycles
 5098 3b88 1357C501 		srli	a4,a0,28	#, tmp420, rdcycles
 5099 3b8c 33E7E700 		or	a4,a5,a4	# tmp420, tmp420, tmp146
 5100 3b90 33776700 		and	a4,a4,t1	# tmp520, tmp147, tmp420
 5101 3b94 B3776500 		and	a5,a0,t1	# tmp520, tmp142, rdcycles
 5102 3b98 B387E700 		add	a5,a5,a4	# tmp147, tmp150, tmp142
 5103 3b9c 935F8F01 		srli	t6,t5,24	#, tmp422, rdcycles
 5104              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 5105 3ba0 3367E501 		or	a4,a0,t5	# rdcycles, rdcycles, rdcycles
 5106              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5107 3ba4 B387F701 		add	a5,a5,t6	# tmp422, tmp152, tmp150
 5108              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 5109 3ba8 E31407F8 		bne	a4,zero,.L438	#, rdcycles,,
 5110 3bac E302C8F8 		beq	a6,a2,.L438	#, p, tmp512,
 5111              	# kianv_stdlib.h:157:     while (!*((volatile uint32_t*) UART_READY))
 5112 3bb0 37070030 		li	a4,805306368		# tmp260,
 5113              	.L439:
 5114 3bb4 83270700 		lw	a5,0(a4)		# _45, MEM[(volatile uint32_t *)805306368B]
 5115              	# kianv_stdlib.h:157:     while (!*((volatile uint32_t*) UART_READY))
 5116 3bb8 E38E07FE 		beq	a5,zero,.L439	#, _45,,
 5117              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5118 3bbc 8347F8FF 		lbu	a5,-1(a6)	# MEM[(char *)p_47], MEM[(char *)p_47]
 5119              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5120 3bc0 1308F8FF 		addi	a6,a6,-1	#, p, p
 5121              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5122 3bc4 93870703 		addi	a5,a5,48	#, _51, MEM[(char *)p_47]
 5123              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5124 3bc8 2320F700 		sw	a5,0(a4)	# _51, MEM[(volatile uint32_t *)805306368B]
 5125              	# kianv_stdlib.h:156:   while (p != buffer) {
 5126 3bcc E314C8FE 		bne	a6,a2,.L439	#, p, tmp512,
 5127              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5128 3bd0 37070030 		li	a4,805306368		# tmp264,
 5129              	.L441:
 5130 3bd4 83270700 		lw	a5,0(a4)		# _38, MEM[(volatile uint32_t *)805306368B]
 5131              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5132 3bd8 E38E07FE 		beq	a5,zero,.L441	#, _38,,
 5133              	# kianv_stdlib.h:112:   *((volatile uint32_t*) UART_TX) = c;
 5134 3bdc 9307A000 		li	a5,10		# tmp266,
 5135 3be0 37050000 		lui	a0,%hi(.LC23)	# tmp113,
 5136 3be4 2320F700 		sw	a5,0(a4)	# tmp266, MEM[(volatile uint32_t *)805306368B]
 5137              	# kianv_stdlib.h:122:   while (*p != 0) {
 5138 3be8 13082007 		li	a6,114		# _27,
 5139              	# kianv_stdlib.h:112:   *((volatile uint32_t*) UART_TX) = c;
 5140 3bec 13050500 		addi	a0,a0,%lo(.LC23)	# p, tmp113,
 5141              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 5142 3bf0 37070030 		li	a4,805306368		# tmp267,
 5143              	.L442:
 5144 3bf4 83270700 		lw	a5,0(a4)		# _33, MEM[(volatile uint32_t *)805306368B]
 5145              	# kianv_stdlib.h:123:     while (!*((volatile uint32_t*) UART_READY))
 5146 3bf8 E38E07FE 		beq	a5,zero,.L442	#, _33,,
 5147              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 5148 3bfc 13051500 		addi	a0,a0,1	#, p, p
 5149              	# kianv_stdlib.h:125:     *((volatile uint32_t*) UART_TX) = *(p++);
 5150 3c00 23200701 		sw	a6,0(a4)	# _27, MEM[(volatile uint32_t *)805306368B]
 5151              	# kianv_stdlib.h:122:   while (*p != 0) {
 5152 3c04 03480500 		lbu	a6,0(a0)	# _27, MEM[(char *)p_35]
 5153              	# kianv_stdlib.h:122:   while (*p != 0) {
 5154 3c08 E31608FE 		bne	a6,zero,.L442	#, _27,,
 5155              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5156 3c0c 37D3CCCC 		li	t1,-858992640		# tmp516,
 5157 3c10 B7080010 		li	a7,268435456		# tmp513,
 5158 3c14 1308D3CC 		addi	a6,t1,-819	#, tmp517, tmp516
 5159              	# kianv_stdlib.h:150:   char *p = buffer;
 5160 3c18 13050600 		mv	a0,a2	# p, tmp512
 5161              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5162 3c1c 9388F8FF 		addi	a7,a7,-1	#, tmp514, tmp513
 5163 3c20 130E5000 		li	t3,5		# tmp515,
 5164 3c24 1303C3CC 		addi	t1,t1,-820	#, tmp518, tmp516
 5165 3c28 6F008005 		j	.L444		#
 5166              	.L445:
 5167 3c2c B3F7C703 		remu	a5,a5,t3	# tmp515, tmp285, tmp282
 5168              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5169 3c30 13051500 		addi	a0,a0,1	#, p, p
 5170              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5171 3c34 B387F640 		sub	a5,a3,a5	# tmp472, rdinstret, tmp285
 5172 3c38 33B7F600 		sgtu	a4,a5,a3	# tmp289, tmp472, rdinstret
 5173 3c3c 3387E540 		sub	a4,a1,a4	# tmp291, rdinstret, tmp289
 5174 3c40 B38E6702 		mul	t4,a5,t1	# tmp295, tmp472, tmp518
 5175 3c44 33070703 		mul	a4,a4,a6	# tmp292, tmp291, tmp517
 5176 3c48 B3B50703 		mulhu	a1,a5,a6	# tmp475, tmp472, tmp517
 5177 3c4c 3307D701 		add	a4,a4,t4	# tmp295, tmp298, tmp292
 5178 3c50 B3870703 		mul	a5,a5,a6	# tmp302, tmp472, tmp517
 5179 3c54 3307B700 		add	a4,a4,a1	# tmp475, tmp303, tmp298
 5180 3c58 931EF701 		slli	t4,a4,31	#, tmp321, tmp303
 5181              	# kianv_stdlib.h:153:     val = val / 10;
 5182 3c5c 93551700 		srli	a1,a4,1	#, rdinstret, tmp303
 5183              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5184 3c60 93D71700 		srli	a5,a5,1	#, tmp482, tmp302
 5185 3c64 B3E7FE00 		or	a5,t4,a5	# tmp482, tmp482, tmp321
 5186 3c68 13972700 		slli	a4,a5,2	#, tmp486, tmp482
 5187 3c6c 3307F700 		add	a4,a4,a5	# tmp482, tmp488, tmp486
 5188 3c70 13171700 		slli	a4,a4,1	#, tmp490, tmp488
 5189 3c74 3387E640 		sub	a4,a3,a4	# tmp492, rdinstret, tmp490
 5190              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5191 3c78 A30FE5FE 		sb	a4,-1(a0)	# tmp492, MEM[(char *)p_23 + 4294967295B]
 5192              	# kianv_stdlib.h:153:     val = val / 10;
 5193 3c7c 93860700 		mv	a3,a5	# rdinstret, tmp482
 5194              	.L444:
 5195              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5196 3c80 93974500 		slli	a5,a1,4	#, tmp276, rdinstret
 5197 3c84 13D7C601 		srli	a4,a3,28	#, tmp466, rdinstret
 5198 3c88 33E7E700 		or	a4,a5,a4	# tmp466, tmp466, tmp276
 5199 3c8c 33771701 		and	a4,a4,a7	# tmp514, tmp277, tmp466
 5200 3c90 B3F71601 		and	a5,a3,a7	# tmp514, tmp272, rdinstret
 5201 3c94 B387E700 		add	a5,a5,a4	# tmp277, tmp280, tmp272
 5202 3c98 93DE8501 		srli	t4,a1,24	#, tmp468, rdinstret
 5203              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 5204 3c9c 33E7B600 		or	a4,a3,a1	# rdinstret, rdinstret, rdinstret
 5205              	# kianv_stdlib.h:152:     *(p++) = val % 10;
 5206 3ca0 B387D701 		add	a5,a5,t4	# tmp468, tmp282, tmp280
 5207              	# kianv_stdlib.h:151:   while (val || p == buffer) {
 5208 3ca4 E31407F8 		bne	a4,zero,.L445	#, rdinstret,,
 5209 3ca8 E302C5F8 		beq	a0,a2,.L445	#, p, tmp512,
 5210              	# kianv_stdlib.h:157:     while (!*((volatile uint32_t*) UART_READY))
 5211 3cac 37070030 		li	a4,805306368		# tmp390,
 5212              	.L446:
 5213 3cb0 83270700 		lw	a5,0(a4)		# _26, MEM[(volatile uint32_t *)805306368B]
 5214              	# kianv_stdlib.h:157:     while (!*((volatile uint32_t*) UART_READY))
 5215 3cb4 E38E07FE 		beq	a5,zero,.L446	#, _26,,
 5216              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5217 3cb8 8347F5FF 		lbu	a5,-1(a0)	# MEM[(char *)p_28], MEM[(char *)p_28]
 5218              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5219 3cbc 1305F5FF 		addi	a0,a0,-1	#, p, p
 5220              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5221 3cc0 93870703 		addi	a5,a5,48	#, _32, MEM[(char *)p_28]
 5222              	# kianv_stdlib.h:159:     *((volatile uint32_t*) UART_TX) = '0' + *(--p);
 5223 3cc4 2320F700 		sw	a5,0(a4)	# _32, MEM[(volatile uint32_t *)805306368B]
 5224              	# kianv_stdlib.h:156:   while (p != buffer) {
 5225 3cc8 E314C5FE 		bne	a0,a2,.L446	#, p, tmp512,
 5226              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5227 3ccc 37070030 		li	a4,805306368		# tmp394,
 5228              	.L448:
 5229 3cd0 83270700 		lw	a5,0(a4)		# _19, MEM[(volatile uint32_t *)805306368B]
 5230              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5231 3cd4 E38E07FE 		beq	a5,zero,.L448	#, _19,,
 5232              	# kianv_stdlib.h:112:   *((volatile uint32_t*) UART_TX) = c;
 5233 3cd8 9307A000 		li	a5,10		# tmp396,
 5234 3cdc 2320F700 		sw	a5,0(a4)	# tmp396, MEM[(volatile uint32_t *)805306368B]
 5235              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5236 3ce0 37070030 		li	a4,805306368		# tmp397,
 5237              	.L449:
 5238 3ce4 83270700 		lw	a5,0(a4)		# _18, MEM[(volatile uint32_t *)805306368B]
 5239              	# kianv_stdlib.h:110:   while (!*((volatile uint32_t*) UART_READY))
 5240 3ce8 E38E07FE 		beq	a5,zero,.L449	#, _18,,
 5241              	# kianv_stdlib.h:112:   *((volatile uint32_t*) UART_TX) = c;
 5242 3cec 9307A000 		li	a5,10		# tmp399,
 5243 3cf0 2320F700 		sw	a5,0(a4)	# tmp399, MEM[(volatile uint32_t *)805306368B]
 5244              	# main_raytrace_termio.c:284: }
 5245 3cf4 13010103 		addi	sp,sp,48	#,,
 5246 3cf8 67800000 		jr	ra		#
 5248              		.globl	__floatsidf
 5249              		.globl	__subdf3
 5250              		.globl	__divdf3
 5251              		.globl	__fixunssfsi
 5252              		.section	.rodata.str1.4
 5253              		.align	2
 5254              	.LC28:
 5255 0034 1B5B3438 		.string	"\033[48;2;0;0;0m"
 5255      3B323B30 
 5255      3B303B30 
 5255      6D00
 5256 0042 0000     		.align	2
 5257              	.LC29:
 5258 0044 0A00     		.string	"\n"
 5259 0046 0000     		.align	2
 5260              	.LC31:
 5261 0048 1B5B3438 		.string	"\033[48;2;%d;%d;%dm "
 5261      3B323B25 
 5261      643B2564 
 5261      3B25646D 
 5261      2000
 5262              		.text
 5263              		.align	2
 5264              		.globl	render
 5266              	render:
 5267              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5268 3cfc B7070000 		lui	a5,%hi(.LC9)	# tmp179,
 5269 3d00 03A84700 		lw	a6,%lo(.LC9+4)(a5)		#,
 5270 3d04 83A70700 		lw	a5,%lo(.LC9)(a5)		# tmp197,
 5271              	# main_raytrace_termio.c:287: void render(volatile Pixel *fb, Sphere* spheres, int nb_spheres, Ligh
 5272 3d08 130101F4 		addi	sp,sp,-192	#,,
 5273              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5274 3d0c 23220101 		sw	a6,4(sp)	#, %sfp
 5275 3d10 2320F100 		sw	a5,0(sp)	# tmp197, %sfp
 5276              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5277 3d14 B7070000 		lui	a5,%hi(.LC30)	# tmp182,
 5278 3d18 03A84700 		lw	a6,%lo(.LC30+4)(a5)		#,
 5279 3d1c 83A70700 		lw	a5,%lo(.LC30)(a5)		# tmp198,
 5280              	# main_raytrace_termio.c:287: void render(volatile Pixel *fb, Sphere* spheres, int nb_spheres, Ligh
 5281 3d20 2328210B 		sw	s2,176(sp)	#,
 5282              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5283 3d24 23260103 		sw	a6,44(sp)	#, %sfp
 5284 3d28 2324F102 		sw	a5,40(sp)	# tmp198, %sfp
 5285              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5286 3d2c B7070000 		lui	a5,%hi(.LC24)	# tmp186,
 5287 3d30 03A84700 		lw	a6,%lo(.LC24+4)(a5)		#,
 5288 3d34 83A70700 		lw	a5,%lo(.LC24)(a5)		# tmp191,
 5289              	# main_raytrace_termio.c:287: void render(volatile Pixel *fb, Sphere* spheres, int nb_spheres, Ligh
 5290 3d38 232E7109 		sw	s7,156(sp)	#,
 5291              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5292 3d3c 232A0101 		sw	a6,20(sp)	#, %sfp
 5293 3d40 2328F100 		sw	a5,16(sp)	# tmp191, %sfp
 5294              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5295 3d44 B7070000 		lui	a5,%hi(.LC25)	# tmp187,
 5296 3d48 03A84700 		lw	a6,%lo(.LC25+4)(a5)		#,
 5297 3d4c 83A70700 		lw	a5,%lo(.LC25)(a5)		# tmp119,
 5298              	# main_raytrace_termio.c:287: void render(volatile Pixel *fb, Sphere* spheres, int nb_spheres, Ligh
 5299 3d50 232C8109 		sw	s8,152(sp)	#,
 5300              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5301 3d54 23260101 		sw	a6,12(sp)	#, %sfp
 5302 3d58 2324F100 		sw	a5,8(sp)	# tmp119, %sfp
 5303              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5304 3d5c B7070000 		lui	a5,%hi(.LC26)	# tmp188,
 5305 3d60 03A84700 		lw	a6,%lo(.LC26+4)(a5)		#,
 5306 3d64 83A70700 		lw	a5,%lo(.LC26)(a5)		# tmp192,
 5307              	# main_raytrace_termio.c:287: void render(volatile Pixel *fb, Sphere* spheres, int nb_spheres, Ligh
 5308 3d68 232A9109 		sw	s9,148(sp)	#,
 5309 3d6c 2328A109 		sw	s10,144(sp)	#,
 5310              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5311 3d70 232CF100 		sw	a5,24(sp)	# tmp192, %sfp
 5312              	# main_raytrace_termio.c:287: void render(volatile Pixel *fb, Sphere* spheres, int nb_spheres, Ligh
 5313 3d74 232E110A 		sw	ra,188(sp)	#,
 5314 3d78 232C810A 		sw	s0,184(sp)	#,
 5315 3d7c 232A910A 		sw	s1,180(sp)	#,
 5316 3d80 2326310B 		sw	s3,172(sp)	#,
 5317 3d84 2324410B 		sw	s4,168(sp)	#,
 5318 3d88 2322510B 		sw	s5,164(sp)	#,
 5319 3d8c 2320610B 		sw	s6,160(sp)	#,
 5320 3d90 2326B109 		sw	s11,140(sp)	#,
 5321              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 5322 3d94 B7070000 		lui	a5,%hi(.LC1)	# tmp246,
 5323              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5324 3d98 232E0101 		sw	a6,28(sp)	#, %sfp
 5325              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 5326 3d9c 03A90700 		lw	s2,%lo(.LC1)(a5)		# tmp193,
 5327              	# main_raytrace_termio.c:287: void render(volatile Pixel *fb, Sphere* spheres, int nb_spheres, Ligh
 5328 3da0 138D0500 		mv	s10,a1	# spheres, tmp202
 5329 3da4 930C0600 		mv	s9,a2	# nb_spheres, tmp203
 5330 3da8 138C0600 		mv	s8,a3	# lights, tmp204
 5331 3dac 930B0700 		mv	s7,a4	# nb_lights, tmp205
 5332              	# main_raytrace_termio.c:294:   for (int j = 0; j<VRENDER; j++) { // actual rendering loop
 5333 3db0 23220102 		sw	zero,36(sp)	#, %sfp
 5334              	.L472:
 5335              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5336 3db4 03254102 		lw	a0,36(sp)		#, %sfp
 5337              	# main_raytrace_termio.c:306:     for (int i = 0; i<HRENDER; i++) {
 5338 3db8 13040000 		li	s0,0		# i,
 5339              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5340 3dbc 97000000 		call	__floatsidf		#
 5340      E7800000 
 5341 3dc4 03260100 		lw	a2,0(sp)		#, %sfp
 5342 3dc8 83264100 		lw	a3,4(sp)		#, %sfp
 5343 3dcc 97000000 		call	__adddf3		#
 5343      E7800000 
 5344 3dd4 13060500 		mv	a2,a0	# tmp228,
 5345 3dd8 93860500 		mv	a3,a1	#,
 5346              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5347 3ddc 03258102 		lw	a0,40(sp)		#, %sfp
 5348 3de0 8325C102 		lw	a1,44(sp)		#, %sfp
 5349 3de4 97000000 		call	__subdf3		#
 5349      E7800000 
 5350              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5351 3dec 97000000 		call	__truncdfsf2		#
 5351      E7800000 
 5352              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 5353 3df4 B7070000 		lui	a5,%hi(.LC1)	# tmp260,
 5354 3df8 03AB0700 		lw	s6,%lo(.LC1)(a5)		# tmp160,
 5355              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5356 3dfc 93040500 		mv	s1,a0	# _70, tmp229
 5357              	.L477:
 5358              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5359 3e00 13050400 		mv	a0,s0	#, i
 5360 3e04 97000000 		call	__floatsidf		#
 5360      E7800000 
 5361 3e0c 03260100 		lw	a2,0(sp)		#, %sfp
 5362 3e10 83264100 		lw	a3,4(sp)		#, %sfp
 5363 3e14 97000000 		call	__adddf3		#
 5363      E7800000 
 5364              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5365 3e1c 03260101 		lw	a2,16(sp)		#, %sfp
 5366 3e20 83264101 		lw	a3,20(sp)		#, %sfp
 5367 3e24 97000000 		call	__subdf3		#
 5367      E7800000 
 5368              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5369 3e2c 97000000 		call	__truncdfsf2		#
 5369      E7800000 
 5370 3e34 930A0500 		mv	s5,a0	# tmp206,
 5371              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5372 3e38 8325C100 		lw	a1,12(sp)		#, %sfp
 5373 3e3c 03258100 		lw	a0,8(sp)		#, %sfp
 5374 3e40 97000000 		call	tan		#
 5374      E7800000 
 5375 3e48 13060500 		mv	a2,a0	# tmp207,
 5376 3e4c 93860500 		mv	a3,a1	#,
 5377              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5378 3e50 97000000 		call	__adddf3		#
 5378      E7800000 
 5379 3e58 13060500 		mv	a2,a0	# tmp208,
 5380 3e5c 93860500 		mv	a3,a1	#,
 5381              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5382 3e60 03258101 		lw	a0,24(sp)		#, %sfp
 5383 3e64 8325C101 		lw	a1,28(sp)		#, %sfp
 5384 3e68 97000000 		call	__divdf3		#
 5384      E7800000 
 5385              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5386 3e70 97000000 		call	__truncdfsf2		#
 5386      E7800000 
 5387              	# main_raytrace_termio.c:41:   return V;
 5388 3e78 93070000 		mv	a5,zero	# tmp247,
 5389              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5390 3e7c 93090500 		mv	s3,a0	# tmp209,
 5391              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5392 3e80 93850A00 		mv	a1,s5	#, tmp118
 5393 3e84 13850A00 		mv	a0,s5	#, tmp118
 5394              	# main_raytrace_termio.c:41:   return V;
 5395 3e88 2324F106 		sw	a5,104(sp)	# tmp247, D.2347.x
 5396 3e8c 2326F106 		sw	a5,108(sp)	# tmp248, D.2347.y
 5397 3e90 2328F106 		sw	a5,112(sp)	# tmp249, D.2347.z
 5398              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5399 3e94 97000000 		call	__mulsf3		#
 5399      E7800000 
 5400 3e9c 130A0500 		mv	s4,a0	# tmp125, tmp210
 5401              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5402 3ea0 93850400 		mv	a1,s1	#, _70
 5403 3ea4 13850400 		mv	a0,s1	#, _70
 5404 3ea8 97000000 		call	__mulsf3		#
 5404      E7800000 
 5405 3eb0 93050500 		mv	a1,a0	# tmp211,
 5406              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5407 3eb4 13050A00 		mv	a0,s4	#, tmp125
 5408 3eb8 97000000 		call	__addsf3		#
 5408      E7800000 
 5409 3ec0 130A0500 		mv	s4,a0	# tmp127, tmp212
 5410              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5411 3ec4 93850900 		mv	a1,s3	#, tmp124
 5412 3ec8 13850900 		mv	a0,s3	#, tmp124
 5413 3ecc 97000000 		call	__mulsf3		#
 5413      E7800000 
 5414 3ed4 93050500 		mv	a1,a0	# tmp213,
 5415              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5416 3ed8 13050A00 		mv	a0,s4	#, tmp127
 5417 3edc 97000000 		call	__addsf3		#
 5417      E7800000 
 5418 3ee4 97000000 		call	sqrtf		#
 5418      E7800000 
 5419 3eec 93050500 		mv	a1,a0	# tmp214,
 5420              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 5421 3ef0 13050900 		mv	a0,s2	#, tmp193
 5422 3ef4 97000000 		call	__divsf3		#
 5422      E7800000 
 5423 3efc 130A0500 		mv	s4,a0	# tmp131, tmp215
 5424              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 5425 3f00 93050500 		mv	a1,a0	#, tmp131
 5426 3f04 13850A00 		mv	a0,s5	#, tmp118
 5427 3f08 97000000 		call	__mulsf3		#
 5427      E7800000 
 5428 3f10 930A0500 		mv	s5,a0	# tmp216,
 5429 3f14 93850400 		mv	a1,s1	#, _70
 5430 3f18 13050A00 		mv	a0,s4	#, tmp131
 5431 3f1c 97000000 		call	__mulsf3		#
 5431      E7800000 
 5432 3f24 93070500 		mv	a5,a0	# tmp217,
 5433 3f28 93050A00 		mv	a1,s4	#, tmp131
 5434 3f2c 13850900 		mv	a0,s3	#, tmp124
 5435              	# main_raytrace_termio.c:41:   return V;
 5436 3f30 93890700 		mv	s3,a5	# tmp200, tmp217
 5437              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 5438 3f34 97000000 		call	__mulsf3		#
 5438      E7800000 
 5439              	# main_raytrace_termio.c:310:       vec3 C = cast_ray(make_vec3(0,0,0), vec3_normalize(make_vec3(di
 5440 3f3c 03238106 		lw	t1,104(sp)		# D.2347, D.2347
 5441              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 5442 3f40 93080500 		mv	a7,a0	# tmp218,
 5443              	# main_raytrace_termio.c:310:       vec3 C = cast_ray(make_vec3(0,0,0), vec3_normalize(make_vec3(di
 5444 3f44 13880B00 		mv	a6,s7	#, nb_lights
 5445 3f48 23206104 		sw	t1,64(sp)	# D.2347,
 5446 3f4c 0323C106 		lw	t1,108(sp)		# D.2347, D.2347
 5447 3f50 93070C00 		mv	a5,s8	#, lights
 5448 3f54 13870C00 		mv	a4,s9	#, nb_spheres
 5449 3f58 23226104 		sw	t1,68(sp)	# D.2347,
 5450 3f5c 03230107 		lw	t1,112(sp)		# D.2347, D.2347
 5451 3f60 93060D00 		mv	a3,s10	#, spheres
 5452 3f64 13060103 		addi	a2,sp,48	#,,
 5453 3f68 93050104 		addi	a1,sp,64	#, tmp250,
 5454 3f6c 1305C105 		addi	a0,sp,92	#, tmp251,
 5455 3f70 23246104 		sw	t1,72(sp)	# D.2347,
 5456 3f74 23285103 		sw	s5,48(sp)	# tmp199,
 5457 3f78 232A3103 		sw	s3,52(sp)	# tmp200,
 5458 3f7c 232C1103 		sw	a7,56(sp)	# tmp218,
 5459 3f80 97000000 		call	cast_ray.constprop.0		#
 5459      E7800000 
 5460              	# main_raytrace_termio.c:311:       set_pixel(fb, i,j,C.x,C.y,C.z);
 5461 3f88 032AC105 		lw	s4,92(sp)		# _10, C.x
 5462              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 5463 3f8c 93050900 		mv	a1,s2	#, tmp193
 5464              	# main_raytrace_termio.c:311:       set_pixel(fb, i,j,C.x,C.y,C.z);
 5465 3f90 832D0106 		lw	s11,96(sp)		# _11, C.y
 5466              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 5467 3f94 13050A00 		mv	a0,s4	#, _10
 5468 3f98 97000000 		call	__gtsf2		#
 5468      E7800000 
 5469 3fa0 9309F00F 		li	s3,255		# prephitmp_86,
 5470              	# main_raytrace_termio.c:311:       set_pixel(fb, i,j,C.x,C.y,C.z);
 5471 3fa4 832A4106 		lw	s5,100(sp)		# _12, C.z
 5472              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 5473 3fa8 634EA000 		bgt	a0,zero,.L473	#, tmp219,,
 5474              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 5475 3fac 93050000 		mv	a1,zero	#,
 5476 3fb0 13050A00 		mv	a0,s4	#, _10
 5477 3fb4 97000000 		call	__ltsf2		#
 5477      E7800000 
 5478 3fbc 93090000 		li	s3,0		# prephitmp_86,
 5479 3fc0 63500510 		bge	a0,zero,.L488	#, tmp220,,
 5480              	.L473:
 5481              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 5482 3fc4 93050900 		mv	a1,s2	#, tmp193
 5483 3fc8 13850D00 		mv	a0,s11	#, _11
 5484 3fcc 97000000 		call	__gtsf2		#
 5484      E7800000 
 5485 3fd4 130AF00F 		li	s4,255		# prephitmp_92,
 5486 3fd8 634EA000 		bgt	a0,zero,.L474	#, tmp222,,
 5487              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 5488 3fdc 93050000 		mv	a1,zero	#,
 5489 3fe0 13850D00 		mv	a0,s11	#, _11
 5490 3fe4 97000000 		call	__ltsf2		#
 5490      E7800000 
 5491 3fec 130A0000 		li	s4,0		# prephitmp_92,
 5492 3ff0 635C0510 		bge	a0,zero,.L489	#, tmp223,,
 5493              	.L474:
 5494              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 5495 3ff4 93050B00 		mv	a1,s6	#, tmp160
 5496 3ff8 13850A00 		mv	a0,s5	#, _12
 5497 3ffc 97000000 		call	__gtsf2		#
 5497      E7800000 
 5498 4004 9306F00F 		li	a3,255		# prephitmp_74,
 5499 4008 634EA000 		bgt	a0,zero,.L475	#, tmp225,,
 5500              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 5501 400c 93050000 		mv	a1,zero	#,
 5502 4010 13850A00 		mv	a0,s5	#, _12
 5503 4014 97000000 		call	__ltsf2		#
 5503      E7800000 
 5504 401c 93060000 		li	a3,0		# prephitmp_74,
 5505 4020 6352050C 		bge	a0,zero,.L490	#, tmp226,,
 5506              	.L475:
 5507              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 5508 4024 B7070000 		lui	a5,%hi(.LC31)	# tmp261,
 5509 4028 13850700 		addi	a0,a5,%lo(.LC31)	#, tmp261,
 5510 402c 13060A00 		mv	a2,s4	#, prephitmp_92
 5511 4030 93850900 		mv	a1,s3	#, prephitmp_86
 5512 4034 97000000 		call	printf		#
 5512      E7800000 
 5513              	# main_raytrace_termio.c:254:     if(x == HRENDER-1) {
 5514 403c 9307F005 		li	a5,95		# tmp177,
 5515 4040 6306F400 		beq	s0,a5,.L491	#, i, tmp177,
 5516              	# main_raytrace_termio.c:306:     for (int i = 0; i<HRENDER; i++) {
 5517 4044 13041400 		addi	s0,s0,1	#, i, i
 5518 4048 6FF09FDB 		j	.L477		#
 5519              	.L491:
 5520              	# main_raytrace_termio.c:255:       printf("\033[48;2;0;0;0m");
 5521 404c B7070000 		lui	a5,%hi(.LC28)	# tmp255,
 5522 4050 13850700 		addi	a0,a5,%lo(.LC28)	#, tmp255,
 5523 4054 97000000 		call	printf		#
 5523      E7800000 
 5524              	# main_raytrace_termio.c:256:       printf("\n");
 5525 405c B7070000 		lui	a5,%hi(.LC29)	# tmp256,
 5526 4060 13850700 		addi	a0,a5,%lo(.LC29)	#, tmp256,
 5527 4064 97000000 		call	printf		#
 5527      E7800000 
 5528              	# main_raytrace_termio.c:294:   for (int j = 0; j<VRENDER; j++) { // actual rendering loop
 5529 406c 83274102 		lw	a5,36(sp)		# j, %sfp
 5530 4070 93871700 		addi	a5,a5,1	#, j, j
 5531 4074 13870700 		mv	a4,a5	# j, j
 5532 4078 2322F102 		sw	a5,36(sp)	# j, %sfp
 5533              	# main_raytrace_termio.c:294:   for (int j = 0; j<VRENDER; j++) { // actual rendering loop
 5534 407c 93070004 		li	a5,64		# tmp170,
 5535 4080 E31AF7D2 		bne	a4,a5,.L472	#, j, tmp170,
 5536              	# main_raytrace_termio.c:329: }
 5537 4084 8320C10B 		lw	ra,188(sp)		#,
 5538 4088 0324810B 		lw	s0,184(sp)		#,
 5539 408c 8324410B 		lw	s1,180(sp)		#,
 5540 4090 0329010B 		lw	s2,176(sp)		#,
 5541 4094 8329C10A 		lw	s3,172(sp)		#,
 5542 4098 032A810A 		lw	s4,168(sp)		#,
 5543 409c 832A410A 		lw	s5,164(sp)		#,
 5544 40a0 032B010A 		lw	s6,160(sp)		#,
 5545 40a4 832BC109 		lw	s7,156(sp)		#,
 5546 40a8 032C8109 		lw	s8,152(sp)		#,
 5547 40ac 832C4109 		lw	s9,148(sp)		#,
 5548 40b0 032D0109 		lw	s10,144(sp)		#,
 5549 40b4 832DC108 		lw	s11,140(sp)		#,
 5550 40b8 1301010C 		addi	sp,sp,192	#,,
 5551 40bc 67800000 		jr	ra		#
 5552              	.L488:
 5553              	# main_raytrace_termio.c:244:   uint8_t R = (uint8_t)(255.0f * r);
 5554 40c0 B7070000 		lui	a5,%hi(.LC27)	# tmp252,
 5555 40c4 83A50700 		lw	a1,%lo(.LC27)(a5)		#,
 5556 40c8 13050A00 		mv	a0,s4	#, _10
 5557 40cc 97000000 		call	__mulsf3		#
 5557      E7800000 
 5558              	# main_raytrace_termio.c:244:   uint8_t R = (uint8_t)(255.0f * r);
 5559 40d4 97000000 		call	__fixunssfsi		#
 5559      E7800000 
 5560              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 5561 40dc 9379F50F 		andi	s3,a0,0xff	# prephitmp_86, tmp221
 5562 40e0 6FF05FEE 		j	.L473		#
 5563              	.L490:
 5564              	# main_raytrace_termio.c:246:   uint8_t B = (uint8_t)(255.0f * b);
 5565 40e4 B7070000 		lui	a5,%hi(.LC27)	# tmp254,
 5566 40e8 83A50700 		lw	a1,%lo(.LC27)(a5)		#,
 5567 40ec 13850A00 		mv	a0,s5	#, _12
 5568 40f0 97000000 		call	__mulsf3		#
 5568      E7800000 
 5569              	# main_raytrace_termio.c:246:   uint8_t B = (uint8_t)(255.0f * b);
 5570 40f8 97000000 		call	__fixunssfsi		#
 5570      E7800000 
 5571              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 5572 4100 9376F50F 		andi	a3,a0,0xff	# prephitmp_74, tmp227
 5573 4104 6FF01FF2 		j	.L475		#
 5574              	.L489:
 5575              	# main_raytrace_termio.c:245:   uint8_t G = (uint8_t)(255.0f * g);
 5576 4108 B7070000 		lui	a5,%hi(.LC27)	# tmp253,
 5577 410c 83A50700 		lw	a1,%lo(.LC27)(a5)		#,
 5578 4110 13850D00 		mv	a0,s11	#, _11
 5579 4114 97000000 		call	__mulsf3		#
 5579      E7800000 
 5580              	# main_raytrace_termio.c:245:   uint8_t G = (uint8_t)(255.0f * g);
 5581 411c 97000000 		call	__fixunssfsi		#
 5581      E7800000 
 5582              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 5583 4124 137AF50F 		andi	s4,a0,0xff	# prephitmp_92, tmp224
 5584 4128 6FF0DFEC 		j	.L474		#
 5586              		.align	2
 5587              		.globl	init_scene
 5589              	init_scene:
 5590              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5591 412c B7070000 		lui	a5,%hi(.LC1)	# tmp88,
 5592 4130 03A70700 		lw	a4,%lo(.LC1)(a5)		# tmp89,
 5593 4134 B7070000 		lui	a5,%hi(.LC13)	# tmp100,
 5594 4138 83A60700 		lw	a3,%lo(.LC13)(a5)		# tmp101,
 5595 413c B7070000 		lui	a5,%hi(.LC11)	# tmp96,
 5596 4140 03A60700 		lw	a2,%lo(.LC11)(a5)		# tmp97,
 5597              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5598 4144 B7070000 		lui	a5,%hi(.LC40)	# tmp138,
 5599 4148 83A50700 		lw	a1,%lo(.LC40)(a5)		# tmp139,
 5600              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5601 414c B7070000 		lui	a5,%hi(.LC34)	# tmp84,
 5602 4150 03A50700 		lw	a0,%lo(.LC34)(a5)		# tmp85,
 5603 4154 B7070000 		lui	a5,%hi(.LC35)	# tmp92,
 5604 4158 03AE0700 		lw	t3,%lo(.LC35)(a5)		# tmp93,
 5605 415c B7070000 		lui	a5,%hi(.LC36)	# tmp106,
 5606 4160 83A80700 		lw	a7,%lo(.LC36)(a5)		# tmp107,
 5607 4164 B7070000 		lui	a5,%hi(.LC37)	# tmp118,
 5608              	# main_raytrace_termio.c:337: void init_scene() {
 5609 4168 130101FF 		addi	sp,sp,-16	#,,
 5610              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5611 416c 03A80700 		lw	a6,%lo(.LC37)(a5)		# tmp119,
 5612 4170 B7070000 		lui	a5,%hi(.LANCHOR0)	# tmp73,
 5613 4174 93870700 		addi	a5,a5,%lo(.LANCHOR0)	# tmp72, tmp73,
 5614              	# main_raytrace_termio.c:337: void init_scene() {
 5615 4178 23268100 		sw	s0,12(sp)	#,
 5616 417c 23249100 		sw	s1,8(sp)	#,
 5617 4180 23222101 		sw	s2,4(sp)	#,
 5618 4184 23203101 		sw	s3,0(sp)	#,
 5619              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5620 4188 370F0000 		lui	t5,%hi(.LC2)	# tmp122,
 5621              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5622 418c 23A21743 		sw	a7,1060(a5)	# tmp107, MEM <float> [(struct  *)&spheres + 36B]
 5623 4190 23A41743 		sw	a7,1064(a5)	# tmp107, MEM <float> [(struct  *)&spheres + 40B]
 5624              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5625 4194 83280F00 		lw	a7,%lo(.LC2)(t5)		# tmp123,
 5626 4198 B70E0000 		lui	t4,%hi(.LC38)	# tmp126,
 5627              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5628 419c B7020000 		lui	t0,%hi(.LC32)	# tmp74,
 5629              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5630 41a0 23AA1743 		sw	a7,1076(a5)	# tmp123, MEM <float> [(struct  *)&spheres + 52B]
 5631 41a4 83A80E00 		lw	a7,%lo(.LC38)(t4)		# tmp127,
 5632              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5633 41a8 B70F0000 		lui	t6,%hi(.LC33)	# tmp80,
 5634 41ac 83A20200 		lw	t0,%lo(.LC32)(t0)		# tmp75,
 5635 41b0 83AF0F00 		lw	t6,%lo(.LC33)(t6)		# tmp81,
 5636              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5637 41b4 37030000 		lui	t1,%hi(.LC39)	# tmp130,
 5638 41b8 23AC1743 		sw	a7,1080(a5)	# tmp127, MEM <float> [(struct  *)&spheres + 56B]
 5639 41bc 83280300 		lw	a7,%lo(.LC39)(t1)		# tmp131,
 5640              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5641 41c0 93090000 		mv	s3,zero	# tmp315,
 5642 41c4 23A05740 		sw	t0,1024(a5)	# tmp75, MEM <float> [(struct  *)&spheres]
 5643 41c8 23A23741 		sw	s3,1028(a5)	# tmp315, MEM <float> [(struct  *)&spheres + 4B]
 5644 41cc 23A4F741 		sw	t6,1032(a5)	# tmp81, MEM <float> [(struct  *)&spheres + 8B]
 5645 41d0 23A6A740 		sw	a0,1036(a5)	# tmp85, MEM <float> [(struct  *)&spheres + 12B]
 5646 41d4 23A8E740 		sw	a4,1040(a5)	# tmp89, MEM <float> [(struct  *)&spheres + 16B]
 5647 41d8 23AAC741 		sw	t3,1044(a5)	# tmp93, MEM <float> [(struct  *)&spheres + 20B]
 5648 41dc 23ACC740 		sw	a2,1048(a5)	# tmp97, MEM <float> [(struct  *)&spheres + 24B]
 5649 41e0 23AED740 		sw	a3,1052(a5)	# tmp101, MEM <float> [(struct  *)&spheres + 28B]
 5650 41e4 23A03743 		sw	s3,1056(a5)	# tmp316, MEM <float> [(struct  *)&spheres + 32B]
 5651 41e8 23A6C742 		sw	a2,1068(a5)	# tmp97, MEM <float> [(struct  *)&spheres + 44B]
 5652              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5653 41ec B7040000 		lui	s1,%hi(.LC18)	# tmp160,
 5654              	# main_raytrace_termio.c:343:   spheres[0] = make_Sphere(make_vec3(-3,    0,   -16), 2,      ivory)
 5655 41f0 23A80743 		sw	a6,1072(a5)	# tmp119, MEM <float> [(struct  *)&spheres + 48B]
 5656              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5657 41f4 23AE1743 		sw	a7,1084(a5)	# tmp131, MEM <float> [(struct  *)&spheres + 60B]
 5658 41f8 23ACC745 		sw	t3,1112(a5)	# tmp93, MEM <float> [(struct  *)&spheres + 88B]
 5659 41fc 03AE0400 		lw	t3,%lo(.LC18)(s1)		# tmp161,
 5660 4200 37040000 		lui	s0,%hi(.LC41)	# tmp168,
 5661              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5662 4204 B7030000 		lui	t2,%hi(.LC42)	# tmp176,
 5663              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5664 4208 23AEC745 		sw	t3,1116(a5)	# tmp161, MEM <float> [(struct  *)&spheres + 92B]
 5665 420c 032E0400 		lw	t3,%lo(.LC41)(s0)		# tmp169,
 5666              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5667 4210 B7020000 		lui	t0,%hi(.LC44)	# tmp184,
 5668 4214 B7080000 		lui	a7,%hi(.LC43)	# tmp180,
 5669              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5670 4218 23A2C747 		sw	t3,1124(a5)	# tmp169, MEM <float> [(struct  *)&spheres + 100B]
 5671              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5672 421c 03AE0300 		lw	t3,%lo(.LC42)(t2)		# tmp177,
 5673 4220 03A30800 		lw	t1,%lo(.LC43)(a7)		# tmp181,
 5674              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5675 4224 23A0A744 		sw	a0,1088(a5)	# tmp85, MEM <float> [(struct  *)&spheres + 64B]
 5676              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5677 4228 23A6C747 		sw	t3,1132(a5)	# tmp177, MEM <float> [(struct  *)&spheres + 108B]
 5678 422c 03AE0200 		lw	t3,%lo(.LC44)(t0)		# tmp185,
 5679 4230 B70F0000 		lui	t6,%hi(.LC45)	# tmp192,
 5680              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5681 4234 37090000 		lui	s2,%hi(.LC19)	# tmp144,
 5682 4238 37050000 		lui	a0,%hi(.LC20)	# tmp152,
 5683              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5684 423c B7080000 		lui	a7,%hi(.LC46)	# tmp216,
 5685              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5686 4240 03250500 		lw	a0,%lo(.LC20)(a0)		# tmp153,
 5687              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5688 4244 83A80800 		lw	a7,%lo(.LC46)(a7)		# tmp217,
 5689              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5690 4248 03290900 		lw	s2,%lo(.LC19)(s2)		# tmp145,
 5691              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5692 424c 23AAC747 		sw	t3,1140(a5)	# tmp185, MEM <float> [(struct  *)&spheres + 116B]
 5693 4250 03AE0F00 		lw	t3,%lo(.LC45)(t6)		# tmp193,
 5694              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5695 4254 370F0000 		lui	t5,%hi(.LC47)	# tmp220,
 5696 4258 B7020000 		lui	t0,%hi(.LC49)	# tmp264,
 5697              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5698 425c 23A43745 		sw	s3,1096(a5)	# tmp317, MEM <float> [(struct  *)&spheres + 72B]
 5699 4260 23A62745 		sw	s2,1100(a5)	# tmp145, MEM <float> [(struct  *)&spheres + 76B]
 5700              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5701 4264 23A86746 		sw	t1,1136(a5)	# tmp181, MEM <float> [(struct  *)&spheres + 112B]
 5702 4268 23ACE746 		sw	a4,1144(a5)	# tmp89, MEM <float> [(struct  *)&spheres + 120B]
 5703 426c 23AEC747 		sw	t3,1148(a5)	# tmp193, MEM <float> [(struct  *)&spheres + 124B]
 5704 4270 23A23749 		sw	s3,1156(a5)	# tmp318, MEM <float> [(struct  *)&spheres + 132B]
 5705 4274 23A43749 		sw	s3,1160(a5)	# tmp319, MEM <float> [(struct  *)&spheres + 136B]
 5706 4278 23A6C748 		sw	a2,1164(a5)	# tmp97, MEM <float> [(struct  *)&spheres + 140B]
 5707              	# main_raytrace_termio.c:344:   spheres[1] = make_Sphere(make_vec3(-1.0, -1.5, -12), 2,      glass)
 5708 427c 23A2B744 		sw	a1,1092(a5)	# tmp139, MEM <float> [(struct  *)&spheres + 68B]
 5709 4280 23A8D744 		sw	a3,1104(a5)	# tmp101, MEM <float> [(struct  *)&spheres + 80B]
 5710 4284 23AAA744 		sw	a0,1108(a5)	# tmp153, MEM <float> [(struct  *)&spheres + 84B]
 5711 4288 23A0A746 		sw	a0,1120(a5)	# tmp153, MEM <float> [(struct  *)&spheres + 96B]
 5712              	# main_raytrace_termio.c:345:   spheres[2] = make_Sphere(make_vec3( 1.5, -0.5, -18), 3, red_rubber)
 5713 428c 23A4B746 		sw	a1,1128(a5)	# tmp139, MEM <float> [(struct  *)&spheres + 104B]
 5714 4290 23A0D748 		sw	a3,1152(a5)	# tmp101, MEM <float> [(struct  *)&spheres + 128B]
 5715 4294 23A8D748 		sw	a3,1168(a5)	# tmp101, MEM <float> [(struct  *)&spheres + 144B]
 5716 4298 23AAD748 		sw	a3,1172(a5)	# tmp101, MEM <float> [(struct  *)&spheres + 148B]
 5717 429c 23AC1749 		sw	a7,1176(a5)	# tmp217, MEM <float> [(struct  *)&spheres + 152B]
 5718              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5719 42a0 83260F00 		lw	a3,%lo(.LC47)(t5)		# tmp221,
 5720 42a4 23A6E74A 		sw	a4,1196(a5)	# tmp89, MEM <float> [(struct  *)&spheres + 172B]
 5721 42a8 23A0E74C 		sw	a4,1216(a5)	# tmp89, MEM <float> [(struct  *)&spheres + 192B]
 5722 42ac 23A2E74C 		sw	a4,1220(a5)	# tmp89, MEM <float> [(struct  *)&spheres + 196B]
 5723 42b0 23A4E74C 		sw	a4,1224(a5)	# tmp89, MEM <float> [(struct  *)&spheres + 200B]
 5724 42b4 03A70200 		lw	a4,%lo(.LC49)(t0)		# tmp265,
 5725              	# main_raytrace_termio.c:348:   lights[0] = make_Light(make_vec3(-20, 20,  20), 1.5);
 5726 42b8 B70F0000 		lui	t6,%hi(.LC50)	# tmp268,
 5727              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5728 42bc B70E0000 		lui	t4,%hi(.LC48)	# tmp224,
 5729 42c0 23A6E74C 		sw	a4,1228(a5)	# tmp265, MEM <float> [(struct  *)&spheres + 204B]
 5730              	# main_raytrace_termio.c:348:   lights[0] = make_Light(make_vec3(-20, 20,  20), 1.5);
 5731 42c4 03A70F00 		lw	a4,%lo(.LC50)(t6)		# tmp269,
 5732              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5733 42c8 23AED748 		sw	a3,1180(a5)	# tmp221, MEM <float> [(struct  *)&spheres + 156B]
 5734 42cc 83A60E00 		lw	a3,%lo(.LC48)(t4)		# tmp225,
 5735              	# main_raytrace_termio.c:349:   lights[1] = make_Light(make_vec3( 30, 50, -25), 1.8);
 5736 42d0 370F0000 		lui	t5,%hi(.LC53)	# tmp292,
 5737              	# main_raytrace_termio.c:348:   lights[0] = make_Light(make_vec3(-20, 20,  20), 1.5);
 5738 42d4 23A8E74C 		sw	a4,1232(a5)	# tmp269, lights[0].position.x
 5739              	# main_raytrace_termio.c:349:   lights[1] = make_Light(make_vec3( 30, 50, -25), 1.8);
 5740 42d8 03270F00 		lw	a4,%lo(.LC53)(t5)		# tmp293,
 5741              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5742 42dc 23A0D74A 		sw	a3,1184(a5)	# tmp225, MEM <float> [(struct  *)&spheres + 160B]
 5743              	# main_raytrace_termio.c:348:   lights[0] = make_Light(make_vec3(-20, 20,  20), 1.5);
 5744 42e0 B7060000 		lui	a3,%hi(.LC51)	# tmp272,
 5745 42e4 03A60600 		lw	a2,%lo(.LC51)(a3)		# tmp273,
 5746              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5747 42e8 B7030000 		lui	t2,%hi(.LC5)	# tmp232,
 5748              	# main_raytrace_termio.c:349:   lights[1] = make_Light(make_vec3( 30, 50, -25), 1.8);
 5749 42ec B7060000 		lui	a3,%hi(.LC52)	# tmp284,
 5750 42f0 B70E0000 		lui	t4,%hi(.LC54)	# tmp296,
 5751 42f4 83A60600 		lw	a3,%lo(.LC52)(a3)		# tmp285,
 5752              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5753 42f8 23A2674A 		sw	t1,1188(a5)	# tmp181, MEM <float> [(struct  *)&spheres + 164B]
 5754              	# main_raytrace_termio.c:349:   lights[1] = make_Light(make_vec3( 30, 50, -25), 1.8);
 5755 42fc 23A4E74E 		sw	a4,1256(a5)	# tmp293, lights[1].position.z
 5756              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5757 4300 03A30300 		lw	t1,%lo(.LC5)(t2)		# tmp233,
 5758              	# main_raytrace_termio.c:349:   lights[1] = make_Light(make_vec3( 30, 50, -25), 1.8);
 5759 4304 03A70E00 		lw	a4,%lo(.LC54)(t4)		# tmp297,
 5760              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5761 4308 23A8374B 		sw	s3,1200(a5)	# tmp320, MEM <float> [(struct  *)&spheres + 176B]
 5762 430c 23AE374B 		sw	s3,1212(a5)	# tmp321, MEM <float> [(struct  *)&spheres + 188B]
 5763              	# main_raytrace_termio.c:349:   lights[1] = make_Light(make_vec3( 30, 50, -25), 1.8);
 5764 4310 23A6E74E 		sw	a4,1260(a5)	# tmp297, lights[1].intensity
 5765              	# main_raytrace_termio.c:350:   lights[2] = make_Light(make_vec3( 30, 20,  30), 1.7);
 5766 4314 370E0000 		lui	t3,%hi(.LC55)	# tmp312,
 5767              	# main_raytrace_termio.c:346:   spheres[3] = make_Sphere(make_vec3( 7,    5,   -18), 4,     mirror)
 5768 4318 23A4674A 		sw	t1,1192(a5)	# tmp233, MEM <float> [(struct  *)&spheres + 168B]
 5769 431c 23AA174B 		sw	a7,1204(a5)	# tmp217, MEM <float> [(struct  *)&spheres + 180B]
 5770 4320 23ACA74A 		sw	a0,1208(a5)	# tmp153, MEM <float> [(struct  *)&spheres + 184B]
 5771              	# main_raytrace_termio.c:348:   lights[0] = make_Light(make_vec3(-20, 20,  20), 1.5);
 5772 4324 23AAC74C 		sw	a2,1236(a5)	# tmp273, lights[0].position.y
 5773 4328 23ACC74C 		sw	a2,1240(a5)	# tmp273, lights[0].position.z
 5774 432c 23AEB74C 		sw	a1,1244(a5)	# tmp139, lights[0].intensity
 5775              	# main_raytrace_termio.c:349:   lights[1] = make_Light(make_vec3( 30, 50, -25), 1.8);
 5776 4330 23A0D74E 		sw	a3,1248(a5)	# tmp285, lights[1].position.x
 5777 4334 23A2074F 		sw	a6,1252(a5)	# tmp119, lights[1].position.y
 5778              	# main_raytrace_termio.c:350:   lights[2] = make_Light(make_vec3( 30, 20,  30), 1.7);
 5779 4338 23A8D74E 		sw	a3,1264(a5)	# tmp285, lights[2].position.x
 5780 433c 23AAC74E 		sw	a2,1268(a5)	# tmp273, lights[2].position.y
 5781 4340 23ACD74E 		sw	a3,1272(a5)	# tmp285, lights[2].position.z
 5782 4344 03270E00 		lw	a4,%lo(.LC55)(t3)		# tmp313,
 5783              	# main_raytrace_termio.c:351: }
 5784 4348 0324C100 		lw	s0,12(sp)		#,
 5785 434c 83248100 		lw	s1,8(sp)		#,
 5786              	# main_raytrace_termio.c:350:   lights[2] = make_Light(make_vec3( 30, 20,  30), 1.7);
 5787 4350 23AEE74E 		sw	a4,1276(a5)	# tmp313, lights[2].intensity
 5788              	# main_raytrace_termio.c:351: }
 5789 4354 03294100 		lw	s2,4(sp)		#,
 5790 4358 83290100 		lw	s3,0(sp)		#,
 5791 435c 13010101 		addi	sp,sp,16	#,,
 5792 4360 67800000 		jr	ra		#
 5794              		.align	2
 5795              		.globl	fill_oled
 5797              	fill_oled:
 5798              	# main_raytrace_termio.c:356:       *((volatile uint32_t*) VIDEO) = (((uint32_t) rgb & 0xffff) << 1
 5799 4364 13180501 		slli	a6,a0,16	#, _2, tmp84
 5800              	# main_raytrace_termio.c:356:       *((volatile uint32_t*) VIDEO) = (((uint32_t) rgb & 0xffff) << 1
 5801 4368 B7050030 		li	a1,805306368		# tmp81,
 5802              	# main_raytrace_termio.c:354:   for (int y = 0; y < 64; y++) {
 5803 436c 13050000 		li	a0,0		# y,
 5804              	# main_raytrace_termio.c:355:     for (int x = 0; x < 96; x++) {
 5805 4370 37660000 		li	a2,24576		# tmp82,
 5806              	# main_raytrace_termio.c:354:   for (int y = 0; y < 64; y++) {
 5807 4374 93080004 		li	a7,64		# tmp83,
 5808              	.L495:
 5809 4378 B3660501 		or	a3,a0,a6	# _2, _20, y
 5810              	# main_raytrace_termio.c:353: void fill_oled(int rgb) {
 5811 437c 93070000 		li	a5,0		# ivtmp.1175,
 5812              	.L496:
 5813              	# main_raytrace_termio.c:356:       *((volatile uint32_t*) VIDEO) = (((uint32_t) rgb & 0xffff) << 1
 5814 4380 33E7D700 		or	a4,a5,a3	# _20, _9, ivtmp.1175
 5815              	# main_raytrace_termio.c:356:       *((volatile uint32_t*) VIDEO) = (((uint32_t) rgb & 0xffff) << 1
 5816 4384 23A4E500 		sw	a4,8(a1)	# _9, MEM[(volatile uint32_t *)805306376B]
 5817              	# main_raytrace_termio.c:355:     for (int x = 0; x < 96; x++) {
 5818 4388 93870710 		addi	a5,a5,256	#, ivtmp.1175, ivtmp.1175
 5819 438c E39AC7FE 		bne	a5,a2,.L496	#, ivtmp.1175, tmp82,
 5820              	# main_raytrace_termio.c:354:   for (int y = 0; y < 64; y++) {
 5821 4390 13051500 		addi	a0,a0,1	#, y, y
 5822              	# main_raytrace_termio.c:354:   for (int y = 0; y < 64; y++) {
 5823 4394 E31215FF 		bne	a0,a7,.L495	#, y, tmp83,
 5824              	# main_raytrace_termio.c:359: }
 5825 4398 67800000 		ret	
 5827              		.section	.text.startup,"ax",@progbits
 5828              		.align	2
 5829              		.globl	main
 5831              	main:
 5832              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5833 0000 B7070000 		lui	a5,%hi(.LC9)	# tmp263,
 5834 0004 03A84700 		lw	a6,%lo(.LC9+4)(a5)		#,
 5835 0008 83A70700 		lw	a5,%lo(.LC9)(a5)		# tmp280,
 5836              	# main_raytrace_termio.c:363: void main() {
 5837 000c 130101F3 		addi	sp,sp,-208	#,,
 5838              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5839 0010 23220101 		sw	a6,4(sp)	#, %sfp
 5840 0014 2320F100 		sw	a5,0(sp)	# tmp280, %sfp
 5841              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5842 0018 B7070000 		lui	a5,%hi(.LC30)	# tmp251,
 5843 001c 03A84700 		lw	a6,%lo(.LC30+4)(a5)		#,
 5844 0020 83A70700 		lw	a5,%lo(.LC30)(a5)		# tmp281,
 5845              	# main_raytrace_termio.c:363: void main() {
 5846 0024 2328610B 		sw	s6,176(sp)	#,
 5847              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5848 0028 23260103 		sw	a6,44(sp)	#, %sfp
 5849 002c 2324F102 		sw	a5,40(sp)	# tmp281, %sfp
 5850              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5851 0030 B7070000 		lui	a5,%hi(.LC24)	# tmp259,
 5852 0034 03A84700 		lw	a6,%lo(.LC24+4)(a5)		#,
 5853 0038 83A70700 		lw	a5,%lo(.LC24)(a5)		# tmp274,
 5854              	# main_raytrace_termio.c:363: void main() {
 5855 003c 2320A10B 		sw	s10,160(sp)	#,
 5856              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5857 0040 232A0101 		sw	a6,20(sp)	#, %sfp
 5858 0044 2328F100 		sw	a5,16(sp)	# tmp274, %sfp
 5859              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5860 0048 B7070000 		lui	a5,%hi(.LC25)	# tmp260,
 5861 004c 03A84700 		lw	a6,%lo(.LC25+4)(a5)		#,
 5862 0050 83A70700 		lw	a5,%lo(.LC25)(a5)		# tmp131,
 5863              	# main_raytrace_termio.c:363: void main() {
 5864 0054 232EB109 		sw	s11,156(sp)	#,
 5865              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5866 0058 23260101 		sw	a6,12(sp)	#, %sfp
 5867 005c 2324F100 		sw	a5,8(sp)	# tmp131, %sfp
 5868              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5869 0060 B7070000 		lui	a5,%hi(.LC26)	# tmp261,
 5870 0064 03A84700 		lw	a6,%lo(.LC26+4)(a5)		#,
 5871 0068 83A70700 		lw	a5,%lo(.LC26)(a5)		# tmp275,
 5872              	# main_raytrace_termio.c:363: void main() {
 5873 006c 2326110C 		sw	ra,204(sp)	#,
 5874 0070 2324810C 		sw	s0,200(sp)	#,
 5875              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5876 0074 232CF100 		sw	a5,24(sp)	# tmp275, %sfp
 5877              	# main_raytrace_termio.c:363: void main() {
 5878 0078 2322910C 		sw	s1,196(sp)	#,
 5879              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 5880 007c B7070000 		lui	a5,%hi(.LC1)	# tmp323,
 5881              	# main_raytrace_termio.c:363: void main() {
 5882 0080 2320210D 		sw	s2,192(sp)	#,
 5883 0084 232E310B 		sw	s3,188(sp)	#,
 5884 0088 232C410B 		sw	s4,184(sp)	#,
 5885 008c 232A510B 		sw	s5,180(sp)	#,
 5886 0090 2326710B 		sw	s7,172(sp)	#,
 5887 0094 2324810B 		sw	s8,168(sp)	#,
 5888 0098 2322910B 		sw	s9,164(sp)	#,
 5889              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5890 009c 232E0101 		sw	a6,28(sp)	#, %sfp
 5891              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 5892 00a0 03AB0700 		lw	s6,%lo(.LC1)(a5)		# tmp276,
 5893 00a4 B7070000 		lui	a5,%hi(.LANCHOR0+1232)	# tmp271,
 5894 00a8 938D074D 		addi	s11,a5,%lo(.LANCHOR0+1232)	# tmp255, tmp271,
 5895 00ac B7070000 		lui	a5,%hi(.LANCHOR0+1024)	# tmp272,
 5896 00b0 138D0740 		addi	s10,a5,%lo(.LANCHOR0+1024)	# tmp253, tmp272,
 5897              	.L508:
 5898              	# main_raytrace_termio.c:377:     init_scene();
 5899 00b4 97000000 		call	init_scene		#
 5899      E7800000 
 5900              	# main_raytrace_termio.c:378:     render(fb, spheres, nb_spheres, lights, nb_lights);
 5901 00bc B7070000 		lui	a5,%hi(nb_spheres)	# tmp324,
 5902 00c0 03AC0700 		lw	s8,%lo(nb_spheres)(a5)		# nb_spheres.57_2, nb_spheres
 5903 00c4 B7070000 		lui	a5,%hi(nb_lights)	# tmp325,
 5904 00c8 83AC0700 		lw	s9,%lo(nb_lights)(a5)		# nb_lights.58_3, nb_lights
 5905              	# main_raytrace_termio.c:294:   for (int j = 0; j<VRENDER; j++) { // actual rendering loop
 5906 00cc 23220102 		sw	zero,36(sp)	#, %sfp
 5907 00d0 6F00C003 		j	.L500		#
 5908              	.L509:
 5909              	# main_raytrace_termio.c:255:       printf("\033[48;2;0;0;0m");
 5910 00d4 B7070000 		lui	a5,%hi(.LC28)	# tmp334,
 5911 00d8 13850700 		addi	a0,a5,%lo(.LC28)	#, tmp334,
 5912 00dc 97000000 		call	printf		#
 5912      E7800000 
 5913              	# main_raytrace_termio.c:256:       printf("\n");
 5914 00e4 B7070000 		lui	a5,%hi(.LC29)	# tmp335,
 5915 00e8 13850700 		addi	a0,a5,%lo(.LC29)	#, tmp335,
 5916 00ec 97000000 		call	printf		#
 5916      E7800000 
 5917              	# main_raytrace_termio.c:294:   for (int j = 0; j<VRENDER; j++) { // actual rendering loop
 5918 00f4 83274102 		lw	a5,36(sp)		# j, %sfp
 5919 00f8 93871700 		addi	a5,a5,1	#, j, j
 5920 00fc 13870700 		mv	a4,a5	# j, j
 5921 0100 2322F102 		sw	a5,36(sp)	# j, %sfp
 5922              	# main_raytrace_termio.c:294:   for (int j = 0; j<VRENDER; j++) { // actual rendering loop
 5923 0104 93070004 		li	a5,64		# tmp188,
 5924 0108 6306F72A 		beq	a4,a5,.L504	#, j, tmp188,
 5925              	.L500:
 5926              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5927 010c 03254102 		lw	a0,36(sp)		#, %sfp
 5928              	# main_raytrace_termio.c:306:     for (int i = 0; i<HRENDER; i++) {
 5929 0110 130A0000 		li	s4,0		# i,
 5930              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5931 0114 97000000 		call	__floatsidf		#
 5931      E7800000 
 5932 011c 03260100 		lw	a2,0(sp)		#, %sfp
 5933 0120 83264100 		lw	a3,4(sp)		#, %sfp
 5934 0124 97000000 		call	__adddf3		#
 5934      E7800000 
 5935 012c 13060500 		mv	a2,a0	# tmp307,
 5936 0130 93860500 		mv	a3,a1	#,
 5937              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5938 0134 03258102 		lw	a0,40(sp)		#, %sfp
 5939 0138 8325C102 		lw	a1,44(sp)		#, %sfp
 5940 013c 97000000 		call	__subdf3		#
 5940      E7800000 
 5941              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5942 0144 97000000 		call	__truncdfsf2		#
 5942      E7800000 
 5943              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 5944 014c B7070000 		lui	a5,%hi(.LC1)	# tmp339,
 5945 0150 83AB0700 		lw	s7,%lo(.LC1)(a5)		# tmp178,
 5946              	# main_raytrace_termio.c:308:       float dir_y = -(j + 0.5) + VRENDER/2.;    // this flips the ima
 5947 0154 930A0500 		mv	s5,a0	# _7, tmp308
 5948              	.L505:
 5949              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5950 0158 13050A00 		mv	a0,s4	#, i
 5951 015c 97000000 		call	__floatsidf		#
 5951      E7800000 
 5952 0164 03260100 		lw	a2,0(sp)		#, %sfp
 5953 0168 83264100 		lw	a3,4(sp)		#, %sfp
 5954 016c 97000000 		call	__adddf3		#
 5954      E7800000 
 5955              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5956 0174 03260101 		lw	a2,16(sp)		#, %sfp
 5957 0178 83264101 		lw	a3,20(sp)		#, %sfp
 5958 017c 97000000 		call	__subdf3		#
 5958      E7800000 
 5959              	# main_raytrace_termio.c:307:       float dir_x =  (i + 0.5) - HRENDER/2.;
 5960 0184 97000000 		call	__truncdfsf2		#
 5960      E7800000 
 5961 018c 13090500 		mv	s2,a0	# tmp285,
 5962              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5963 0190 8325C100 		lw	a1,12(sp)		#, %sfp
 5964 0194 03258100 		lw	a0,8(sp)		#, %sfp
 5965 0198 97000000 		call	tan		#
 5965      E7800000 
 5966 01a0 13060500 		mv	a2,a0	# tmp286,
 5967 01a4 93860500 		mv	a3,a1	#,
 5968              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5969 01a8 97000000 		call	__adddf3		#
 5969      E7800000 
 5970 01b0 13060500 		mv	a2,a0	# tmp287,
 5971 01b4 93860500 		mv	a3,a1	#,
 5972              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5973 01b8 03258101 		lw	a0,24(sp)		#, %sfp
 5974 01bc 8325C101 		lw	a1,28(sp)		#, %sfp
 5975 01c0 97000000 		call	__divdf3		#
 5975      E7800000 
 5976              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5977 01c8 97000000 		call	__truncdfsf2		#
 5977      E7800000 
 5978              	# main_raytrace_termio.c:41:   return V;
 5979 01d0 93070000 		mv	a5,zero	# tmp326,
 5980              	# main_raytrace_termio.c:309:       float dir_z = -VRENDER/(2.*tan(fov/2.));
 5981 01d4 13040500 		mv	s0,a0	# tmp288,
 5982              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5983 01d8 93050900 		mv	a1,s2	#, tmp130
 5984 01dc 13050900 		mv	a0,s2	#, tmp130
 5985              	# main_raytrace_termio.c:41:   return V;
 5986 01e0 2322F108 		sw	a5,132(sp)	# tmp326, D.4336.x
 5987 01e4 2324F108 		sw	a5,136(sp)	# tmp327, D.4336.y
 5988 01e8 2326F108 		sw	a5,140(sp)	# tmp328, D.4336.z
 5989              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5990 01ec 97000000 		call	__mulsf3		#
 5990      E7800000 
 5991 01f4 93040500 		mv	s1,a0	# tmp137, tmp289
 5992              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5993 01f8 93850A00 		mv	a1,s5	#, _7
 5994 01fc 13850A00 		mv	a0,s5	#, _7
 5995 0200 97000000 		call	__mulsf3		#
 5995      E7800000 
 5996 0208 93050500 		mv	a1,a0	# tmp290,
 5997              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 5998 020c 13850400 		mv	a0,s1	#, tmp137
 5999 0210 97000000 		call	__addsf3		#
 5999      E7800000 
 6000 0218 93040500 		mv	s1,a0	# tmp139, tmp291
 6001              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 6002 021c 93050400 		mv	a1,s0	#, tmp136
 6003 0220 13050400 		mv	a0,s0	#, tmp136
 6004 0224 97000000 		call	__mulsf3		#
 6004      E7800000 
 6005 022c 93050500 		mv	a1,a0	# tmp292,
 6006              	# main_raytrace_termio.c:55: static inline float vec3_length(vec3 U)        { return sqrtf(U.x*U.x+
 6007 0230 13850400 		mv	a0,s1	#, tmp139
 6008 0234 97000000 		call	__addsf3		#
 6008      E7800000 
 6009 023c 97000000 		call	sqrtf		#
 6009      E7800000 
 6010 0244 93050500 		mv	a1,a0	# tmp293,
 6011              	# main_raytrace_termio.c:56: static inline vec3 vec3_normalize(vec3 U)      { return vec3_scale(1.0
 6012 0248 13050B00 		mv	a0,s6	#, tmp276
 6013 024c 97000000 		call	__divsf3		#
 6013      E7800000 
 6014 0254 93040500 		mv	s1,a0	# tmp143, tmp294
 6015              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 6016 0258 93050500 		mv	a1,a0	#, tmp143
 6017 025c 13050900 		mv	a0,s2	#, tmp130
 6018 0260 97000000 		call	__mulsf3		#
 6018      E7800000 
 6019 0268 93070500 		mv	a5,a0	# tmp144, tmp295
 6020 026c 93850400 		mv	a1,s1	#, tmp143
 6021 0270 13850A00 		mv	a0,s5	#, _7
 6022              	# main_raytrace_termio.c:41:   return V;
 6023 0274 13890700 		mv	s2,a5	# tmp282, tmp144
 6024 0278 232CF106 		sw	a5,120(sp)	# tmp144, D.4335.x
 6025              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 6026 027c 97000000 		call	__mulsf3		#
 6026      E7800000 
 6027 0284 93070500 		mv	a5,a0	# tmp145, tmp296
 6028 0288 93850400 		mv	a1,s1	#, tmp143
 6029 028c 13050400 		mv	a0,s0	#, tmp136
 6030              	# main_raytrace_termio.c:41:   return V;
 6031 0290 232EF106 		sw	a5,124(sp)	# tmp145, D.4335.y
 6032 0294 13840700 		mv	s0,a5	# tmp283, tmp145
 6033              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 6034 0298 97000000 		call	__mulsf3		#
 6034      E7800000 
 6035              	# main_raytrace_termio.c:310:       vec3 C = cast_ray(make_vec3(0,0,0), vec3_normalize(make_vec3(di
 6036 02a0 03234108 		lw	t1,132(sp)		# D.4336, D.4336
 6037              	# main_raytrace_termio.c:54: static inline vec3 vec3_scale(float s, vec3 U) { return make_vec3(s*U.
 6038 02a4 93080500 		mv	a7,a0	# tmp146, tmp297
 6039              	# main_raytrace_termio.c:310:       vec3 C = cast_ray(make_vec3(0,0,0), vec3_normalize(make_vec3(di
 6040 02a8 13880C00 		mv	a6,s9	#, nb_lights.58_3
 6041 02ac 23206104 		sw	t1,64(sp)	# D.4336,
 6042 02b0 03238108 		lw	t1,136(sp)		# D.4336, D.4336
 6043 02b4 93870D00 		mv	a5,s11	#, tmp255
 6044 02b8 13070C00 		mv	a4,s8	#, nb_spheres.57_2
 6045 02bc 23226104 		sw	t1,68(sp)	# D.4336,
 6046 02c0 0323C108 		lw	t1,140(sp)		# D.4336, D.4336
 6047 02c4 93060D00 		mv	a3,s10	#, tmp253
 6048 02c8 13060103 		addi	a2,sp,48	#,,
 6049 02cc 93050104 		addi	a1,sp,64	#, tmp329,
 6050 02d0 1305C106 		addi	a0,sp,108	#, tmp330,
 6051              	# main_raytrace_termio.c:41:   return V;
 6052 02d4 23201109 		sw	a7,128(sp)	# tmp146, D.4335.z
 6053              	# main_raytrace_termio.c:310:       vec3 C = cast_ray(make_vec3(0,0,0), vec3_normalize(make_vec3(di
 6054 02d8 23246104 		sw	t1,72(sp)	# D.4336,
 6055 02dc 23282103 		sw	s2,48(sp)	# tmp282,
 6056 02e0 232A8102 		sw	s0,52(sp)	# tmp283,
 6057 02e4 232C1103 		sw	a7,56(sp)	# tmp146,
 6058 02e8 97000000 		call	cast_ray.constprop.0		#
 6058      E7800000 
 6059              	# main_raytrace_termio.c:311:       set_pixel(fb, i,j,C.x,C.y,C.z);
 6060 02f0 8324C106 		lw	s1,108(sp)		# _50, C.x
 6061              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 6062 02f4 93050B00 		mv	a1,s6	#, tmp276
 6063              	# main_raytrace_termio.c:311:       set_pixel(fb, i,j,C.x,C.y,C.z);
 6064 02f8 83290107 		lw	s3,112(sp)		# _51, C.y
 6065              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 6066 02fc 13850400 		mv	a0,s1	#, _50
 6067 0300 97000000 		call	__gtsf2		#
 6067      E7800000 
 6068 0308 1304F00F 		li	s0,255		# prephitmp_103,
 6069              	# main_raytrace_termio.c:311:       set_pixel(fb, i,j,C.x,C.y,C.z);
 6070 030c 03294107 		lw	s2,116(sp)		# _52, C.z
 6071              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 6072 0310 634EA000 		bgt	a0,zero,.L501	#, tmp298,,
 6073              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 6074 0314 93050000 		mv	a1,zero	#,
 6075 0318 13850400 		mv	a0,s1	#, _50
 6076 031c 97000000 		call	__ltsf2		#
 6076      E7800000 
 6077 0324 13040000 		li	s0,0		# prephitmp_103,
 6078 0328 6350050E 		bge	a0,zero,.L521	#, tmp299,,
 6079              	.L501:
 6080              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 6081 032c 93050B00 		mv	a1,s6	#, tmp276
 6082 0330 13850900 		mv	a0,s3	#, _51
 6083 0334 97000000 		call	__gtsf2		#
 6083      E7800000 
 6084 033c 9304F00F 		li	s1,255		# prephitmp_109,
 6085 0340 634EA000 		bgt	a0,zero,.L502	#, tmp301,,
 6086              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 6087 0344 93050000 		mv	a1,zero	#,
 6088 0348 13850900 		mv	a0,s3	#, _51
 6089 034c 97000000 		call	__ltsf2		#
 6089      E7800000 
 6090 0354 93040000 		li	s1,0		# prephitmp_109,
 6091 0358 635C050E 		bge	a0,zero,.L522	#, tmp302,,
 6092              	.L502:
 6093              	# main_raytrace_termio.c:33: static inline float min(float x, float y) { return x<y?x:y; }
 6094 035c 93850B00 		mv	a1,s7	#, tmp178
 6095 0360 13050900 		mv	a0,s2	#, _52
 6096 0364 97000000 		call	__gtsf2		#
 6096      E7800000 
 6097 036c 9306F00F 		li	a3,255		# prephitmp_91,
 6098 0370 634EA000 		bgt	a0,zero,.L503	#, tmp304,,
 6099              	# main_raytrace_termio.c:32: static inline float max(float x, float y) { return x>y?x:y; }
 6100 0374 93050000 		mv	a1,zero	#,
 6101 0378 13050900 		mv	a0,s2	#, _52
 6102 037c 97000000 		call	__ltsf2		#
 6102      E7800000 
 6103 0384 93060000 		li	a3,0		# prephitmp_91,
 6104 0388 6352050A 		bge	a0,zero,.L523	#, tmp305,,
 6105              	.L503:
 6106              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 6107 038c B7070000 		lui	a5,%hi(.LC31)	# tmp340,
 6108 0390 13850700 		addi	a0,a5,%lo(.LC31)	#, tmp340,
 6109 0394 13860400 		mv	a2,s1	#, prephitmp_109
 6110 0398 93050400 		mv	a1,s0	#, prephitmp_103
 6111 039c 97000000 		call	printf		#
 6111      E7800000 
 6112              	# main_raytrace_termio.c:254:     if(x == HRENDER-1) {
 6113 03a4 9307F005 		li	a5,95		# tmp227,
 6114 03a8 E306FAD2 		beq	s4,a5,.L509	#, i, tmp227,
 6115              	# main_raytrace_termio.c:306:     for (int i = 0; i<HRENDER; i++) {
 6116 03ac 130A1A00 		addi	s4,s4,1	#, i, i
 6117 03b0 6FF09FDA 		j	.L505		#
 6118              	.L504:
 6119              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 6120              	 #APP
 6121              	# 68 "kianv_stdlib.h" 1
 6122              		rdcycleh a5	# tmp194
 6123              	# 0 "" 2
 6124              	 #NO_APP
 6125 03b8 2322F106 		sw	a5,100(sp)	# tmp194, tmph0
 6126              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 6127              	 #APP
 6128              	# 69 "kianv_stdlib.h" 1
 6129              		rdcycle  a5	# tmp195
 6130              	# 0 "" 2
 6131              	 #NO_APP
 6132 03c0 2324F106 		sw	a5,104(sp)	# tmp195, tmpl0
 6133              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 6134 03c4 03274106 		lw	a4,100(sp)		# tmph0.0_8, tmph0
 6135              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 6136 03c8 83268106 		lw	a3,104(sp)		# tmpl0.1_11, tmpl0
 6137              	# kianv_stdlib.h:80:   uint64_t lim = get_cycles() + wait;
 6138 03cc B7C7EB0B 		li	a5,199999488		# tmp250,
 6139 03d0 93870720 		addi	a5,a5,512	#, tmp236, tmp250
 6140 03d4 B387F600 		add	a5,a3,a5	# tmp236, tmp238, tmpl0.1_11
 6141 03d8 B3B6D700 		sltu	a3,a5,a3	# tmpl0.1_11, tmp202, tmp238
 6142 03dc 3307D700 		add	a4,a4,a3	# tmp202, tmp241, tmph0.0_8
 6143              	.L518:
 6144              	# kianv_stdlib.h:68:   asm volatile ("rdcycleh %0" : "=r"(tmph0));
 6145              	 #APP
 6146              	# 68 "kianv_stdlib.h" 1
 6147              		rdcycleh a3	# tmp210
 6148              	# 0 "" 2
 6149              	 #NO_APP
 6150 03e4 232ED104 		sw	a3,92(sp)	# tmp210, tmph0
 6151              	# kianv_stdlib.h:69:   asm volatile ("rdcycle  %0" : "=r"(tmpl0));
 6152              	 #APP
 6153              	# 69 "kianv_stdlib.h" 1
 6154              		rdcycle  a3	# tmp211
 6155              	# 0 "" 2
 6156              	 #NO_APP
 6157 03ec 2320D106 		sw	a3,96(sp)	# tmp211, tmpl0
 6158              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 6159 03f0 8326C105 		lw	a3,92(sp)		# tmph0.0_15, tmph0
 6160              	# kianv_stdlib.h:71:   return ((uint64_t)(tmph0)<<32) + tmpl0;
 6161 03f4 03260106 		lw	a2,96(sp)		# tmpl0.1_18, tmpl0
 6162              	# kianv_stdlib.h:81:   while (get_cycles() < lim)
 6163 03f8 E3E4E6FE 		bgtu	a4,a3,.L518	#, tmp241, tmph0.0_15,
 6164 03fc E31CD7CA 		bne	a4,a3,.L508	#, tmp241, tmph0.0_15,
 6165 0400 E360F6FE 		bgtu	a5,a2,.L518	#, tmp238, tmpl0.1_18,
 6166 0404 6FF01FCB 		j	.L508		#
 6167              	.L521:
 6168              	# main_raytrace_termio.c:244:   uint8_t R = (uint8_t)(255.0f * r);
 6169 0408 B7070000 		lui	a5,%hi(.LC27)	# tmp331,
 6170 040c 83A50700 		lw	a1,%lo(.LC27)(a5)		#,
 6171 0410 13850400 		mv	a0,s1	#, _50
 6172 0414 97000000 		call	__mulsf3		#
 6172      E7800000 
 6173              	# main_raytrace_termio.c:244:   uint8_t R = (uint8_t)(255.0f * r);
 6174 041c 97000000 		call	__fixunssfsi		#
 6174      E7800000 
 6175              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 6176 0424 1374F50F 		andi	s0,a0,0xff	# prephitmp_103, tmp300
 6177 0428 6FF05FF0 		j	.L501		#
 6178              	.L523:
 6179              	# main_raytrace_termio.c:246:   uint8_t B = (uint8_t)(255.0f * b);
 6180 042c B7070000 		lui	a5,%hi(.LC27)	# tmp333,
 6181 0430 83A50700 		lw	a1,%lo(.LC27)(a5)		#,
 6182 0434 13050900 		mv	a0,s2	#, _52
 6183 0438 97000000 		call	__mulsf3		#
 6183      E7800000 
 6184              	# main_raytrace_termio.c:246:   uint8_t B = (uint8_t)(255.0f * b);
 6185 0440 97000000 		call	__fixunssfsi		#
 6185      E7800000 
 6186              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 6187 0448 9376F50F 		andi	a3,a0,0xff	# prephitmp_91, tmp306
 6188 044c 6FF01FF4 		j	.L503		#
 6189              	.L522:
 6190              	# main_raytrace_termio.c:245:   uint8_t G = (uint8_t)(255.0f * g);
 6191 0450 B7070000 		lui	a5,%hi(.LC27)	# tmp332,
 6192 0454 83A50700 		lw	a1,%lo(.LC27)(a5)		#,
 6193 0458 13850900 		mv	a0,s3	#, _51
 6194 045c 97000000 		call	__mulsf3		#
 6194      E7800000 
 6195              	# main_raytrace_termio.c:245:   uint8_t G = (uint8_t)(255.0f * g);
 6196 0464 97000000 		call	__fixunssfsi		#
 6196      E7800000 
 6197              	# main_raytrace_termio.c:253:     printf("\033[48;2;%d;%d;%dm ",R,G,B);
 6198 046c 9374F50F 		andi	s1,a0,0xff	# prephitmp_109, tmp303
 6199 0470 6FF0DFEE 		j	.L502		#
 6201              		.globl	fb
 6202              		.globl	lights
 6203              		.globl	nb_lights
 6204              		.globl	spheres
 6205              		.globl	nb_spheres
 6206              		.globl	dither
 6207              		.globl	__errno
 6208              		.globl	VRENDER
 6209              		.globl	HRENDER
 6210              		.globl	VRES
 6211              		.globl	HRES
 6212              		.globl	heap_memory_used
 6213              		.globl	heap_memory
 6214              		.section	.srodata.cst4,"aM",@progbits,4
 6215              		.align	2
 6216              	.LC1:
 6217 0000 0000803F 		.word	1065353216
 6218              		.align	2
 6219              	.LC2:
 6220 0004 000080BF 		.word	-1082130432
 6221              		.align	2
 6222              	.LC3:
 6223 0008 CAF24971 		.word	1900671690
 6224              		.section	.srodata.cst8,"aM",@progbits,8
 6225              		.align	3
 6226              	.LC4:
 6227 0000 FCA9F1D2 		.word	-755914244
 6228 0004 4D62503F 		.word	1062232653
 6229              		.section	.srodata.cst4
 6230              		.align	2
 6231              	.LC5:
 6232 000c 00008040 		.word	1082130432
 6233              		.section	.srodata.cst8
 6234              		.align	3
 6235              	.LC6:
 6236 0008 00000000 		.word	0
 6237 000c 00002440 		.word	1076101120
 6238              		.section	.srodata.cst4
 6239              		.align	2
 6240              	.LC7:
 6241 0010 000020C1 		.word	-1054867456
 6242              		.align	2
 6243              	.LC8:
 6244 0014 0000F0C1 		.word	-1041235968
 6245              		.section	.srodata.cst8
 6246              		.align	3
 6247              	.LC9:
 6248 0010 00000000 		.word	0
 6249 0014 0000E03F 		.word	1071644672
 6250              		.align	3
 6251              	.LC10:
 6252 0018 00000000 		.word	0
 6253 001c 00408F40 		.word	1083129856
 6254              		.section	.srodata.cst4
 6255              		.align	2
 6256              	.LC11:
 6257 0018 9A99993E 		.word	1050253722
 6258              		.align	2
 6259              	.LC12:
 6260 001c CDCC4C3E 		.word	1045220557
 6261              		.align	2
 6262              	.LC13:
 6263 0020 CDCCCC3D 		.word	1036831949
 6264              		.align	2
 6265              	.LC14:
 6266 0024 00007A44 		.word	1148846080
 6267              		.section	.srodata.cst8
 6268              		.align	3
 6269              	.LC15:
 6270 0020 30058EE4 		.word	-460454608
 6271 0024 2EFF2B2B 		.word	724303662
 6272              		.align	3
 6273              	.LC16:
 6274 0028 7DC39425 		.word	630506365
 6275 002c AD49B254 		.word	1420970413
 6276              		.align	3
 6277              	.LC17:
 6278 0030 00000000 		.word	0
 6279 0034 0000F03F 		.word	1072693248
 6280              		.section	.srodata.cst4
 6281              		.align	2
 6282              	.LC18:
 6283 0028 3333333F 		.word	1060320051
 6284              		.align	2
 6285              	.LC19:
 6286 002c 0000003F 		.word	1056964608
 6287              		.align	2
 6288              	.LC20:
 6289 0030 CDCC4C3F 		.word	1061997773
 6290              		.align	2
 6291              	.LC21:
 6292 0034 6F12833A 		.word	981668463
 6293              		.section	.srodata.cst8
 6294              		.align	3
 6295              	.LC24:
 6296 0038 00000000 		.word	0
 6297 003c 00004840 		.word	1078460416
 6298              		.align	3
 6299              	.LC25:
 6300 0040 00000040 		.word	1073741824
 6301 0044 52C1E03F 		.word	1071694162
 6302              		.align	3
 6303              	.LC26:
 6304 0048 00000000 		.word	0
 6305 004c 000050C0 		.word	-1068498944
 6306              		.section	.srodata.cst4
 6307              		.align	2
 6308              	.LC27:
 6309 0038 00007F43 		.word	1132396544
 6310              		.section	.srodata.cst8
 6311              		.align	3
 6312              	.LC30:
 6313 0050 00000000 		.word	0
 6314 0054 00004040 		.word	1077936128
 6315              		.section	.srodata.cst4
 6316              		.align	2
 6317              	.LC32:
 6318 003c 000040C0 		.word	-1069547520
 6319              		.align	2
 6320              	.LC33:
 6321 0040 000080C1 		.word	-1048576000
 6322              		.set	.LC34,.LC25
 6323              		.align	2
 6324              	.LC35:
 6325 0044 9A99193F 		.word	1058642330
 6326              		.align	2
 6327              	.LC36:
 6328 0048 CDCCCC3E 		.word	1053609165
 6329              		.align	2
 6330              	.LC37:
 6331 004c 00004842 		.word	1112014848
 6332              		.align	2
 6333              	.LC38:
 6334 0050 0000C0BF 		.word	-1077936128
 6335              		.align	2
 6336              	.LC39:
 6337 0054 000040C1 		.word	-1052770304
 6338              		.align	2
 6339              	.LC40:
 6340 0058 0000C03F 		.word	1069547520
 6341              		.align	2
 6342              	.LC41:
 6343 005c 0000FA42 		.word	1123680256
 6344              		.align	2
 6345              	.LC42:
 6346 0060 000000BF 		.word	-1090519040
 6347              		.align	2
 6348              	.LC43:
 6349 0064 000090C1 		.word	-1047527424
 6350              		.set	.LC44,.LC30+4
 6351              		.align	2
 6352              	.LC45:
 6353 0068 6666663F 		.word	1063675494
 6354              		.align	2
 6355              	.LC46:
 6356 006c 00002041 		.word	1092616192
 6357              		.align	2
 6358              	.LC47:
 6359 0070 0000E040 		.word	1088421888
 6360              		.align	2
 6361              	.LC48:
 6362 0074 0000A040 		.word	1084227584
 6363              		.align	2
 6364              	.LC49:
 6365 0078 00000E43 		.word	1124990976
 6366              		.align	2
 6367              	.LC50:
 6368 007c 0000A0C1 		.word	-1046478848
 6369              		.align	2
 6370              	.LC51:
 6371 0080 0000A041 		.word	1101004800
 6372              		.align	2
 6373              	.LC52:
 6374 0084 0000F041 		.word	1106247680
 6375              		.align	2
 6376              	.LC53:
 6377 0088 0000C8C1 		.word	-1043857408
 6378              		.align	2
 6379              	.LC54:
 6380 008c 6666E63F 		.word	1072064102
 6381              		.align	2
 6382              	.LC55:
 6383 0090 9A99D93F 		.word	1071225242
 6384              		.section	.rodata
 6385              		.align	2
 6388              	dither:
 6389 0000 00       		.string	""
 6390 0001 08020A   		.ascii	"\b\002\n"
 6391 0004 0C040E06 		.ascii	"\f\004\016\006"
 6392 0008 030B0109 		.ascii	"\003\013\001\t"
 6393 000c 0F070D05 		.ascii	"\017\007\r\005"
 6394              		.bss
 6395              		.align	2
 6396              		.set	.LANCHOR0,. + 0
 6399              	heap_memory:
 6400 0000 00000000 		.zero	1024
 6400      00000000 
 6400      00000000 
 6400      00000000 
 6400      00000000 
 6403              	spheres:
 6404 0400 00000000 		.zero	208
 6404      00000000 
 6404      00000000 
 6404      00000000 
 6404      00000000 
 6407              	lights:
 6408 04d0 00000000 		.zero	48
 6408      00000000 
 6408      00000000 
 6408      00000000 
 6408      00000000 
 6409              		.section	.sbss,"aw",@nobits
 6410              		.align	2
 6413              	__errno:
 6414 0000 00000000 		.zero	4
 6417              	heap_memory_used:
 6418 0004 00000000 		.zero	4
 6419              		.section	.sdata,"aw"
 6420              		.align	2
 6423              	fb:
 6424 0000 00000010 		.word	268435456
 6427              	nb_lights:
 6428 0004 03000000 		.word	3
 6431              	nb_spheres:
 6432 0008 04000000 		.word	4
 6433              		.section	.srodata,"a"
 6434              		.align	2
 6437              	VRENDER:
 6438 0000 40000000 		.word	64
 6441              	HRENDER:
 6442 0004 60000000 		.word	96
 6445              	VRES:
 6446 0008 80000000 		.word	128
 6449              	HRES:
 6450 000c 80000000 		.word	128
 6451              		.ident	"GCC: (GNU) 11.1.0"
