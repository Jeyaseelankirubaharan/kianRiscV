
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.15+38 (git sha1 66914b6eb, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Parsing `kianv_soc_icebreaker.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: kianv_soc_icebreaker.v
Parsing Verilog input from `kianv_soc_icebreaker.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (gpio.v:36)
Warning: Yosys has only limited support for tri-state logic at the moment. (kianv_soc_icebreaker.v:315)
Storing AST representation for module `$abstract\kianv_soc'.
Storing AST representation for module `$abstract\pll_icebreaker'.
Successfully finished Verilog frontend.

-- Parsing `../kianv.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: ../kianv.v
Parsing Verilog input from `../kianv.v' to AST representation.
Storing AST representation for module `$abstract\kianv'.
Successfully finished Verilog frontend.

-- Parsing `bram.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: bram.v
Parsing Verilog input from `bram.v' to AST representation.
Storing AST representation for module `$abstract\bram'.
Successfully finished Verilog frontend.

-- Parsing `register_file.v' using frontend ` -vlog2k' --

4. Executing Verilog-2005 frontend: register_file.v
Parsing Verilog input from `register_file.v' to AST representation.
Storing AST representation for module `$abstract\register_file'.
Successfully finished Verilog frontend.

-- Parsing `my_tx_uart.v' using frontend ` -vlog2k' --

5. Executing Verilog-2005 frontend: my_tx_uart.v
Parsing Verilog input from `my_tx_uart.v' to AST representation.
Storing AST representation for module `$abstract\my_tx_uart'.
Successfully finished Verilog frontend.

-- Parsing `spi_flash_mem.v' using frontend ` -vlog2k' --

6. Executing Verilog-2005 frontend: spi_flash_mem.v
Parsing Verilog input from `spi_flash_mem.v' to AST representation.
Storing AST representation for module `$abstract\spi_flash_mem'.
Successfully finished Verilog frontend.

-- Parsing `ice40up5k_spram.v' using frontend ` -vlog2k' --

7. Executing Verilog-2005 frontend: ice40up5k_spram.v
Parsing Verilog input from `ice40up5k_spram.v' to AST representation.
Storing AST representation for module `$abstract\ice40up5k_spram'.
Successfully finished Verilog frontend.

-- Parsing `oled_sdd1331.v' using frontend ` -vlog2k' --

8. Executing Verilog-2005 frontend: oled_sdd1331.v
Parsing Verilog input from `oled_sdd1331.v' to AST representation.
Storing AST representation for module `$abstract\oled_ssd1331'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top kianv_soc -json kianv_soc_icebreaker.json' --

9. Executing SYNTH_ICE40 pass.

9.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

9.2. Executing HIERARCHY pass (managing design hierarchy).

9.3. Executing AST frontend in derive mode using pre-parsed AST for module `\kianv_soc'.
Generating RTLIL representation for module `\kianv_soc'.
Warning: wire '\gpio_output_wr' is assigned in a block at kianv_soc_icebreaker.v:241.5-241.40.
Warning: wire '\gpio_output_en_wr' is assigned in a block at kianv_soc_icebreaker.v:242.5-242.40.
Warning: wire '\gpio_output_val_wr' is assigned in a block at kianv_soc_icebreaker.v:243.5-243.40.
Warning: wire '\gpio_output_en_wr' is assigned in a block at kianv_soc_icebreaker.v:312.11-312.37.
Warning: wire '\gpio_output_val_wr' is assigned in a block at kianv_soc_icebreaker.v:326.10-326.37.

9.3.1. Analyzing design hierarchy..
Top module:  \kianv_soc
Parameter \rv32e = 1'0
Parameter \rv32m = 1'1
Parameter \reset_addr = 537919488

9.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\kianv'.
Parameter \rv32e = 1'0
Parameter \rv32m = 1'1
Parameter \reset_addr = 537919488
Generating RTLIL representation for module `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv'.
register_file:
Parameter \WORDS = 32768

9.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40up5k_spram'.
Parameter \WORDS = 32768
Generating RTLIL representation for module `$paramod\ice40up5k_spram\WORDS=s32'00000000000000001000000000000000'.
Parameter \WORDS = 8192

9.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\bram'.
Parameter \WORDS = 8192
Generating RTLIL representation for module `$paramod\bram\WORDS=s32'00000000000000000010000000000000'.
WORDS:
Parameter \SYSTEM_CLK = 20000000

9.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\oled_ssd1331'.
Parameter \SYSTEM_CLK = 20000000
Generating RTLIL representation for module `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000'.
SYSTEM_CLK:		
SYSTEM_CYCLES:		
SPI_TRANSFER_RATE:		
CYCLES_PER_SYMBOL:	
CLK_DIV_WIDTH:	

9.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\spi_flash_mem'.
Generating RTLIL representation for module `\spi_flash_mem'.
Parameter \SYSTEM_CLK = 20000000
Parameter \BAUDRATE = 115200

9.3.7. Executing AST frontend in derive mode using pre-parsed AST for module `\my_tx_uart'.
Parameter \SYSTEM_CLK = 20000000
Parameter \BAUDRATE = 115200
Generating RTLIL representation for module `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart'.
SYSTEM_CLK:		
SYSTEM_CYCLES:		
BAUDRATE:		
CYCLES_PER_SYMBOL:	
WAITSTATES_BIT_WIDTH:	
Parameter \freq = 20

9.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\pll_icebreaker'.
Parameter \freq = 20
Generating RTLIL representation for module `$paramod\pll_icebreaker\freq=s32'00000000000000000000000000010100'.

9.3.9. Analyzing design hierarchy..
Top module:  \kianv_soc
Used module:     $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv
Used module:     $paramod\ice40up5k_spram\WORDS=s32'00000000000000001000000000000000
Used module:     $paramod\bram\WORDS=s32'00000000000000000010000000000000
Used module:     $paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000
Used module:     \spi_flash_mem
Used module:     $paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart
Used module:     $paramod\pll_icebreaker\freq=s32'00000000000000000000000000010100
Parameter 1 (\DEPTH) = 32

9.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\register_file'.
Parameter 1 (\DEPTH) = 32
Generating RTLIL representation for module `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000'.

9.3.11. Analyzing design hierarchy..
Top module:  \kianv_soc
Used module:     $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv
Used module:         $paramod\register_file\DEPTH=s32'00000000000000000000000000100000
Used module:     $paramod\ice40up5k_spram\WORDS=s32'00000000000000001000000000000000
Used module:     $paramod\bram\WORDS=s32'00000000000000000010000000000000
Used module:     $paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000
Used module:     \spi_flash_mem
Used module:     $paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart
Used module:     $paramod\pll_icebreaker\freq=s32'00000000000000000000000000010100

9.3.12. Analyzing design hierarchy..
Top module:  \kianv_soc
Used module:     $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv
Used module:         $paramod\register_file\DEPTH=s32'00000000000000000000000000100000
Used module:     $paramod\ice40up5k_spram\WORDS=s32'00000000000000001000000000000000
Used module:     $paramod\bram\WORDS=s32'00000000000000000010000000000000
Used module:     $paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000
Used module:     \spi_flash_mem
Used module:     $paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart
Used module:     $paramod\pll_icebreaker\freq=s32'00000000000000000000000000010100
Removing unused module `$abstract\oled_ssd1331'.
Removing unused module `$abstract\ice40up5k_spram'.
Removing unused module `$abstract\spi_flash_mem'.
Removing unused module `$abstract\my_tx_uart'.
Removing unused module `$abstract\register_file'.
Removing unused module `$abstract\bram'.
Removing unused module `$abstract\kianv'.
Removing unused module `$abstract\pll_icebreaker'.
Removing unused module `$abstract\kianv_soc'.
Removed 9 unused modules.
Mapping positional arguments of cell kianv_soc.pll_i ($paramod\pll_icebreaker\freq=s32'00000000000000000000000000010100).
Warning: Resizing cell port kianv_soc.kianv_i.state from 4 bits to 7 bits.

9.4. Executing PROC pass (convert processes to netlists).

9.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:0$894'.
Removing empty process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:0$868'.
Removing empty process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:0$838'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:0$764'.
Cleaned up 0 empty switches.

9.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$242 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$235 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$231 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$224 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$221 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$218 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$215 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$212 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$204 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$197 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$193 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$186 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$183 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$180 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$177 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$174 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$register_file.v:46$961 in module $paramod\register_file\DEPTH=s32'00000000000000000000000000100000.
Marked 3 switch rules as full_case in process $proc$my_tx_uart.v:54$886 in module $paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.
Marked 2 switch rules as full_case in process $proc$spi_flash_mem.v:82$874 in module spi_flash_mem.
Marked 5 switch rules as full_case in process $proc$oled_sdd1331.v:98$840 in module $paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.
Marked 1 switch rules as full_case in process $proc$oled_sdd1331.v:70$839 in module $paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.
Marked 6 switch rules as full_case in process $proc$bram.v:45$779 in module $paramod\bram\WORDS=s32'00000000000000000010000000000000.
Marked 2 switch rules as full_case in process $proc$../kianv.v:569$749 in module $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.
Marked 3 switch rules as full_case in process $proc$../kianv.v:481$699 in module $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.
Marked 3 switch rules as full_case in process $proc$../kianv.v:454$679 in module $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.
Marked 2 switch rules as full_case in process $proc$../kianv.v:396$663 in module $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.
Marked 1 switch rules as full_case in process $proc$../kianv.v:318$624 in module $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.
Marked 18 switch rules as full_case in process $proc$kianv_soc_icebreaker.v:207$393 in module kianv_soc.
Marked 1 switch rules as full_case in process $proc$gpio.v:40$389 in module kianv_soc.
Removed a total of 0 dead cases.

9.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 13 redundant assignments.
Promoted 151 assignments to connections.

9.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$245'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$241'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$234'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$230'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$223'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$220'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$217'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$214'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$211'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$209'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$207'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$203'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$196'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$192'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$185'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$182'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$179'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$176'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$173'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$171'.
  Set init value: \Q = 1'0
Found init rule in `\kianv_soc.$proc$kianv_soc_icebreaker.v:145$432'.
  Set init value: \reset_cnt = 16'0000000000000000
Found init rule in `\kianv_soc.$proc$kianv_soc_icebreaker.v:97$431'.
  Set init value: \pwm = 14'00000000000000

9.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$242'.
Found async reset \R in `\SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$231'.
Found async reset \S in `\SB_DFFNS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$221'.
Found async reset \R in `\SB_DFFNR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$215'.
Found async reset \S in `\SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$204'.
Found async reset \R in `\SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$193'.
Found async reset \S in `\SB_DFFS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$183'.
Found async reset \R in `\SB_DFFR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$177'.

9.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$245'.
Creating decoders for process `\SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$242'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$241'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$235'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$234'.
Creating decoders for process `\SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$231'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$230'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$224'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$223'.
Creating decoders for process `\SB_DFFNS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$221'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$220'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$218'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$217'.
Creating decoders for process `\SB_DFFNR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$215'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$214'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$212'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$211'.
Creating decoders for process `\SB_DFFNE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$210'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$209'.
Creating decoders for process `\SB_DFFN.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$208'.
Creating decoders for process `\SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$207'.
Creating decoders for process `\SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$204'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$203'.
Creating decoders for process `\SB_DFFESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$197'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$196'.
Creating decoders for process `\SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$193'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$192'.
Creating decoders for process `\SB_DFFESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$186'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$185'.
Creating decoders for process `\SB_DFFS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$183'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$182'.
Creating decoders for process `\SB_DFFSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$180'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$179'.
Creating decoders for process `\SB_DFFR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$177'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$176'.
Creating decoders for process `\SB_DFFSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$174'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$173'.
Creating decoders for process `\SB_DFFE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$172'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$171'.
Creating decoders for process `\SB_DFF.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$170'.
Creating decoders for process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
Creating decoders for process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
     1/8: $1$memwr$\register_file1$register_file.v:50$960_EN[31:0]$973
     2/8: $1$memwr$\register_file1$register_file.v:50$960_DATA[31:0]$972
     3/8: $1$memwr$\register_file1$register_file.v:50$960_ADDR[4:0]$971
     4/8: $1$memwr$\register_file0$register_file.v:49$959_EN[31:0]$970
     5/8: $1$memwr$\register_file0$register_file.v:49$959_DATA[31:0]$969
     6/8: $1$memwr$\register_file0$register_file.v:49$959_ADDR[4:0]$968
     7/8: $0\rs2_reg_file[31:0]
     8/8: $0\rs1_reg_file[31:0]
Creating decoders for process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
     1/7: $0\wait_states[24:0]
     2/7: $0\tx_data_reg[7:0]
     3/7: $0\bit_idx[2:0]
     4/7: $0\return_state[2:0]
     5/7: $0\state[2:0]
     6/7: $0\ready[0:0]
     7/7: $0\tx_out[0:0]
Creating decoders for process `\spi_flash_mem.$proc$spi_flash_mem.v:0$882'.
Creating decoders for process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
     1/8: $0\rd_r[1:0]
     2/8: $0\rcv_buff[31:0]
     3/8: $0\shift_reg[31:0]
     4/8: $0\shift_cnt[4:0]
     5/8: $0\state[2:0]
     6/8: $0\spi_cs[0:0]
     7/8: $0\valid[0:0]
     8/8: $0\ready[0:0]
Creating decoders for process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
     1/12: $0\strobe_r[1:0]
     2/12: $0\setpixel_cmd_pos[6:0]
     3/12: $0\shift_reg[7:0]
     4/12: $0\shift_cnt[4:0]
     5/12: $0\clk_div[1:0]
     6/12: $0\rom_addr[5:0]
     7/12: $0\spi_clk[0:0]
     8/12: $0\state[2:0]
     9/12: $0\spi_dc[0:0]
    10/12: $0\spi_cs[0:0]
    11/12: $0\valid[0:0]
    12/12: $0\ready[0:0]
Creating decoders for process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:70$839'.
     1/1: $1\data[7:0]
Creating decoders for process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
     1/36: $3$memwr$\mem$bram.v:54$774_EN[31:0]$833
     2/36: $3$memwr$\mem$bram.v:54$774_DATA[31:0]$832
     3/36: $3$memwr$\mem$bram.v:54$774_ADDR[12:0]$831
     4/36: $3$memwr$\mem$bram.v:53$773_EN[31:0]$830
     5/36: $3$memwr$\mem$bram.v:53$773_DATA[31:0]$829
     6/36: $3$memwr$\mem$bram.v:53$773_ADDR[12:0]$828
     7/36: $3$memwr$\mem$bram.v:52$772_EN[31:0]$827
     8/36: $3$memwr$\mem$bram.v:52$772_DATA[31:0]$826
     9/36: $3$memwr$\mem$bram.v:52$772_ADDR[12:0]$825
    10/36: $3$memwr$\mem$bram.v:51$771_EN[31:0]$824
    11/36: $3$memwr$\mem$bram.v:51$771_DATA[31:0]$823
    12/36: $3$memwr$\mem$bram.v:51$771_ADDR[12:0]$822
    13/36: $2$memwr$\mem$bram.v:54$774_EN[31:0]$821
    14/36: $2$memwr$\mem$bram.v:54$774_DATA[31:0]$820
    15/36: $2$memwr$\mem$bram.v:54$774_ADDR[12:0]$819
    16/36: $2$memwr$\mem$bram.v:53$773_EN[31:0]$818
    17/36: $2$memwr$\mem$bram.v:53$773_DATA[31:0]$817
    18/36: $2$memwr$\mem$bram.v:53$773_ADDR[12:0]$816
    19/36: $2$memwr$\mem$bram.v:52$772_EN[31:0]$815
    20/36: $2$memwr$\mem$bram.v:52$772_DATA[31:0]$814
    21/36: $2$memwr$\mem$bram.v:52$772_ADDR[12:0]$813
    22/36: $2$memwr$\mem$bram.v:51$771_EN[31:0]$812
    23/36: $2$memwr$\mem$bram.v:51$771_DATA[31:0]$811
    24/36: $2$memwr$\mem$bram.v:51$771_ADDR[12:0]$810
    25/36: $1$memwr$\mem$bram.v:54$774_EN[31:0]$808
    26/36: $1$memwr$\mem$bram.v:54$774_DATA[31:0]$807
    27/36: $1$memwr$\mem$bram.v:54$774_ADDR[12:0]$806
    28/36: $1$memwr$\mem$bram.v:53$773_EN[31:0]$805
    29/36: $1$memwr$\mem$bram.v:53$773_DATA[31:0]$804
    30/36: $1$memwr$\mem$bram.v:53$773_ADDR[12:0]$803
    31/36: $1$memwr$\mem$bram.v:52$772_EN[31:0]$802
    32/36: $1$memwr$\mem$bram.v:52$772_DATA[31:0]$801
    33/36: $1$memwr$\mem$bram.v:52$772_ADDR[12:0]$800
    34/36: $1$memwr$\mem$bram.v:51$771_EN[31:0]$799
    35/36: $1$memwr$\mem$bram.v:51$771_DATA[31:0]$798
    36/36: $1$memwr$\mem$bram.v:51$771_ADDR[12:0]$797
Creating decoders for process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
     1/13: $0\cycle_counter[63:0]
     2/13: $0\instr_reg[31:0]
     3/13: $0\div_start[0:0]
     4/13: $0\mul_start[0:0]
     5/13: $0\instr_counter[63:0]
     6/13: $0\rd_reg_file[31:0]
     7/13: $0\rd_wr[0:0]
     8/13: $0\cpu_state[6:0]
     9/13: $0\pc[31:0]
    10/13: $0\mem_din[31:0]
    11/13: $0\mem_addr[31:0]
    12/13: $0\mem_rd[0:0]
    13/13: $0\mem_wmask[3:0]
Creating decoders for process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:564$747'.
Creating decoders for process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:507$721'.
     1/2: $1\csr_timer_cnt_result[31:0]
     2/2: $1\is_csr_timer_cnt_error[0:0]
Creating decoders for process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:481$699'.
     1/3: $3\rs2_load_rslt[31:0]
     2/3: $2\rs2_load_rslt[31:0]
     3/3: $1\rs2_load_rslt[31:0]
Creating decoders for process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:454$679'.
     1/10: $3\mem_wmask_store[3:0]
     2/10: $3\rs2_store_rslt[31:0]
     3/10: $2\rs2_store_rslt[31:0] [31:16]
     4/10: $2\rs2_store_rslt[31:0] [15:0]
     5/10: $2\mem_wmask_store[3:0]
     6/10: $1\rs2_store_rslt[31:0] [31:24]
     7/10: $1\rs2_store_rslt[31:0] [23:16]
     8/10: $1\rs2_store_rslt[31:0] [15:8]
     9/10: $1\rs2_store_rslt[31:0] [7:0]
    10/10: $1\mem_wmask_store[3:0]
Creating decoders for process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
     1/6: $0\div_rslt[31:0]
     2/6: $0\div_bit[4:0]
     3/6: $0\div_valid[0:0]
     4/6: $0\div_ready[0:0]
     5/6: $0\rem_rslt[31:0]
     6/6: $0\div_state[2:0]
Creating decoders for process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
     1/7: $0\mul_state[2:0]
     2/7: $0\mul_valid[0:0]
     3/7: $0\mul_ready[0:0]
     4/7: $0\mul_bit[4:0]
     5/7: $0\rs2_mul_abs[31:0]
     6/7: $0\rs1_mul_abs[31:0]
     7/7: $0\mul_rslt[63:0]
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:145$432'.
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:97$431'.
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
     1/112: $10\mem_valid[0:0]
     2/112: $10\mem_ready[0:0]
     3/112: $13\mem_dout[31:0]
     4/112: $9\mem_valid[0:0]
     5/112: $9\mem_ready[0:0]
     6/112: $12\mem_dout[31:0]
     7/112: $11\mem_dout[31:0]
     8/112: $9\gpio_output_val_wr[0:0]
     9/112: $8\mem_valid[0:0]
    10/112: $8\mem_ready[0:0]
    11/112: $10\mem_dout[31:0]
    12/112: $8\gpio_output_val_wr[0:0]
    13/112: $9\mem_dout[31:0]
    14/112: $8\gpio_output_en_wr[0:0]
    15/112: $7\mem_valid[0:0]
    16/112: $7\mem_ready[0:0]
    17/112: $8\mem_dout[31:0]
    18/112: $7\gpio_output_en_wr[0:0]
    19/112: $7\gpio_output_val_wr[0:0]
    20/112: $6\mem_valid[0:0]
    21/112: $6\mem_ready[0:0]
    22/112: $7\mem_dout[31:0]
    23/112: $6\gpio_output_en_wr[0:0]
    24/112: $6\gpio_output_val_wr[0:0]
    25/112: $6\oled_rgb[15:0]
    26/112: $6\oled_y_data[7:0]
    27/112: $6\oled_x_dc[7:0]
    28/112: $6\oled_setpixel_raw8tx[0:0]
    29/112: $6\oled_strobe[0:0]
    30/112: $5\mem_valid[0:0]
    31/112: $5\mem_ready[0:0]
    32/112: $5\oled_setpixel_raw8tx[0:0]
    33/112: $5\oled_strobe[0:0]
    34/112: $5\oled_rgb[15:0]
    35/112: $5\oled_y_data[7:0]
    36/112: $5\oled_x_dc[7:0]
    37/112: $6\mem_dout[31:0]
    38/112: $5\gpio_output_en_wr[0:0]
    39/112: $5\gpio_output_val_wr[0:0]
    40/112: $5\mem_dout[31:0]
    41/112: $5\uart_tx_data[7:0]
    42/112: $5\uart_strobe[0:0]
    43/112: $4\mem_valid[0:0]
    44/112: $4\mem_ready[0:0]
    45/112: $4\mem_dout[31:0]
    46/112: $4\uart_tx_data[7:0]
    47/112: $4\uart_strobe[0:0]
    48/112: $4\oled_setpixel_raw8tx[0:0]
    49/112: $4\oled_strobe[0:0]
    50/112: $4\oled_rgb[15:0]
    51/112: $4\oled_y_data[7:0]
    52/112: $4\oled_x_dc[7:0]
    53/112: $4\gpio_output_en_wr[0:0]
    54/112: $4\gpio_output_val_wr[0:0]
    55/112: $3\mem_valid[0:0]
    56/112: $3\mem_dout[31:0]
    57/112: $3\mem_ready[0:0]
    58/112: $3\mem_spi_rd[0:0]
    59/112: $3\mem_spi_wmask[3:0]
    60/112: $3\mem_spi_addr[23:0]
    61/112: $3\mem_spi_cs[0:0]
    62/112: $3\oled_setpixel_raw8tx[0:0]
    63/112: $3\oled_strobe[0:0]
    64/112: $3\oled_rgb[15:0]
    65/112: $3\oled_y_data[7:0]
    66/112: $3\oled_x_dc[7:0]
    67/112: $3\uart_tx_data[7:0]
    68/112: $3\uart_strobe[0:0]
    69/112: $3\gpio_output_en_wr[0:0]
    70/112: $3\gpio_output_val_wr[0:0]
    71/112: $2\mem_valid[0:0]
    72/112: $2\mem_dout[31:0]
    73/112: $2\mem_ready[0:0]
    74/112: $2\mem_spram_data_in[31:0]
    75/112: $2\mem_spram_wmask[3:0]
    76/112: $2\mem_spram_addr[21:0]
    77/112: $2\oled_setpixel_raw8tx[0:0]
    78/112: $2\oled_strobe[0:0]
    79/112: $2\oled_rgb[15:0]
    80/112: $2\oled_y_data[7:0]
    81/112: $2\oled_x_dc[7:0]
    82/112: $2\mem_spi_wmask[3:0]
    83/112: $2\mem_spi_rd[0:0]
    84/112: $2\mem_spi_cs[0:0]
    85/112: $2\mem_spi_addr[23:0]
    86/112: $2\uart_tx_data[7:0]
    87/112: $2\uart_strobe[0:0]
    88/112: $2\gpio_output_en_wr[0:0]
    89/112: $2\gpio_output_val_wr[0:0]
    90/112: $1\mem_valid[0:0]
    91/112: $1\mem_dout[31:0]
    92/112: $1\mem_ready[0:0]
    93/112: $1\mem_bram_rd[0:0]
    94/112: $1\mem_bram_data_in[31:0]
    95/112: $1\mem_bram_wmask[3:0]
    96/112: $1\mem_bram_addr[31:0]
    97/112: $1\oled_setpixel_raw8tx[0:0]
    98/112: $1\oled_strobe[0:0]
    99/112: $1\oled_rgb[15:0]
   100/112: $1\oled_y_data[7:0]
   101/112: $1\oled_x_dc[7:0]
   102/112: $1\mem_spram_data_in[31:0]
   103/112: $1\mem_spram_wmask[3:0]
   104/112: $1\mem_spram_addr[21:0]
   105/112: $1\mem_spi_wmask[3:0]
   106/112: $1\mem_spi_rd[0:0]
   107/112: $1\mem_spi_cs[0:0]
   108/112: $1\mem_spi_addr[23:0]
   109/112: $1\uart_tx_data[7:0]
   110/112: $1\uart_strobe[0:0]
   111/112: $1\gpio_output_en_wr[0:0]
   112/112: $1\gpio_output_val_wr[0:0]
Creating decoders for process `\kianv_soc.$proc$gpio.v:40$389'.
     1/2: $0\gpio_output_val[7:0]
     2/2: $0\gpio_output_en[7:0]
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:147$386'.
Creating decoders for process `\kianv_soc.$proc$kianv_soc_icebreaker.v:98$383'.

9.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.\i' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$895_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$896_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$897_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$898_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$899_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$900_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$901_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$902_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$903_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$904_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$905_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$906_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$907_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$908_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$909_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$910_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$911_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$912_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$913_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$914_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$915_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$916_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$917_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$918_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$919_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$920_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$921_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$922_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$923_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$924_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$925_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$926_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$927_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$928_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$929_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$930_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$931_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$932_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$933_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$934_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$935_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$936_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$937_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$938_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$939_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$940_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$941_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$942_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$943_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$944_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$945_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$946_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$947_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$948_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$949_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$950_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$951_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$952_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$953_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$954_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$955_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$956_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:41$957_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:42$958_EN' from process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
No latch inferred for signal `\spi_flash_mem.\adjust_word$func$spi_flash_mem.v:69$869.$result' from process `\spi_flash_mem.$proc$spi_flash_mem.v:0$882'.
No latch inferred for signal `\spi_flash_mem.\adjust_word$func$spi_flash_mem.v:69$870.$result' from process `\spi_flash_mem.$proc$spi_flash_mem.v:0$882'.
No latch inferred for signal `\spi_flash_mem.\adjust_word$func$spi_flash_mem.v:69$870.data' from process `\spi_flash_mem.$proc$spi_flash_mem.v:0$882'.
No latch inferred for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\data' from process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:70$839'.
No latch inferred for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\instr' from process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:564$747'.
No latch inferred for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\csr_timer_cnt_result' from process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:507$721'.
No latch inferred for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\is_csr_timer_cnt_error' from process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:507$721'.
No latch inferred for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\rs2_load_rslt' from process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:481$699'.
No latch inferred for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\rs2_store_rslt' from process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:454$679'.
No latch inferred for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mem_wmask_store' from process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:454$679'.
No latch inferred for signal `\kianv_soc.\gpio_output_wr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\gpio_output_val_wr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\gpio_output_en_wr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_dout' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_valid' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_ready' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_bram_wmask' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_bram_rd' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_bram_addr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_bram_data_in' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\uart_strobe' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\uart_tx_data' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_spi_addr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_spi_cs' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_spi_rd' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_spi_wmask' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_spram_addr' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_spram_wmask' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\mem_spram_data_in' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\oled_x_dc' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\oled_y_data' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\oled_rgb' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\oled_strobe' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
No latch inferred for signal `\kianv_soc.\oled_setpixel_raw8tx' from process `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.

9.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$242'.
  created $adff cell `$procdff$3505' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$235'.
  created $dff cell `$procdff$3506' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$231'.
  created $adff cell `$procdff$3507' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$224'.
  created $dff cell `$procdff$3508' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$221'.
  created $adff cell `$procdff$3509' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$218'.
  created $dff cell `$procdff$3510' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$215'.
  created $adff cell `$procdff$3511' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$212'.
  created $dff cell `$procdff$3512' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$210'.
  created $dff cell `$procdff$3513' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$208'.
  created $dff cell `$procdff$3514' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$204'.
  created $adff cell `$procdff$3515' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$197'.
  created $dff cell `$procdff$3516' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$193'.
  created $adff cell `$procdff$3517' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$186'.
  created $dff cell `$procdff$3518' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$183'.
  created $adff cell `$procdff$3519' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$180'.
  created $dff cell `$procdff$3520' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$177'.
  created $adff cell `$procdff$3521' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$174'.
  created $dff cell `$procdff$3522' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$172'.
  created $dff cell `$procdff$3523' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$170'.
  created $dff cell `$procdff$3524' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.\rs1_reg_file' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3525' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.\rs2_reg_file' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3526' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:49$959_ADDR' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3527' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:49$959_DATA' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3528' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file0$register_file.v:49$959_EN' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3529' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:50$960_ADDR' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3530' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:50$960_DATA' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3531' with positive edge clock.
Creating register for signal `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$memwr$\register_file1$register_file.v:50$960_EN' using process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
  created $dff cell `$procdff$3532' with positive edge clock.
Creating register for signal `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.\tx_out' using process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
  created $dff cell `$procdff$3533' with positive edge clock.
Creating register for signal `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.\ready' using process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
  created $dff cell `$procdff$3534' with positive edge clock.
Creating register for signal `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.\state' using process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
  created $dff cell `$procdff$3535' with positive edge clock.
Creating register for signal `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.\return_state' using process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
  created $dff cell `$procdff$3536' with positive edge clock.
Creating register for signal `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.\bit_idx' using process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
  created $dff cell `$procdff$3537' with positive edge clock.
Creating register for signal `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.\tx_data_reg' using process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
  created $dff cell `$procdff$3538' with positive edge clock.
Creating register for signal `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.\wait_states' using process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
  created $dff cell `$procdff$3539' with positive edge clock.
Creating register for signal `\spi_flash_mem.\ready' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3540' with positive edge clock.
Creating register for signal `\spi_flash_mem.\valid' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3541' with positive edge clock.
Creating register for signal `\spi_flash_mem.\spi_cs' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3542' with positive edge clock.
Creating register for signal `\spi_flash_mem.\rd_r' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3543' with positive edge clock.
Creating register for signal `\spi_flash_mem.\state' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3544' with positive edge clock.
Creating register for signal `\spi_flash_mem.\shift_cnt' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3545' with positive edge clock.
Creating register for signal `\spi_flash_mem.\shift_reg' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3546' with positive edge clock.
Creating register for signal `\spi_flash_mem.\rcv_buff' using process `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
  created $dff cell `$procdff$3547' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\ready' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3548' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\valid' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3549' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\spi_cs' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3550' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\spi_dc' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3551' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\state' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3552' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\strobe_r' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3553' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\spi_clk' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3554' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\rom_addr' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3555' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\clk_div' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3556' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\shift_cnt' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3557' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\shift_reg' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3558' with positive edge clock.
Creating register for signal `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.\setpixel_cmd_pos' using process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
  created $dff cell `$procdff$3559' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.\out' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3560' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:51$771_ADDR' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3561' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:51$771_DATA' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3562' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:51$771_EN' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3563' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:52$772_ADDR' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3564' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:52$772_DATA' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3565' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:52$772_EN' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3566' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:53$773_ADDR' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3567' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:53$773_DATA' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3568' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:53$773_EN' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3569' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:54$774_ADDR' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3570' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:54$774_DATA' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3571' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$memwr$\mem$bram.v:54$774_EN' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3572' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$mem2bits$\mem$bram.v:58$775' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3573' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$mem2bits$\mem$bram.v:58$776' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3574' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$mem2bits$\mem$bram.v:58$777' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3575' with positive edge clock.
Creating register for signal `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$mem2bits$\mem$bram.v:58$778' using process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
  created $dff cell `$procdff$3576' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mem_wmask' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3577' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mem_rd' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3578' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mem_addr' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3579' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mem_din' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3580' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\pc' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3581' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\cpu_state' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3582' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\rd_wr' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3583' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\rd_reg_file' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3584' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\cycle_counter' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3585' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\instr_counter' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3586' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mul_start' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3587' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\div_start' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3588' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\instr_reg' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
  created $dff cell `$procdff$3589' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\div_state' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
  created $dff cell `$procdff$3590' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\rem_rslt' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
  created $dff cell `$procdff$3591' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\div_ready' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
  created $dff cell `$procdff$3592' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\div_valid' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
  created $dff cell `$procdff$3593' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\div_bit' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
  created $dff cell `$procdff$3594' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\div_rslt' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
  created $dff cell `$procdff$3595' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mul_rslt' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
  created $dff cell `$procdff$3596' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\rs1_mul_abs' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
  created $dff cell `$procdff$3597' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\rs2_mul_abs' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
  created $dff cell `$procdff$3598' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mul_bit' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
  created $dff cell `$procdff$3599' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mul_ready' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
  created $dff cell `$procdff$3600' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mul_valid' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
  created $dff cell `$procdff$3601' with positive edge clock.
Creating register for signal `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.\mul_state' using process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
  created $dff cell `$procdff$3602' with positive edge clock.
Creating register for signal `\kianv_soc.\gpio_output_en' using process `\kianv_soc.$proc$gpio.v:40$389'.
  created $dff cell `$procdff$3603' with positive edge clock.
Creating register for signal `\kianv_soc.\gpio_output_val' using process `\kianv_soc.$proc$gpio.v:40$389'.
  created $dff cell `$procdff$3604' with positive edge clock.
Creating register for signal `\kianv_soc.\reset_cnt' using process `\kianv_soc.$proc$kianv_soc_icebreaker.v:147$386'.
  created $dff cell `$procdff$3605' with positive edge clock.
Creating register for signal `\kianv_soc.\pwm' using process `\kianv_soc.$proc$kianv_soc_icebreaker.v:98$383'.
  created $dff cell `$procdff$3606' with positive edge clock.

9.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$245'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$242'.
Removing empty process `SB_DFFNES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$242'.
Removing empty process `SB_DFFNESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$241'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$235'.
Removing empty process `SB_DFFNESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$235'.
Removing empty process `SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$234'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$231'.
Removing empty process `SB_DFFNER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$231'.
Removing empty process `SB_DFFNESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$230'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$224'.
Removing empty process `SB_DFFNESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$224'.
Removing empty process `SB_DFFNS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$223'.
Removing empty process `SB_DFFNS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$221'.
Removing empty process `SB_DFFNSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$220'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$218'.
Removing empty process `SB_DFFNSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$218'.
Removing empty process `SB_DFFNR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$217'.
Removing empty process `SB_DFFNR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$215'.
Removing empty process `SB_DFFNSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$214'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$212'.
Removing empty process `SB_DFFNSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$212'.
Removing empty process `SB_DFFNE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$211'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$210'.
Removing empty process `SB_DFFNE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$210'.
Removing empty process `SB_DFFN.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$209'.
Removing empty process `SB_DFFN.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$208'.
Removing empty process `SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$207'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$204'.
Removing empty process `SB_DFFES.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$204'.
Removing empty process `SB_DFFESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$203'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$197'.
Removing empty process `SB_DFFESS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$197'.
Removing empty process `SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$196'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$193'.
Removing empty process `SB_DFFER.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$193'.
Removing empty process `SB_DFFESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$192'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$186'.
Removing empty process `SB_DFFESR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$186'.
Removing empty process `SB_DFFS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$185'.
Removing empty process `SB_DFFS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$183'.
Removing empty process `SB_DFFSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$182'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$180'.
Removing empty process `SB_DFFSS.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$180'.
Removing empty process `SB_DFFR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$179'.
Removing empty process `SB_DFFR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$177'.
Removing empty process `SB_DFFSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$176'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$174'.
Removing empty process `SB_DFFSR.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$174'.
Removing empty process `SB_DFFE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$173'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$172'.
Removing empty process `SB_DFFE.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$172'.
Removing empty process `SB_DFF.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$171'.
Removing empty process `SB_DFF.$proc$/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$170'.
Removing empty process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:0$1044'.
Found and cleaned up 3 empty switches in `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
Removing empty process `$paramod\register_file\DEPTH=s32'00000000000000000000000000100000.$proc$register_file.v:46$961'.
Found and cleaned up 4 empty switches in `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
Removing empty process `$paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.$proc$my_tx_uart.v:54$886'.
Removing empty process `spi_flash_mem.$proc$spi_flash_mem.v:0$882'.
Found and cleaned up 5 empty switches in `\spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
Removing empty process `spi_flash_mem.$proc$spi_flash_mem.v:82$874'.
Found and cleaned up 12 empty switches in `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
Removing empty process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:98$840'.
Found and cleaned up 1 empty switch in `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:70$839'.
Removing empty process `$paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.$proc$oled_sdd1331.v:70$839'.
Found and cleaned up 6 empty switches in `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
Removing empty process `$paramod\bram\WORDS=s32'00000000000000000010000000000000.$proc$bram.v:45$779'.
Found and cleaned up 11 empty switches in `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:569$749'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:564$747'.
Found and cleaned up 1 empty switch in `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:507$721'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:507$721'.
Found and cleaned up 3 empty switches in `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:481$699'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:481$699'.
Found and cleaned up 3 empty switches in `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:454$679'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:454$679'.
Found and cleaned up 5 empty switches in `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:396$663'.
Found and cleaned up 4 empty switches in `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
Removing empty process `$paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.$proc$../kianv.v:318$624'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:145$432'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:97$431'.
Found and cleaned up 18 empty switches in `\kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:207$393'.
Found and cleaned up 1 empty switch in `\kianv_soc.$proc$gpio.v:40$389'.
Removing empty process `kianv_soc.$proc$gpio.v:40$389'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:147$386'.
Removing empty process `kianv_soc.$proc$kianv_soc_icebreaker.v:98$383'.
Cleaned up 95 empty switches.

9.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\register_file\DEPTH=s32'00000000000000000000000000100000.
Optimizing module $paramod\pll_icebreaker\freq=s32'00000000000000000000000000010100.
Optimizing module $paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.
<suppressed ~14 debug messages>
Optimizing module spi_flash_mem.
<suppressed ~16 debug messages>
Optimizing module $paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.
<suppressed ~25 debug messages>
Optimizing module $paramod\bram\WORDS=s32'00000000000000000010000000000000.
<suppressed ~36 debug messages>
Optimizing module $paramod\ice40up5k_spram\WORDS=s32'00000000000000001000000000000000.
Optimizing module $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.
<suppressed ~100 debug messages>
Optimizing module kianv_soc.
<suppressed ~5 debug messages>

9.5. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\register_file\DEPTH=s32'00000000000000000000000000100000.
Deleting now unused module $paramod\pll_icebreaker\freq=s32'00000000000000000000000000010100.
Deleting now unused module $paramod$223c157bedbe9db3dd454a32be093dda58e99f81\my_tx_uart.
Deleting now unused module spi_flash_mem.
Deleting now unused module $paramod\oled_ssd1331\SYSTEM_CLK=s32'00000001001100010010110100000000.
Deleting now unused module $paramod\bram\WORDS=s32'00000000000000000010000000000000.
Deleting now unused module $paramod\ice40up5k_spram\WORDS=s32'00000000000000001000000000000000.
Deleting now unused module $paramod$a717b31c6ecfdd791cf1291b49a58a49d7341a55\kianv.
<suppressed ~8 debug messages>

9.6. Executing TRIBUF pass.

9.7. Executing DEMINOUT pass (demote inout ports to input or output).

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~3 debug messages>

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 50 unused cells and 1383 unused wires.
<suppressed ~78 debug messages>

9.10. Executing CHECK pass (checking for obvious problems).
Checking module kianv_soc...
Found and reported 0 problems.

9.11. Executing OPT pass (performing simple optimizations).

9.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~291 debug messages>
Removed a total of 97 cells.

9.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$1902: \kianv_i.cpu_state -> 7'1000000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$1906: \kianv_i.cpu_state -> 7'0100000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$1910: \kianv_i.cpu_state -> 7'0010000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$1923: \kianv_i.cpu_state -> 7'0001000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$1916: \kianv_i.cpu_state -> 7'0001000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$1920: \kianv_i.cpu_state -> 7'0001000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$1928: \kianv_i.cpu_state -> 7'0000001
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2089: \kianv_i.rem_rslt_sub_divident -> { 1'0 \kianv_i.rem_rslt_sub_divident [30:0] }
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2099: \kianv_i.div_state -> 3'000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2101: \kianv_i.div_state -> 3'010
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2104: \kianv_i.div_state -> 3'001
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2111: \kianv_i.mul_state -> 3'000
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2113: \kianv_i.mul_state -> 3'010
      Replacing known input bits on port A of cell $flatten\kianv_i.$procmux$2116: \kianv_i.mul_state -> 3'001
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1608.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1611.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1617.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1620.
    dead port 2/2 on $mux $flatten\kianv_i.$ternary$../kianv.v:496$717.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1626.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1629.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1635.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1638.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1644.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1647.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1653.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1656.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1662.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1665.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1671.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1674.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1680.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1683.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1689.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1692.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1698.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1701.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1707.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1710.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1716.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1722.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1728.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1734.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1740.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1746.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1752.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1758.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1764.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1770.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1776.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$1782.
    dead port 1/2 on $mux $procmux$2183.
    dead port 1/2 on $mux $procmux$2186.
    dead port 1/2 on $mux $procmux$2189.
    dead port 1/2 on $mux $procmux$2192.
    dead port 1/2 on $mux $procmux$2195.
    dead port 1/2 on $mux $procmux$2198.
    dead port 1/2 on $mux $procmux$2201.
    dead port 1/2 on $mux $procmux$2204.
    dead port 1/2 on $mux $procmux$2207.
    dead port 1/2 on $mux $procmux$2213.
    dead port 1/2 on $mux $procmux$2216.
    dead port 1/2 on $mux $procmux$2219.
    dead port 1/2 on $mux $procmux$2222.
    dead port 1/2 on $mux $procmux$2225.
    dead port 1/2 on $mux $procmux$2228.
    dead port 1/2 on $mux $procmux$2231.
    dead port 1/2 on $mux $procmux$2234.
    dead port 1/2 on $mux $procmux$2237.
    dead port 2/2 on $mux $procmux$2243.
    dead port 1/2 on $mux $procmux$2246.
    dead port 1/2 on $mux $procmux$2249.
    dead port 1/2 on $mux $procmux$2252.
    dead port 1/2 on $mux $procmux$2255.
    dead port 1/2 on $mux $procmux$2258.
    dead port 1/2 on $mux $procmux$2261.
    dead port 1/2 on $mux $procmux$2264.
    dead port 1/2 on $mux $procmux$2267.
    dead port 1/2 on $mux $procmux$2273.
    dead port 1/2 on $mux $procmux$2276.
    dead port 1/2 on $mux $procmux$2279.
    dead port 1/2 on $mux $procmux$2282.
    dead port 1/2 on $mux $procmux$2285.
    dead port 1/2 on $mux $procmux$2288.
    dead port 1/2 on $mux $procmux$2291.
    dead port 1/2 on $mux $procmux$2294.
    dead port 1/2 on $mux $procmux$2300.
    dead port 1/2 on $mux $procmux$2303.
    dead port 1/2 on $mux $procmux$2306.
    dead port 1/2 on $mux $procmux$2309.
    dead port 1/2 on $mux $procmux$2312.
    dead port 1/2 on $mux $procmux$2315.
    dead port 1/2 on $mux $procmux$2318.
    dead port 1/2 on $mux $procmux$2321.
    dead port 1/2 on $mux $procmux$2327.
    dead port 1/2 on $mux $procmux$2330.
    dead port 1/2 on $mux $procmux$2333.
    dead port 1/2 on $mux $procmux$2336.
    dead port 1/2 on $mux $procmux$2339.
    dead port 1/2 on $mux $procmux$2342.
    dead port 1/2 on $mux $procmux$2345.
    dead port 1/2 on $mux $procmux$2348.
    dead port 2/2 on $mux $procmux$2354.
    dead port 1/2 on $mux $procmux$2357.
    dead port 1/2 on $mux $procmux$2360.
    dead port 1/2 on $mux $procmux$2363.
    dead port 1/2 on $mux $procmux$2366.
    dead port 1/2 on $mux $procmux$2369.
    dead port 1/2 on $mux $procmux$2372.
    dead port 1/2 on $mux $procmux$2375.
    dead port 2/2 on $mux $procmux$2381.
    dead port 1/2 on $mux $procmux$2384.
    dead port 1/2 on $mux $procmux$2387.
    dead port 1/2 on $mux $procmux$2390.
    dead port 1/2 on $mux $procmux$2393.
    dead port 1/2 on $mux $procmux$2396.
    dead port 1/2 on $mux $procmux$2399.
    dead port 1/2 on $mux $procmux$2402.
    dead port 1/2 on $mux $procmux$2408.
    dead port 1/2 on $mux $procmux$2411.
    dead port 1/2 on $mux $procmux$2414.
    dead port 1/2 on $mux $procmux$2417.
    dead port 1/2 on $mux $procmux$2420.
    dead port 1/2 on $mux $procmux$2423.
    dead port 1/2 on $mux $procmux$2426.
    dead port 1/2 on $mux $procmux$2432.
    dead port 1/2 on $mux $procmux$2435.
    dead port 1/2 on $mux $procmux$2438.
    dead port 1/2 on $mux $procmux$2441.
    dead port 1/2 on $mux $procmux$2444.
    dead port 1/2 on $mux $procmux$2447.
    dead port 1/2 on $mux $procmux$2450.
    dead port 1/2 on $mux $procmux$2456.
    dead port 1/2 on $mux $procmux$2459.
    dead port 1/2 on $mux $procmux$2462.
    dead port 1/2 on $mux $procmux$2465.
    dead port 1/2 on $mux $procmux$2468.
    dead port 1/2 on $mux $procmux$2471.
    dead port 1/2 on $mux $procmux$2474.
    dead port 1/2 on $mux $procmux$2480.
    dead port 1/2 on $mux $procmux$2483.
    dead port 1/2 on $mux $procmux$2486.
    dead port 1/2 on $mux $procmux$2489.
    dead port 1/2 on $mux $procmux$2492.
    dead port 1/2 on $mux $procmux$2495.
    dead port 1/2 on $mux $procmux$2498.
    dead port 2/2 on $mux $procmux$2504.
    dead port 1/2 on $mux $procmux$2507.
    dead port 1/2 on $mux $procmux$2510.
    dead port 1/2 on $mux $procmux$2513.
    dead port 1/2 on $mux $procmux$2516.
    dead port 1/2 on $mux $procmux$2519.
    dead port 1/2 on $mux $procmux$2522.
    dead port 2/2 on $mux $procmux$2528.
    dead port 1/2 on $mux $procmux$2531.
    dead port 1/2 on $mux $procmux$2534.
    dead port 1/2 on $mux $procmux$2537.
    dead port 1/2 on $mux $procmux$2540.
    dead port 1/2 on $mux $procmux$2543.
    dead port 1/2 on $mux $procmux$2546.
    dead port 1/2 on $mux $procmux$2552.
    dead port 1/2 on $mux $procmux$2555.
    dead port 1/2 on $mux $procmux$2558.
    dead port 1/2 on $mux $procmux$2561.
    dead port 1/2 on $mux $procmux$2564.
    dead port 1/2 on $mux $procmux$2567.
    dead port 1/2 on $mux $procmux$2573.
    dead port 1/2 on $mux $procmux$2576.
    dead port 1/2 on $mux $procmux$2579.
    dead port 1/2 on $mux $procmux$2582.
    dead port 1/2 on $mux $procmux$2585.
    dead port 1/2 on $mux $procmux$2588.
    dead port 1/2 on $mux $procmux$2594.
    dead port 1/2 on $mux $procmux$2597.
    dead port 1/2 on $mux $procmux$2600.
    dead port 1/2 on $mux $procmux$2603.
    dead port 1/2 on $mux $procmux$2606.
    dead port 1/2 on $mux $procmux$2609.
    dead port 1/2 on $mux $procmux$2615.
    dead port 1/2 on $mux $procmux$2618.
    dead port 1/2 on $mux $procmux$2621.
    dead port 1/2 on $mux $procmux$2624.
    dead port 1/2 on $mux $procmux$2627.
    dead port 1/2 on $mux $procmux$2630.
    dead port 1/2 on $mux $procmux$2636.
    dead port 1/2 on $mux $procmux$2639.
    dead port 1/2 on $mux $procmux$2642.
    dead port 1/2 on $mux $procmux$2645.
    dead port 1/2 on $mux $procmux$2648.
    dead port 1/2 on $mux $procmux$2651.
    dead port 1/2 on $mux $procmux$2657.
    dead port 1/2 on $mux $procmux$2660.
    dead port 1/2 on $mux $procmux$2663.
    dead port 1/2 on $mux $procmux$2666.
    dead port 1/2 on $mux $procmux$2669.
    dead port 1/2 on $mux $procmux$2675.
    dead port 1/2 on $mux $procmux$2678.
    dead port 1/2 on $mux $procmux$2681.
    dead port 1/2 on $mux $procmux$2684.
    dead port 1/2 on $mux $procmux$2687.
    dead port 1/2 on $mux $procmux$2693.
    dead port 1/2 on $mux $procmux$2696.
    dead port 1/2 on $mux $procmux$2699.
    dead port 1/2 on $mux $procmux$2702.
    dead port 1/2 on $mux $procmux$2705.
    dead port 1/2 on $mux $procmux$2711.
    dead port 1/2 on $mux $procmux$2714.
    dead port 1/2 on $mux $procmux$2717.
    dead port 1/2 on $mux $procmux$2720.
    dead port 1/2 on $mux $procmux$2723.
    dead port 1/2 on $mux $procmux$2729.
    dead port 1/2 on $mux $procmux$2732.
    dead port 1/2 on $mux $procmux$2735.
    dead port 1/2 on $mux $procmux$2738.
    dead port 1/2 on $mux $procmux$2741.
    dead port 2/2 on $mux $procmux$2747.
    dead port 1/2 on $mux $procmux$2750.
    dead port 1/2 on $mux $procmux$2753.
    dead port 1/2 on $mux $procmux$2756.
    dead port 1/2 on $mux $procmux$2759.
    dead port 2/2 on $mux $procmux$2765.
    dead port 1/2 on $mux $procmux$2768.
    dead port 1/2 on $mux $procmux$2771.
    dead port 1/2 on $mux $procmux$2774.
    dead port 1/2 on $mux $procmux$2777.
    dead port 2/2 on $mux $procmux$2783.
    dead port 1/2 on $mux $procmux$2786.
    dead port 1/2 on $mux $procmux$2789.
    dead port 1/2 on $mux $procmux$2792.
    dead port 1/2 on $mux $procmux$2795.
    dead port 2/2 on $mux $procmux$2801.
    dead port 1/2 on $mux $procmux$2804.
    dead port 1/2 on $mux $procmux$2807.
    dead port 1/2 on $mux $procmux$2810.
    dead port 1/2 on $mux $procmux$2813.
    dead port 2/2 on $mux $procmux$2819.
    dead port 1/2 on $mux $procmux$2822.
    dead port 1/2 on $mux $procmux$2825.
    dead port 1/2 on $mux $procmux$2828.
    dead port 1/2 on $mux $procmux$2831.
    dead port 1/2 on $mux $procmux$2837.
    dead port 1/2 on $mux $procmux$2840.
    dead port 1/2 on $mux $procmux$2843.
    dead port 1/2 on $mux $procmux$2846.
    dead port 1/2 on $mux $procmux$2852.
    dead port 1/2 on $mux $procmux$2855.
    dead port 1/2 on $mux $procmux$2858.
    dead port 1/2 on $mux $procmux$2861.
    dead port 1/2 on $mux $procmux$2867.
    dead port 1/2 on $mux $procmux$2870.
    dead port 1/2 on $mux $procmux$2873.
    dead port 1/2 on $mux $procmux$2876.
    dead port 1/2 on $mux $procmux$2882.
    dead port 1/2 on $mux $procmux$2885.
    dead port 1/2 on $mux $procmux$2888.
    dead port 1/2 on $mux $procmux$2891.
    dead port 1/2 on $mux $procmux$2897.
    dead port 1/2 on $mux $procmux$2900.
    dead port 1/2 on $mux $procmux$2903.
    dead port 1/2 on $mux $procmux$2906.
    dead port 1/2 on $mux $procmux$2912.
    dead port 1/2 on $mux $procmux$2915.
    dead port 1/2 on $mux $procmux$2918.
    dead port 1/2 on $mux $procmux$2921.
    dead port 1/2 on $mux $procmux$2927.
    dead port 1/2 on $mux $procmux$2930.
    dead port 1/2 on $mux $procmux$2933.
    dead port 1/2 on $mux $procmux$2936.
    dead port 1/2 on $mux $procmux$2942.
    dead port 1/2 on $mux $procmux$2945.
    dead port 1/2 on $mux $procmux$2948.
    dead port 1/2 on $mux $procmux$2951.
    dead port 1/2 on $mux $procmux$2957.
    dead port 1/2 on $mux $procmux$2960.
    dead port 1/2 on $mux $procmux$2963.
    dead port 1/2 on $mux $procmux$2966.
    dead port 1/2 on $mux $procmux$2972.
    dead port 1/2 on $mux $procmux$2975.
    dead port 1/2 on $mux $procmux$2978.
    dead port 1/2 on $mux $procmux$2981.
    dead port 2/2 on $mux $procmux$2987.
    dead port 1/2 on $mux $procmux$2990.
    dead port 1/2 on $mux $procmux$2993.
    dead port 1/2 on $mux $procmux$2996.
    dead port 2/2 on $mux $procmux$3002.
    dead port 1/2 on $mux $procmux$3005.
    dead port 1/2 on $mux $procmux$3008.
    dead port 1/2 on $mux $procmux$3011.
    dead port 2/2 on $mux $procmux$3017.
    dead port 1/2 on $mux $procmux$3020.
    dead port 1/2 on $mux $procmux$3023.
    dead port 1/2 on $mux $procmux$3026.
    dead port 1/2 on $mux $procmux$3032.
    dead port 1/2 on $mux $procmux$3035.
    dead port 1/2 on $mux $procmux$3038.
    dead port 1/2 on $mux $procmux$3044.
    dead port 1/2 on $mux $procmux$3047.
    dead port 1/2 on $mux $procmux$3050.
    dead port 1/2 on $mux $procmux$3056.
    dead port 1/2 on $mux $procmux$3059.
    dead port 1/2 on $mux $procmux$3062.
    dead port 1/2 on $mux $procmux$3068.
    dead port 1/2 on $mux $procmux$3071.
    dead port 1/2 on $mux $procmux$3074.
    dead port 1/2 on $mux $procmux$3080.
    dead port 1/2 on $mux $procmux$3083.
    dead port 1/2 on $mux $procmux$3086.
    dead port 1/2 on $mux $procmux$3092.
    dead port 1/2 on $mux $procmux$3095.
    dead port 1/2 on $mux $procmux$3098.
    dead port 1/2 on $mux $procmux$3104.
    dead port 1/2 on $mux $procmux$3107.
    dead port 1/2 on $mux $procmux$3110.
    dead port 1/2 on $mux $procmux$3116.
    dead port 1/2 on $mux $procmux$3119.
    dead port 1/2 on $mux $procmux$3122.
    dead port 1/2 on $mux $procmux$3128.
    dead port 1/2 on $mux $procmux$3131.
    dead port 1/2 on $mux $procmux$3134.
    dead port 1/2 on $mux $procmux$3140.
    dead port 1/2 on $mux $procmux$3143.
    dead port 1/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3152.
    dead port 1/2 on $mux $procmux$3155.
    dead port 1/2 on $mux $procmux$3158.
    dead port 1/2 on $mux $procmux$3164.
    dead port 1/2 on $mux $procmux$3167.
    dead port 1/2 on $mux $procmux$3170.
    dead port 1/2 on $mux $procmux$3176.
    dead port 1/2 on $mux $procmux$3179.
    dead port 1/2 on $mux $procmux$3185.
    dead port 1/2 on $mux $procmux$3188.
    dead port 1/2 on $mux $procmux$3194.
    dead port 1/2 on $mux $procmux$3197.
    dead port 1/2 on $mux $procmux$3203.
    dead port 1/2 on $mux $procmux$3206.
    dead port 1/2 on $mux $procmux$3221.
    dead port 1/2 on $mux $procmux$3224.
    dead port 1/2 on $mux $procmux$3230.
    dead port 1/2 on $mux $procmux$3233.
    dead port 1/2 on $mux $procmux$3239.
    dead port 1/2 on $mux $procmux$3242.
    dead port 1/2 on $mux $procmux$3248.
    dead port 1/2 on $mux $procmux$3251.
    dead port 1/2 on $mux $procmux$3257.
    dead port 1/2 on $mux $procmux$3260.
    dead port 1/2 on $mux $procmux$3266.
    dead port 1/2 on $mux $procmux$3269.
    dead port 1/2 on $mux $procmux$3275.
    dead port 1/2 on $mux $procmux$3278.
    dead port 1/2 on $mux $procmux$3284.
    dead port 1/2 on $mux $procmux$3287.
    dead port 1/2 on $mux $procmux$3293.
    dead port 1/2 on $mux $procmux$3296.
    dead port 1/2 on $mux $procmux$3302.
    dead port 1/2 on $mux $procmux$3305.
    dead port 1/2 on $mux $procmux$3311.
    dead port 1/2 on $mux $procmux$3314.
    dead port 1/2 on $mux $procmux$3320.
    dead port 1/2 on $mux $procmux$3326.
    dead port 1/2 on $mux $procmux$3332.
    dead port 1/2 on $mux $procmux$3338.
    dead port 1/2 on $mux $procmux$3344.
    dead port 1/2 on $mux $procmux$3350.
    dead port 1/2 on $mux $procmux$3356.
    dead port 1/2 on $mux $procmux$3362.
    dead port 1/2 on $mux $procmux$3368.
    dead port 1/2 on $mux $procmux$3374.
    dead port 1/2 on $mux $procmux$3380.
    dead port 1/2 on $mux $procmux$3392.
    dead port 1/2 on $mux $procmux$3398.
    dead port 1/2 on $mux $procmux$3404.
    dead port 1/2 on $mux $procmux$3410.
    dead port 1/2 on $mux $procmux$3416.
    dead port 1/2 on $mux $procmux$3422.
    dead port 1/2 on $mux $procmux$3428.
Removed 362 multiplexer ports.
<suppressed ~104 debug messages>

9.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\kianv_i.\register_file_i.$procmux$1155:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967
      New ports: A=1'0, B=1'1, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0]
      New connections: $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [31:1] = { $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file1$register_file.v:50$960_EN[31:0]$967 [0] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.\register_file_i.$procmux$1164:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964
      New ports: A=1'0, B=1'1, Y=$flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0]
      New connections: $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [31:1] = { $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] $flatten\kianv_i.\register_file_i.$0$memwr$\register_file0$register_file.v:49$959_EN[31:0]$964 [0] }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1633:
      Old ports: A=0, B=16711680, Y=$flatten\bram_i.$procmux$1633_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$1633_Y [16]
      New connections: { $flatten\bram_i.$procmux$1633_Y [31:17] $flatten\bram_i.$procmux$1633_Y [15:0] } = { 8'00000000 $flatten\bram_i.$procmux$1633_Y [16] $flatten\bram_i.$procmux$1633_Y [16] $flatten\bram_i.$procmux$1633_Y [16] $flatten\bram_i.$procmux$1633_Y [16] $flatten\bram_i.$procmux$1633_Y [16] $flatten\bram_i.$procmux$1633_Y [16] $flatten\bram_i.$procmux$1633_Y [16] 16'0000000000000000 }
    New ctrl vector for $pmux cell $flatten\my_tx_uart_i.$procmux$1223: { $flatten\my_tx_uart_i.$procmux$1184_CMP $auto$opt_reduce.cc:134:opt_pmux$3614 $flatten\my_tx_uart_i.$procmux$1178_CMP }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1660:
      Old ports: A=0, B=65280, Y=$flatten\bram_i.$procmux$1660_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$1660_Y [8]
      New connections: { $flatten\bram_i.$procmux$1660_Y [31:9] $flatten\bram_i.$procmux$1660_Y [7:0] } = { 16'0000000000000000 $flatten\bram_i.$procmux$1660_Y [8] $flatten\bram_i.$procmux$1660_Y [8] $flatten\bram_i.$procmux$1660_Y [8] $flatten\bram_i.$procmux$1660_Y [8] $flatten\bram_i.$procmux$1660_Y [8] $flatten\bram_i.$procmux$1660_Y [8] $flatten\bram_i.$procmux$1660_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1687:
      Old ports: A=0, B=255, Y=$flatten\bram_i.$procmux$1687_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$1687_Y [0]
      New connections: $flatten\bram_i.$procmux$1687_Y [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$procmux$1687_Y [0] $flatten\bram_i.$procmux$1687_Y [0] $flatten\bram_i.$procmux$1687_Y [0] $flatten\bram_i.$procmux$1687_Y [0] $flatten\bram_i.$procmux$1687_Y [0] $flatten\bram_i.$procmux$1687_Y [0] $flatten\bram_i.$procmux$1687_Y [0] }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1409: { $flatten\oled_ssd1331_i.$procmux$1346_CMP $flatten\oled_ssd1331_i.$procmux$1340_CMP $flatten\oled_ssd1331_i.$procmux$1360_CMP $auto$opt_reduce.cc:134:opt_pmux$3616 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1558: { $flatten\oled_ssd1331_i.$procmux$1603_CMP $flatten\oled_ssd1331_i.$procmux$1602_CMP $flatten\oled_ssd1331_i.$procmux$1601_CMP $flatten\oled_ssd1331_i.$procmux$1600_CMP $flatten\oled_ssd1331_i.$procmux$1599_CMP $flatten\oled_ssd1331_i.$procmux$1598_CMP $flatten\oled_ssd1331_i.$procmux$1596_CMP $flatten\oled_ssd1331_i.$procmux$1594_CMP $flatten\oled_ssd1331_i.$procmux$1593_CMP $flatten\oled_ssd1331_i.$procmux$1591_CMP $flatten\oled_ssd1331_i.$procmux$1590_CMP $flatten\oled_ssd1331_i.$procmux$1589_CMP $flatten\oled_ssd1331_i.$procmux$1588_CMP $flatten\oled_ssd1331_i.$procmux$1587_CMP $flatten\oled_ssd1331_i.$procmux$1586_CMP $flatten\oled_ssd1331_i.$procmux$1585_CMP $flatten\oled_ssd1331_i.$procmux$1584_CMP $flatten\oled_ssd1331_i.$procmux$1583_CMP $flatten\oled_ssd1331_i.$procmux$1581_CMP $flatten\oled_ssd1331_i.$procmux$1580_CMP $flatten\oled_ssd1331_i.$procmux$1579_CMP $auto$opt_reduce.cc:134:opt_pmux$3622 $flatten\oled_ssd1331_i.$procmux$1577_CMP $flatten\oled_ssd1331_i.$procmux$1576_CMP $flatten\oled_ssd1331_i.$procmux$1575_CMP $flatten\oled_ssd1331_i.$procmux$1574_CMP $flatten\oled_ssd1331_i.$procmux$1573_CMP $flatten\oled_ssd1331_i.$procmux$1572_CMP $flatten\oled_ssd1331_i.$procmux$1571_CMP $flatten\oled_ssd1331_i.$procmux$1570_CMP $flatten\oled_ssd1331_i.$procmux$1569_CMP $flatten\oled_ssd1331_i.$procmux$1568_CMP $flatten\oled_ssd1331_i.$procmux$1567_CMP $flatten\oled_ssd1331_i.$procmux$1566_CMP $flatten\oled_ssd1331_i.$procmux$1565_CMP $flatten\oled_ssd1331_i.$procmux$1564_CMP $auto$opt_reduce.cc:134:opt_pmux$3620 $flatten\oled_ssd1331_i.$procmux$1561_CMP $auto$opt_reduce.cc:134:opt_pmux$3618 $flatten\oled_ssd1331_i.$procmux$1559_CMP }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1606:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$flatten\bram_i.$procmux$1606_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$1606_Y [24]
      New connections: { $flatten\bram_i.$procmux$1606_Y [31:25] $flatten\bram_i.$procmux$1606_Y [23:0] } = { $flatten\bram_i.$procmux$1606_Y [24] $flatten\bram_i.$procmux$1606_Y [24] $flatten\bram_i.$procmux$1606_Y [24] $flatten\bram_i.$procmux$1606_Y [24] $flatten\bram_i.$procmux$1606_Y [24] $flatten\bram_i.$procmux$1606_Y [24] $flatten\bram_i.$procmux$1606_Y [24] 24'000000000000000000000000 }
    New ctrl vector for $pmux cell $flatten\kianv_i.$procmux$1968: { \kianv_i.cpu_state [0] $auto$opt_reduce.cc:134:opt_pmux$3624 \kianv_i.cpu_state [4] \kianv_i.cpu_state [5] }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1713:
      Old ports: A=0, B=$flatten\bram_i.$3$memwr$\mem$bram.v:54$774_EN[31:0]$833, Y=$flatten\bram_i.$procmux$1713_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1606_Y [24], Y=$flatten\bram_i.$procmux$1713_Y [24]
      New connections: { $flatten\bram_i.$procmux$1713_Y [31:25] $flatten\bram_i.$procmux$1713_Y [23:0] } = { $flatten\bram_i.$procmux$1713_Y [24] $flatten\bram_i.$procmux$1713_Y [24] $flatten\bram_i.$procmux$1713_Y [24] $flatten\bram_i.$procmux$1713_Y [24] $flatten\bram_i.$procmux$1713_Y [24] $flatten\bram_i.$procmux$1713_Y [24] $flatten\bram_i.$procmux$1713_Y [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1731:
      Old ports: A=0, B=$flatten\bram_i.$3$memwr$\mem$bram.v:53$773_EN[31:0]$830, Y=$flatten\bram_i.$procmux$1731_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1633_Y [16], Y=$flatten\bram_i.$procmux$1731_Y [16]
      New connections: { $flatten\bram_i.$procmux$1731_Y [31:17] $flatten\bram_i.$procmux$1731_Y [15:0] } = { 8'00000000 $flatten\bram_i.$procmux$1731_Y [16] $flatten\bram_i.$procmux$1731_Y [16] $flatten\bram_i.$procmux$1731_Y [16] $flatten\bram_i.$procmux$1731_Y [16] $flatten\bram_i.$procmux$1731_Y [16] $flatten\bram_i.$procmux$1731_Y [16] $flatten\bram_i.$procmux$1731_Y [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1749:
      Old ports: A=0, B=$flatten\bram_i.$3$memwr$\mem$bram.v:52$772_EN[31:0]$827, Y=$flatten\bram_i.$procmux$1749_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1660_Y [8], Y=$flatten\bram_i.$procmux$1749_Y [8]
      New connections: { $flatten\bram_i.$procmux$1749_Y [31:9] $flatten\bram_i.$procmux$1749_Y [7:0] } = { 16'0000000000000000 $flatten\bram_i.$procmux$1749_Y [8] $flatten\bram_i.$procmux$1749_Y [8] $flatten\bram_i.$procmux$1749_Y [8] $flatten\bram_i.$procmux$1749_Y [8] $flatten\bram_i.$procmux$1749_Y [8] $flatten\bram_i.$procmux$1749_Y [8] $flatten\bram_i.$procmux$1749_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1767:
      Old ports: A=0, B=$flatten\bram_i.$3$memwr$\mem$bram.v:51$771_EN[31:0]$824, Y=$flatten\bram_i.$procmux$1767_Y
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1687_Y [0], Y=$flatten\bram_i.$procmux$1767_Y [0]
      New connections: $flatten\bram_i.$procmux$1767_Y [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$procmux$1767_Y [0] $flatten\bram_i.$procmux$1767_Y [0] $flatten\bram_i.$procmux$1767_Y [0] $flatten\bram_i.$procmux$1767_Y [0] $flatten\bram_i.$procmux$1767_Y [0] $flatten\bram_i.$procmux$1767_Y [0] $flatten\bram_i.$procmux$1767_Y [0] }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1785:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:54$774_EN[31:0]$821, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1713_Y [24], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [31:25] $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [23:0] } = { $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:54$774_EN[31:0]$791 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1794:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:53$773_EN[31:0]$818, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1731_Y [16], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [31:17] $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [15:0] } = { 8'00000000 $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1803:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:52$772_EN[31:0]$815, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1749_Y [8], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [31:9] $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [7:0] } = { 16'0000000000000000 $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$1812:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:51$771_EN[31:0]$812, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782
      New ports: A=1'0, B=$flatten\bram_i.$procmux$1767_Y [0], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0]
      New connections: $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782 [0] }
  Optimizing cells in module \kianv_soc.
Performed a total of 18 changes.

9.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

9.11.6. Executing OPT_DFF pass (perform DFF optimizations).

9.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 477 unused wires.
<suppressed ~1 debug messages>

9.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.11.9. Rerunning OPT passes. (Maybe there is more to do..)

9.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

9.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1355: { $flatten\oled_ssd1331_i.$procmux$1346_CMP $flatten\oled_ssd1331_i.$procmux$1340_CMP $flatten\oled_ssd1331_i.$procmux$1360_CMP $auto$opt_reduce.cc:134:opt_pmux$3626 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1384: { $flatten\oled_ssd1331_i.$procmux$1346_CMP $flatten\oled_ssd1331_i.$procmux$1340_CMP $flatten\oled_ssd1331_i.$procmux$1360_CMP $auto$opt_reduce.cc:134:opt_pmux$3628 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1444: { $flatten\oled_ssd1331_i.$procmux$1360_CMP $auto$opt_reduce.cc:134:opt_pmux$3630 }
  Optimizing cells in module \kianv_soc.
Performed a total of 3 changes.

9.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.11.13. Executing OPT_DFF pass (perform DFF optimizations).

9.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

9.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.11.16. Rerunning OPT passes. (Maybe there is more to do..)

9.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

9.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.11.20. Executing OPT_DFF pass (perform DFF optimizations).

9.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.11.23. Finished OPT passes. (There is nothing left to do.)

9.12. Executing FSM pass (extract and optimize FSM).

9.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking kianv_soc.kianv_i.cpu_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking kianv_soc.kianv_i.div_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking kianv_soc.kianv_i.mul_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking kianv_soc.my_tx_uart_i.return_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register kianv_soc.oled_ssd1331_i.state.
Found FSM state register kianv_soc.spi_flash_mem_i.state.

9.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\oled_ssd1331_i.state' from module `\kianv_soc'.
  found $dff cell for state register: $flatten\oled_ssd1331_i.$procdff$3552
  root of input selection tree: $flatten\oled_ssd1331_i.$0\state[2:0]
  found reset state: 3'011 (guessed from mux tree)
  found ctrl input: \bram_i.resetn
  found state code: 3'011
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1356_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1360_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1365_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1340_CMP
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1346_CMP
  found state code: 3'000
  found ctrl input: $flatten\oled_ssd1331_i.$procmux$1354_CMP
  found ctrl input: \oled_ssd1331_i.spi_clk
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$858_Y
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:176$861_Y
  found state code: 3'100
  found ctrl input: \oled_ssd1331_i.setpixel_raw8tx
  found state code: 3'001
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:147$847_Y
  found state code: 3'010
  found ctrl input: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$845_Y
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1365_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1360_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1356_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1346_CMP
  found ctrl output: $flatten\oled_ssd1331_i.$procmux$1340_CMP
  ctrl inputs: { \bram_i.resetn \oled_ssd1331_i.setpixel_raw8tx \oled_ssd1331_i.spi_clk $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$845_Y $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:147$847_Y $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$858_Y $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:176$861_Y $flatten\oled_ssd1331_i.$procmux$1354_CMP }
  ctrl outputs: { $flatten\oled_ssd1331_i.$0\state[2:0] $flatten\oled_ssd1331_i.$procmux$1340_CMP $flatten\oled_ssd1331_i.$procmux$1346_CMP $flatten\oled_ssd1331_i.$procmux$1356_CMP $flatten\oled_ssd1331_i.$procmux$1360_CMP $flatten\oled_ssd1331_i.$procmux$1365_CMP }
  transition:      3'000 8'0------- ->      3'011 8'01101000
  transition:      3'000 8'1--0---- ->      3'000 8'00001000
  transition:      3'000 8'10-1---- ->      3'010 8'01001000
  transition:      3'000 8'11-1---- ->      3'001 8'00101000
  transition:      3'100 8'0------- ->      3'011 8'01100100
  transition:      3'100 8'1------0 ->      3'100 8'10000100
  transition:      3'100 8'1-0----1 ->      3'100 8'10000100
  transition:      3'100 8'1-1--0-1 ->      3'100 8'10000100
  transition:      3'100 8'1-1--1-1 ->      3'011 8'01100100
  transition:      3'010 8'0------- ->      3'011 8'01100001
  transition:      3'010 8'1------0 ->      3'010 8'01000001
  transition:      3'010 8'1-0----1 ->      3'010 8'01000001
  transition:      3'010 8'1-1--0-1 ->      3'010 8'01000001
  transition:      3'010 8'101--1-1 ->      3'000 8'00000001
  transition:      3'010 8'111--1-1 ->      3'001 8'00100001
  transition:      3'001 8'0------- ->      3'011 8'01110000
  transition:      3'001 8'1---0--- ->      3'010 8'01010000
  transition:      3'001 8'1---1--- ->      3'000 8'00010000
  transition:      3'011 8'0------- ->      3'011 8'01100010
  transition:      3'011 8'1-----0- ->      3'100 8'10000010
  transition:      3'011 8'1-----1- ->      3'000 8'00000010
Extracting FSM `\spi_flash_mem_i.state' from module `\kianv_soc'.
  found $dff cell for state register: $flatten\spi_flash_mem_i.$procdff$3544
  root of input selection tree: $flatten\spi_flash_mem_i.$0\state[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \bram_i.resetn
  found state code: 3'000
  found ctrl input: $flatten\spi_flash_mem_i.$procmux$1263_CMP
  found ctrl input: $flatten\spi_flash_mem_i.$procmux$1270_CMP
  found ctrl input: $flatten\spi_flash_mem_i.$procmux$1273_CMP
  found ctrl input: $flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:117$879_Y
  found state code: 3'010
  found ctrl input: $flatten\spi_flash_mem_i.$logic_and$spi_flash_mem.v:104$877_Y
  found state code: 3'001
  found ctrl output: $flatten\spi_flash_mem_i.$procmux$1273_CMP
  found ctrl output: $flatten\spi_flash_mem_i.$procmux$1270_CMP
  found ctrl output: $flatten\spi_flash_mem_i.$procmux$1263_CMP
  ctrl inputs: { \bram_i.resetn $flatten\spi_flash_mem_i.$logic_and$spi_flash_mem.v:104$877_Y $flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:117$879_Y }
  ctrl outputs: { $flatten\spi_flash_mem_i.$0\state[2:0] $flatten\spi_flash_mem_i.$procmux$1263_CMP $flatten\spi_flash_mem_i.$procmux$1270_CMP $flatten\spi_flash_mem_i.$procmux$1273_CMP }
  transition:      3'000 3'0-- ->      3'000 6'000001
  transition:      3'000 3'10- ->      3'000 6'000001
  transition:      3'000 3'11- ->      3'001 6'001001
  transition:      3'010 3'0-- ->      3'000 6'000100
  transition:      3'010 3'1-0 ->      3'010 6'010100
  transition:      3'010 3'1-1 ->      3'000 6'000100
  transition:      3'001 3'0-- ->      3'000 6'000010
  transition:      3'001 3'1-0 ->      3'001 6'001010
  transition:      3'001 3'1-1 ->      3'010 6'010010

9.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\spi_flash_mem_i.state$3638' from module `\kianv_soc'.
Optimizing FSM `$fsm$\oled_ssd1331_i.state$3631' from module `\kianv_soc'.

9.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 28 unused cells and 28 unused wires.
<suppressed ~29 debug messages>

9.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\oled_ssd1331_i.state$3631' from module `\kianv_soc'.
  Removing unused output signal $flatten\oled_ssd1331_i.$0\state[2:0] [0].
  Removing unused output signal $flatten\oled_ssd1331_i.$0\state[2:0] [1].
  Removing unused output signal $flatten\oled_ssd1331_i.$0\state[2:0] [2].
Optimizing FSM `$fsm$\spi_flash_mem_i.state$3638' from module `\kianv_soc'.
  Removing unused output signal $flatten\spi_flash_mem_i.$0\state[2:0] [0].
  Removing unused output signal $flatten\spi_flash_mem_i.$0\state[2:0] [1].
  Removing unused output signal $flatten\spi_flash_mem_i.$0\state[2:0] [2].

9.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\oled_ssd1331_i.state$3631' from module `\kianv_soc' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ---1-
  100 -> --1--
  010 -> -1---
  001 -> 1----
  011 -> ----1
Recoding FSM `$fsm$\spi_flash_mem_i.state$3638' from module `\kianv_soc' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> --1
  010 -> -1-
  001 -> 1--

9.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\oled_ssd1331_i.state$3631' from module `kianv_soc':
-------------------------------------

  Information on FSM $fsm$\oled_ssd1331_i.state$3631 (\oled_ssd1331_i.state):

  Number of input signals:    8
  Number of output signals:   5
  Number of state bits:       5

  Input signals:
    0: $flatten\oled_ssd1331_i.$procmux$1354_CMP
    1: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:176$861_Y
    2: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$858_Y
    3: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:147$847_Y
    4: $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$845_Y
    5: \oled_ssd1331_i.spi_clk
    6: \oled_ssd1331_i.setpixel_raw8tx
    7: \bram_i.resetn

  Output signals:
    0: $flatten\oled_ssd1331_i.$procmux$1365_CMP
    1: $flatten\oled_ssd1331_i.$procmux$1360_CMP
    2: $flatten\oled_ssd1331_i.$procmux$1356_CMP
    3: $flatten\oled_ssd1331_i.$procmux$1346_CMP
    4: $flatten\oled_ssd1331_i.$procmux$1340_CMP

  State encoding:
    0:    5'---1-
    1:    5'--1--
    2:    5'-1---
    3:    5'1----
    4:    5'----1  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'1--0----   ->     0 5'01000
      1:     0 8'10-1----   ->     2 5'01000
      2:     0 8'11-1----   ->     3 5'01000
      3:     0 8'0-------   ->     4 5'01000
      4:     1 8'1------0   ->     1 5'00100
      5:     1 8'1-1--0-1   ->     1 5'00100
      6:     1 8'1-0----1   ->     1 5'00100
      7:     1 8'1-1--1-1   ->     4 5'00100
      8:     1 8'0-------   ->     4 5'00100
      9:     2 8'101--1-1   ->     0 5'00001
     10:     2 8'1------0   ->     2 5'00001
     11:     2 8'1-1--0-1   ->     2 5'00001
     12:     2 8'1-0----1   ->     2 5'00001
     13:     2 8'111--1-1   ->     3 5'00001
     14:     2 8'0-------   ->     4 5'00001
     15:     3 8'1---1---   ->     0 5'10000
     16:     3 8'1---0---   ->     2 5'10000
     17:     3 8'0-------   ->     4 5'10000
     18:     4 8'1-----1-   ->     0 5'00010
     19:     4 8'1-----0-   ->     1 5'00010
     20:     4 8'0-------   ->     4 5'00010

-------------------------------------

FSM `$fsm$\spi_flash_mem_i.state$3638' from module `kianv_soc':
-------------------------------------

  Information on FSM $fsm$\spi_flash_mem_i.state$3638 (\spi_flash_mem_i.state):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: $flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:117$879_Y
    1: $flatten\spi_flash_mem_i.$logic_and$spi_flash_mem.v:104$877_Y
    2: \bram_i.resetn

  Output signals:
    0: $flatten\spi_flash_mem_i.$procmux$1273_CMP
    1: $flatten\spi_flash_mem_i.$procmux$1270_CMP
    2: $flatten\spi_flash_mem_i.$procmux$1263_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'10-   ->     0 3'001
      1:     0 3'0--   ->     0 3'001
      2:     0 3'11-   ->     2 3'001
      3:     1 3'1-1   ->     0 3'100
      4:     1 3'0--   ->     0 3'100
      5:     1 3'1-0   ->     1 3'100
      6:     2 3'0--   ->     0 3'010
      7:     2 3'1-1   ->     1 3'010
      8:     2 3'1-0   ->     2 3'010

-------------------------------------

9.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\oled_ssd1331_i.state$3631' from module `\kianv_soc'.
Mapping FSM `$fsm$\spi_flash_mem_i.state$3638' from module `\kianv_soc'.

9.13. Executing OPT pass (performing simple optimizations).

9.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~2 debug messages>

9.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

9.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~104 debug messages>

9.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$3604 ($dff) from module kianv_soc (D = $ternary$gpio.v:45$391_Y, Q = \gpio_output_val, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$3751 ($sdff) from module kianv_soc (D = \kianv_i.mem_din [7:0], Q = \gpio_output_val).
Adding SRST signal on $procdff$3603 ($dff) from module kianv_soc (D = $ternary$gpio.v:46$392_Y, Q = \gpio_output_en, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$3753 ($sdff) from module kianv_soc (D = \kianv_i.mem_din [7:0], Q = \gpio_output_en).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3547 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1262_Y, Q = \spi_flash_mem_i.rcv_buff, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$3755 ($sdff) from module kianv_soc (D = { \spi_flash_mem_i.rcv_buff [30:0] \spi_mem_flash_miso }, Q = \spi_flash_mem_i.rcv_buff).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3546 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1269_Y, Q = \spi_flash_mem_i.shift_reg, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$3757 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1269_Y, Q = \spi_flash_mem_i.shift_reg).
Adding EN signal on $flatten\spi_flash_mem_i.$procdff$3545 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1278_Y, Q = \spi_flash_mem_i.shift_cnt).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3543 ($dff) from module kianv_soc (D = \kianv_i.mem_rd, Q = \spi_flash_mem_i.rd_r [0], rval = 1'0).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3543 ($dff) from module kianv_soc (D = \spi_flash_mem_i.rd_r [0], Q = \spi_flash_mem_i.rd_r [1], rval = 1'0).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3542 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1308_Y, Q = \spi_flash_mem_i.spi_cs, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$3780 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1306_Y, Q = \spi_flash_mem_i.spi_cs).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3541 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1316_Y, Q = \spi_flash_mem_i.valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3782 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1316_Y, Q = \spi_flash_mem_i.valid).
Adding SRST signal on $flatten\spi_flash_mem_i.$procdff$3540 ($dff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1327_Y, Q = \spi_flash_mem_i.ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3790 ($sdff) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1306_Y, Q = \spi_flash_mem_i.ready).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3559 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1339_Y, Q = \oled_ssd1331_i.setpixel_cmd_pos, rval = 7'1000000).
Adding EN signal on $auto$ff.cc:262:slice$3792 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1339_Y, Q = \oled_ssd1331_i.setpixel_cmd_pos).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3558 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1355_Y, Q = \oled_ssd1331_i.shift_reg, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$3802 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1355_Y, Q = \oled_ssd1331_i.shift_reg).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3557 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1384_Y, Q = \oled_ssd1331_i.shift_cnt, rval = 5'01100).
Adding EN signal on $auto$ff.cc:262:slice$3820 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1384_Y, Q = \oled_ssd1331_i.shift_cnt).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3556 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1409_Y, Q = \oled_ssd1331_i.clk_div, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$3838 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1409_Y, Q = \oled_ssd1331_i.clk_div).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3555 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1436_Y, Q = \oled_ssd1331_i.rom_addr, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$3852 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$867_Y [5:0], Q = \oled_ssd1331_i.rom_addr).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3554 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1444_Y, Q = \oled_ssd1331_i.spi_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3856 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1444_Y, Q = \oled_ssd1331_i.spi_clk).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3553 ($dff) from module kianv_soc (D = { \oled_ssd1331_i.strobe_r [0] \oled_ssd1331_i.strobe }, Q = \oled_ssd1331_i.strobe_r, rval = 2'01).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3551 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1494_Y, Q = \oled_ssd1331_i.spi_dc, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$3867 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1494_Y, Q = \oled_ssd1331_i.spi_dc).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3550 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1514_Y, Q = \oled_ssd1331_i.spi_cs, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$3881 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1514_Y, Q = \oled_ssd1331_i.spi_cs).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3549 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1533_Y, Q = \oled_ssd1331_i.valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3889 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1533_Y, Q = \oled_ssd1331_i.valid).
Adding SRST signal on $flatten\oled_ssd1331_i.$procdff$3548 ($dff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1552_Y, Q = \oled_ssd1331_i.ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3903 ($sdff) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1550_Y, Q = \oled_ssd1331_i.ready).
Adding EN signal on $flatten\my_tx_uart_i.$procdff$3539 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177_Y, Q = \my_tx_uart_i.wait_states).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3538 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1195_Y, Q = \my_tx_uart_i.tx_data_reg, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$3912 ($sdff) from module kianv_soc (D = \my_tx_uart_i.tx_data, Q = \my_tx_uart_i.tx_data_reg).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3537 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1203_Y, Q = \my_tx_uart_i.bit_idx, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3916 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$889_Y [2:0], Q = \my_tx_uart_i.bit_idx).
Adding EN signal on $flatten\my_tx_uart_i.$procdff$3536 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1210_Y, Q = \my_tx_uart_i.return_state).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3535 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1223_Y, Q = \my_tx_uart_i.state, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3925 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1223_Y, Q = \my_tx_uart_i.state).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3534 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1241_Y, Q = \my_tx_uart_i.ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3933 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1239_Y, Q = \my_tx_uart_i.ready).
Adding SRST signal on $flatten\my_tx_uart_i.$procdff$3533 ($dff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1248_Y, Q = \my_tx_uart_i.tx_out, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$3935 ($sdff) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1248_Y, Q = \my_tx_uart_i.tx_out).
Adding SRST signal on $flatten\kianv_i.$procdff$3602 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2111_Y, Q = \kianv_i.mul_state, rval = 3'001).
Adding SRST signal on $flatten\kianv_i.$procdff$3601 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2123_Y, Q = \kianv_i.mul_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3940 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2123_Y, Q = \kianv_i.mul_valid).
Adding SRST signal on $flatten\kianv_i.$procdff$3600 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2134_Y, Q = \kianv_i.mul_ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3944 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2132_Y, Q = \kianv_i.mul_ready).
Adding SRST signal on $flatten\kianv_i.$procdff$3599 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2141_Y, Q = \kianv_i.mul_bit, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$3946 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2141_Y, Q = \kianv_i.mul_bit).
Adding EN signal on $flatten\kianv_i.$procdff$3598 ($dff) from module kianv_soc (D = $flatten\kianv_i.$ternary$../kianv.v:335$633_Y, Q = \kianv_i.rs2_mul_abs).
Adding EN signal on $flatten\kianv_i.$procdff$3597 ($dff) from module kianv_soc (D = $flatten\kianv_i.$ternary$../kianv.v:334$629_Y, Q = \kianv_i.rs1_mul_abs).
Adding EN signal on $flatten\kianv_i.$procdff$3596 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170_Y, Q = \kianv_i.mul_rslt).
Adding SRST signal on $flatten\kianv_i.$procdff$3595 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2046_Y, Q = \kianv_i.div_rslt, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$3967 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2046_Y, Q = \kianv_i.div_rslt).
Adding SRST signal on $flatten\kianv_i.$procdff$3594 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2060_Y, Q = \kianv_i.div_bit, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$3977 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2060_Y, Q = \kianv_i.div_bit).
Adding SRST signal on $flatten\kianv_i.$procdff$3593 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2069_Y, Q = \kianv_i.div_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3985 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2069_Y, Q = \kianv_i.div_valid).
Adding SRST signal on $flatten\kianv_i.$procdff$3592 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2080_Y, Q = \kianv_i.div_ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3989 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2078_Y, Q = \kianv_i.div_ready).
Adding SRST signal on $flatten\kianv_i.$procdff$3591 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2086_Y, Q = \kianv_i.rem_rslt, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$3991 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2086_Y, Q = \kianv_i.rem_rslt).
Adding SRST signal on $flatten\kianv_i.$procdff$3590 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$2099_Y, Q = \kianv_i.div_state, rval = 3'001).
Adding EN signal on $flatten\kianv_i.$procdff$3589 ($dff) from module kianv_soc (D = $flatten\kianv_i.$0\instr_reg[31:0], Q = \kianv_i.instr_reg).
Adding EN signal on $flatten\kianv_i.$procdff$3588 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1835_Y, Q = \kianv_i.div_start).
Adding EN signal on $flatten\kianv_i.$procdff$3587 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1849_Y, Q = \kianv_i.mul_start).
Adding SRST signal on $flatten\kianv_i.$procdff$3586 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1872_Y, Q = \kianv_i.instr_counter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$4027 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$add$../kianv.v:603$752_Y, Q = \kianv_i.instr_counter).
Adding SRST signal on $flatten\kianv_i.$procdff$3585 ($dff) from module kianv_soc (D = $flatten\kianv_i.$add$../kianv.v:593$751_Y, Q = \kianv_i.cycle_counter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $flatten\kianv_i.$procdff$3584 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1883_Y, Q = \kianv_i.rd_reg_file, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$4032 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$ternary$../kianv.v:674$759_Y, Q = \kianv_i.rd_reg_file).
Adding SRST signal on $flatten\kianv_i.$procdff$3583 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1892_Y, Q = \kianv_i.rd_wr, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4038 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1892_Y, Q = \kianv_i.rd_wr).
Adding SRST signal on $flatten\kianv_i.$procdff$3582 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1904_Y, Q = \kianv_i.cpu_state, rval = 7'0000001).
Adding SRST signal on $flatten\kianv_i.$procdff$3581 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1938_Y, Q = \kianv_i.pc, rval = 537919488).
Adding EN signal on $auto$ff.cc:262:slice$4049 ($sdff) from module kianv_soc (D = \kianv_i.next_pc, Q = \kianv_i.pc).
Adding SRST signal on $flatten\kianv_i.$procdff$3580 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1949_Y, Q = \kianv_i.mem_din, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$4053 ($sdff) from module kianv_soc (D = \kianv_i.rs2_store_rslt, Q = \kianv_i.mem_din).
Adding SRST signal on $flatten\kianv_i.$procdff$3579 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1958_Y, Q = \kianv_i.mem_addr, rval = 537919488).
Adding EN signal on $auto$ff.cc:262:slice$4057 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1958_Y, Q = \kianv_i.mem_addr).
Adding SRST signal on $flatten\kianv_i.$procdff$3578 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1968_Y, Q = \kianv_i.mem_rd, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$4065 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1968_Y, Q = \kianv_i.mem_rd).
Adding SRST signal on $flatten\kianv_i.$procdff$3577 ($dff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1983_Y, Q = \kianv_i.mem_wmask, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4075 ($sdff) from module kianv_soc (D = $flatten\kianv_i.$procmux$1983_Y, Q = \kianv_i.mem_wmask).

9.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 83 unused cells and 102 unused wires.
<suppressed ~84 debug messages>

9.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~27 debug messages>

9.13.9. Rerunning OPT passes. (Maybe there is more to do..)

9.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~92 debug messages>

9.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4026: { $auto$opt_dff.cc:194:make_patterns_logic$4023 $auto$opt_dff.cc:194:make_patterns_logic$4021 $auto$opt_dff.cc:194:make_patterns_logic$4019 $auto$opt_dff.cc:194:make_patterns_logic$4017 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$4015: { $auto$opt_dff.cc:194:make_patterns_logic$4012 $auto$opt_dff.cc:194:make_patterns_logic$4010 $auto$opt_dff.cc:194:make_patterns_logic$4008 $auto$opt_dff.cc:194:make_patterns_logic$4006 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$3966: { $auto$opt_dff.cc:194:make_patterns_logic$3963 $auto$opt_dff.cc:194:make_patterns_logic$3961 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$3959: { \kianv_i.mul_start \kianv_i.mul_state [0] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$3956: { \kianv_i.mul_start \kianv_i.mul_state [0] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$3924: { $auto$opt_dff.cc:194:make_patterns_logic$3921 $auto$opt_dff.cc:194:make_patterns_logic$3919 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$3911: { $auto$opt_dff.cc:194:make_patterns_logic$3908 $auto$opt_dff.cc:194:make_patterns_logic$3906 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$3855: { \oled_ssd1331_i.state [2] \oled_ssd1331_i.spi_clk \oled_ssd1331_i.clk_div $flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:167$858_Y }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$3771: { $auto$opt_dff.cc:194:make_patterns_logic$3766 $auto$opt_dff.cc:194:make_patterns_logic$3768 \reset_cnt }
  Optimizing cells in module \kianv_soc.
Performed a total of 9 changes.

9.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

9.13.13. Executing OPT_DFF pass (perform DFF optimizations).

9.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

9.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.13.16. Rerunning OPT passes. (Maybe there is more to do..)

9.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~93 debug messages>

9.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.13.20. Executing OPT_DFF pass (perform DFF optimizations).

9.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.13.23. Finished OPT passes. (There is nothing left to do.)

9.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1000 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1002 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1004 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1006 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1008 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1010 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1012 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1014 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1016 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1018 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1020 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1022 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1024 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1026 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1028 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1030 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1032 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1034 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1036 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1038 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1040 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$1042 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$980 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$982 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$984 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$986 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$988 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$990 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$992 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$994 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$996 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file0$register_file.v:41$998 (kianv_i.register_file_i.register_file0).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1001 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1003 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1005 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1007 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1009 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1011 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1013 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1015 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1017 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1019 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1021 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1023 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1025 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1027 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1029 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1031 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1033 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1035 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1037 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1039 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1041 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$1043 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$981 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$983 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$985 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$987 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$989 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$991 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$993 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$995 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$997 (kianv_i.register_file_i.register_file1).
Removed top 27 address bits (of 32) from memory init port kianv_soc.$flatten\kianv_i.\register_file_i.$meminit$\register_file1$register_file.v:42$999 (kianv_i.register_file_i.register_file1).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$3807 ($ne).
Removed top 25 bits (of 32) from port B of cell kianv_soc.$add$kianv_soc_icebreaker.v:98$384 ($add).
Removed top 18 bits (of 32) from port Y of cell kianv_soc.$add$kianv_soc_icebreaker.v:98$384 ($add).
Removed top 15 bits (of 16) from port B of cell kianv_soc.$add$kianv_soc_icebreaker.v:148$388 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$ge$kianv_soc_icebreaker.v:246$394 ($ge).
Removed top 18 bits (of 32) from port B of cell kianv_soc.$lt$kianv_soc_icebreaker.v:246$395 ($lt).
Removed top 3 bits (of 32) from port B of cell kianv_soc.$ge$kianv_soc_icebreaker.v:257$398 ($ge).
Removed top 3 bits (of 32) from port B of cell kianv_soc.$lt$kianv_soc_icebreaker.v:257$399 ($lt).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$ge$kianv_soc_icebreaker.v:269$402 ($ge).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$lt$kianv_soc_icebreaker.v:269$403 ($lt).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:279$406 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:291$408 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:291$409 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:305$414 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:310$415 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:324$417 ($eq).
Removed top 2 bits (of 32) from port B of cell kianv_soc.$eq$kianv_soc_icebreaker.v:333$419 ($eq).
Removed top 24 bits (of 32) from mux cell kianv_soc.$procmux$2241 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$3909 ($ne).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$3930 ($ne).
Removed top 24 bits (of 32) from mux cell kianv_soc.$procmux$2324 ($mux).
Removed top 24 bits (of 32) from mux cell kianv_soc.$procmux$2352 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$3951 ($ne).
Removed top 24 bits (of 32) from mux cell kianv_soc.$procmux$2453 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$4004 ($ne).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$4011 ($ne).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$4022 ($ne).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$4072 ($ne).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$4082 ($ne).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$4084 ($ne).
Removed top 31 bits (of 32) from mux cell kianv_soc.$procmux$2985 ($mux).
Removed top 2 bits (of 24) from mux cell kianv_soc.$procmux$3218 ($mux).
Removed top 7 bits (of 22) from mux cell kianv_soc.$procmux$3347 ($mux).
Removed top 2 bits (of 24) from mux cell kianv_soc.$procmux$3401 ($mux).
Removed top 21 bits (of 32) from mux cell kianv_soc.$procmux$3449 ($mux).
Removed top 7 bits (of 22) from mux cell kianv_soc.$procmux$3473 ($mux).
Removed top 2 bits (of 24) from mux cell kianv_soc.$procmux$3485 ($mux).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1228 ($mux).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1221 ($mux).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1214 ($mux).
Removed cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1182 ($mux).
Removed top 2 bits (of 3) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1180_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1179_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$procmux$1178_CMP0 ($eq).
Removed top 24 bits (of 25) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$eq$my_tx_uart.v:102$893 ($eq).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$892 ($sub).
Removed top 7 bits (of 32) from port Y of cell kianv_soc.$flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$892 ($sub).
Removed top 30 bits (of 32) from mux cell kianv_soc.$flatten\my_tx_uart_i.$ternary$my_tx_uart.v:87$891 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\my_tx_uart_i.$add$my_tx_uart.v:84$889 ($add).
Removed top 29 bits (of 32) from port Y of cell kianv_soc.$flatten\my_tx_uart_i.$add$my_tx_uart.v:84$889 ($add).
Removed cell kianv_soc.$flatten\spi_flash_mem_i.$procmux$1314 ($mux).
Removed cell kianv_soc.$flatten\spi_flash_mem_i.$procmux$1283 ($mux).
Removed cell kianv_soc.$flatten\spi_flash_mem_i.$procmux$1271 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$878 ($sub).
Removed top 27 bits (of 32) from port Y of cell kianv_soc.$flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$878 ($sub).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$flatten\spi_flash_mem_i.$eq$spi_flash_mem.v:104$876 ($eq).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$3809 ($ne).
Removed top 5 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1602_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1601_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1600_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1599_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1598_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1597_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1596_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1595_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1594_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1593_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1592_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1591_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1590_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1589_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1588_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1587_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1586_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1585_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1584_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1583_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1582_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1581_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1580_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1579_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1578_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1577_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1576_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1575_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1574_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1573_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1572_CMP0 ($eq).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1536 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1531 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1529 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1527 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1503 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1501 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1497 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1447 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1442 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1423 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1421 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1417 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1412 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1402 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1400 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1396 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1387 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1382 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1380 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1373 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1371 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1367 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1358 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1353 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1351 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1344 ($mux).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$procmux$1342 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$867 ($add).
Removed top 26 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$867 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$857 ($sub).
Removed top 27 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$857 ($sub).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$854 ($add).
Removed top 30 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$854 ($add).
Removed top 28 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$852 ($sub).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:0$851 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850 ($sub).
Removed top 24 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850 ($sub).
Removed top 27 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$gt$oled_sdd1331.v:151$848 ($gt).
Removed top 28 bits (of 32) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$846 ($sub).
Removed top 25 bits (of 32) from port Y of cell kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$846 ($sub).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$flatten\oled_ssd1331_i.$eq$oled_sdd1331.v:127$845 ($eq).
Removed cell kianv_soc.$flatten\oled_ssd1331_i.$ternary$oled_sdd1331.v:125$844 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$3762 ($ne).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1818 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1815 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1809 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1806 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1800 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1797 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1791 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1788 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1779 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1773 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1761 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1755 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1743 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1737 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1725 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1719 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1705 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1696 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1678 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1669 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1651 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1642 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1624 ($mux).
Removed cell kianv_soc.$flatten\bram_i.$procmux$1615 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$auto$opt_dff.cc:195:make_patterns_logic$3787 ($ne).
Removed cell kianv_soc.$flatten\kianv_i.\register_file_i.$procmux$1158 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.\register_file_i.$procmux$1161 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2092 ($mux).
Removed top 1 bits (of 3) from mux cell kianv_soc.$flatten\kianv_i.$procmux$2116 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2062 ($mux).
Removed top 1 bits (of 3) from mux cell kianv_soc.$flatten\kianv_i.$procmux$2104 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2052 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2143 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2040 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2037 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2034 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2031 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2013 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1988 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1986 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1981 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1973 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1966 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1956 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$2173 ($mux).
Removed top 5 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$procmux$1928 ($mux).
Removed top 1 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$procmux$1910 ($mux).
Removed top 1 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$procmux$1906 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1895 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1890 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1857 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1855 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1853 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1842 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1840 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1838 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1832 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$procmux$1829 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:603$752 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:593$751 ($add).
Removed top 16 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:495$719 ($mux).
Removed top 24 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:487$712 ($mux).
Removed top 24 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:488$710 ($mux).
Removed top 24 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:489$708 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:490$706 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:469$697 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:468$695 ($mux).
Removed top 3 bits (of 4) from port A of cell kianv_soc.$flatten\kianv_i.$shl$../kianv.v:464$692 ($shl).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:463$691 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:463$689 ($eq).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:462$688 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:461$685 ($mux).
Removed top 1 bits (of 2) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:461$683 ($eq).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:460$682 ($mux).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:439$678 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:439$677 ($add).
Removed cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:438$674 ($mux).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:438$673 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:352$645 ($add).
Removed top 32 bits (of 64) from port A of cell kianv_soc.$flatten\kianv_i.$not$../kianv.v:352$644 ($not).
Removed top 32 bits (of 64) from port B of cell kianv_soc.$flatten\kianv_i.$and$../kianv.v:343$635 ($and).
Removed top 32 bits (of 64) from port Y of cell kianv_soc.$flatten\kianv_i.$and$../kianv.v:343$635 ($and).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:335$632 ($add).
Removed top 31 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:334$628 ($add).
Removed top 31 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:280$591 ($mux).
Removed top 31 bits (of 32) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:278$589 ($mux).
Removed top 29 bits (of 32) from port B of cell kianv_soc.$flatten\kianv_i.$add$../kianv.v:276$586 ($add).
Removed top 32 bits (of 64) from port Y of cell kianv_soc.$flatten\kianv_i.$shr$../kianv.v:256$566 ($shr).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:244$556 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:243$555 ($eq).
Removed top 8 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:242$554 ($eq).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:237$551 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:236$550 ($eq).
Removed top 4 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:235$549 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:228$542 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:227$541 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:226$540 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:225$539 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:224$538 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:223$537 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:222$536 ($eq).
Removed top 1 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:221$535 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:217$534 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:216$533 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:215$532 ($eq).
Removed top 3 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:214$531 ($eq).
Removed top 6 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:212$529 ($eq).
Removed top 2 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:206$520 ($eq).
Removed top 3 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:205$519 ($eq).
Removed top 4 bits (of 12) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:204$518 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:201$511 ($eq).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:195$506 ($eq).
Removed top 1 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:194$505 ($eq).
Removed top 5 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:193$504 ($eq).
Removed top 3 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:190$503 ($eq).
Removed top 2 bits (of 7) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:186$501 ($eq).
Removed top 1 bits (of 7) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:185$500 ($eq).
Removed top 2 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:178$495 ($eq).
Removed top 3 bits (of 10) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:177$494 ($eq).
Removed top 1 bits (of 3) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:160$475 ($eq).
Removed top 1 bits (of 7) from mux cell kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:148$469 ($mux).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:114$458 ($eq).
Removed top 2 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:113$457 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:109$454 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:108$453 ($eq).
Removed top 2 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:104$447 ($eq).
Removed top 2 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:103$445 ($eq).
Removed top 4 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:102$443 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:94$436 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:93$434 ($eq).
Removed top 1 bits (of 5) from port B of cell kianv_soc.$flatten\kianv_i.$eq$../kianv.v:92$433 ($eq).
Removed top 24 bits (of 32) from wire kianv_soc.$10\mem_dout[31:0].
Removed top 24 bits (of 32) from wire kianv_soc.$11\mem_dout[31:0].
Removed top 24 bits (of 32) from wire kianv_soc.$12\mem_dout[31:0].
Removed top 24 bits (of 32) from wire kianv_soc.$13\mem_dout[31:0].
Removed top 2 bits (of 24) from wire kianv_soc.$2\mem_spi_addr[23:0].
Removed top 7 bits (of 22) from wire kianv_soc.$2\mem_spram_addr[21:0].
Removed top 2 bits (of 24) from wire kianv_soc.$3\mem_spi_addr[23:0].
Removed top 31 bits (of 32) from wire kianv_soc.$5\mem_dout[31:0].
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:51$771_ADDR[12:0]$780.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:51$771_DATA[31:0]$781.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:51$771_EN[31:0]$782.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:52$772_ADDR[12:0]$783.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:52$772_DATA[31:0]$784.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:52$772_EN[31:0]$785.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:53$773_ADDR[12:0]$786.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:53$773_DATA[31:0]$787.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:53$773_EN[31:0]$788.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$0$memwr$\mem$bram.v:54$774_ADDR[12:0]$789.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:51$771_ADDR[12:0]$810.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:51$771_DATA[31:0]$811.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:51$771_EN[31:0]$812.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:52$772_ADDR[12:0]$813.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:52$772_DATA[31:0]$814.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:52$772_EN[31:0]$815.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:53$773_ADDR[12:0]$816.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:53$773_DATA[31:0]$817.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:53$773_EN[31:0]$818.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$2$memwr$\mem$bram.v:54$774_ADDR[12:0]$819.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:51$771_ADDR[12:0]$822.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:51$771_DATA[31:0]$823.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:51$771_EN[31:0]$824.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:52$772_ADDR[12:0]$825.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:52$772_DATA[31:0]$826.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:52$772_EN[31:0]$827.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:53$773_ADDR[12:0]$828.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:53$773_EN[31:0]$830.
Removed top 2 bits (of 13) from wire kianv_soc.$flatten\bram_i.$3$memwr$\mem$bram.v:54$774_ADDR[12:0]$831.
Removed top 32 bits (of 64) from wire kianv_soc.$flatten\kianv_i.$and$../kianv.v:343$635_Y.
Removed top 1 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$1906_Y.
Removed top 2 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$1910_Y.
Removed top 1 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$1912_Y.
Removed top 5 bits (of 7) from wire kianv_soc.$flatten\kianv_i.$procmux$1928_Y.
Removed top 1 bits (of 3) from wire kianv_soc.$flatten\kianv_i.$procmux$2104_Y.
Removed top 1 bits (of 3) from wire kianv_soc.$flatten\kianv_i.$procmux$2116_Y.
Removed top 31 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:278$589_Y.
Removed top 31 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:280$591_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:487$712_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:488$710_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:489$708_Y.
Removed top 24 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:490$706_Y.
Removed top 7 bits (of 24) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:491$713_Y.
Removed top 16 bits (of 32) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:495$719_Y.
Removed top 6 bits (of 16) from wire kianv_soc.$flatten\kianv_i.$ternary$../kianv.v:497$720_Y.
Removed top 29 bits (of 32) from wire kianv_soc.$flatten\my_tx_uart_i.$add$my_tx_uart.v:84$889_Y.
Removed top 7 bits (of 32) from wire kianv_soc.$flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$892_Y.
Removed top 30 bits (of 32) from wire kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$854_Y.
Removed top 26 bits (of 32) from wire kianv_soc.$flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$867_Y.
Removed top 25 bits (of 32) from wire kianv_soc.$flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$846_Y.
Removed top 8 bits (of 32) from wire kianv_soc.$flatten\spi_flash_mem_i.$procmux$1271_Y.
Removed top 27 bits (of 32) from wire kianv_soc.$flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$878_Y.
Removed top 21 bits (of 32) from wire kianv_soc.mem_bram_addr.
Removed top 16 bits (of 32) from wire kianv_soc.mem_spi_data_out.

9.15. Executing PEEPOPT pass (run peephole optimizers).

9.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 157 unused wires.
<suppressed ~1 debug messages>

9.17. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module kianv_soc that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\kianv_i.$shr$../kianv.v:265$578 ($shr):
    Found 11 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$eq$../kianv.v:460$680_Y $flatten\kianv_i.$eq$../kianv.v:461$683_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y }.
    Found 1 candidates: $flatten\kianv_i.$shr$../kianv.v:256$566
    Analyzing resource sharing with $flatten\kianv_i.$shr$../kianv.v:256$566 ($shr):
      Found 11 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y $flatten\kianv_i.$eq$../kianv.v:460$680_Y $flatten\kianv_i.$eq$../kianv.v:461$683_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:460$680_Y $flatten\kianv_i.$eq$../kianv.v:461$683_Y $flatten\kianv_i.$eq$../kianv.v:462$686_Y }
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y } = 7'0001001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y } = 8'00000001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y } = 9'000001001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 10'0000010010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 11'00000010010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y } = 10'0001001001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y } = 9'000101001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:265$578: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 11'00000010011
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 12'000000100011
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y } = 10'0001010001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y } = 11'00010010001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 11'00000100010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 12'000000100010
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y } = 10'0000010001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y } = 9'000000001
      Activation pattern for cell $flatten\kianv_i.$shr$../kianv.v:256$566: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y } = 8'00010001
      Size of SAT problem: 0 cells, 4607 variables, 12555 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\kianv_i.$shr$../kianv.v:265$578: $auto$share.cc:987:make_cell_activation_logic$4158
      New cell: $auto$share.cc:667:make_supercell$4165 ($shr)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$4165 ($shr):
    Found 16 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:265$576_Y $flatten\kianv_i.$or$../kianv.v:266$579_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y }.
    No candidates found.
  Analyzing resource sharing options for $flatten\kianv_i.$shl$../kianv.v:343$636 ($shl):
    Found 1 activation_patterns using ctrl signal \kianv_i.mul_state [1].
    Found 1 candidates: $flatten\kianv_i.$shl$../kianv.v:264$575
    Analyzing resource sharing with $flatten\kianv_i.$shl$../kianv.v:264$575 ($shl):
      Found 11 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$eq$../kianv.v:460$680_Y $flatten\kianv_i.$eq$../kianv.v:461$683_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y }.
      Forbidden control signals for this pair of cells: { \kianv_i.alu_rslt [1] $flatten\kianv_i.$eq$../kianv.v:460$680_Y $flatten\kianv_i.$eq$../kianv.v:461$683_Y $flatten\kianv_i.$eq$../kianv.v:462$686_Y }
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:343$636: \kianv_i.mul_state [1] = 1'1
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_lhu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 10'0000001011
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y } = 8'00010101
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.cpu_state [4] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y } = 9'000100101
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 9'000001010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 10'0000001010
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_lw \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y } = 8'00000101
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_load $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y } = 7'0000001
      Activation pattern for cell $flatten\kianv_i.$shl$../kianv.v:264$575: { \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y } = 6'000101
      Size of SAT problem: 0 cells, 4523 variables, 12140 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.mul_state [1] \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y } = 17'00000000000100010
  Analyzing resource sharing options for $flatten\kianv_i.$shl$../kianv.v:264$575 ($shl):
    Found 11 activation_patterns using ctrl signal { \kianv_i.is_csr_timer_cnt \kianv_i.is_xori \kianv_i.is_ori \kianv_i.is_andi \kianv_i.is_sb \kianv_i.is_sh \kianv_i.is_sw \kianv_i.is_lw \kianv_i.is_lbu \kianv_i.is_lhu \kianv_i.is_load \kianv_i.cpu_state [4] \kianv_i.cpu_state [2] $flatten\kianv_i.$or$../kianv.v:260$568_Y $flatten\kianv_i.$or$../kianv.v:264$573_Y $flatten\kianv_i.$eq$../kianv.v:460$680_Y $flatten\kianv_i.$eq$../kianv.v:461$683_Y $flatten\kianv_i.$or$../kianv.v:494$714_Y }.
    No candidates found.
Removing 2 cells in module kianv_soc:
  Removing cell $flatten\kianv_i.$shr$../kianv.v:256$566 ($shr).
  Removing cell $flatten\kianv_i.$shr$../kianv.v:265$578 ($shr).

9.18. Executing TECHMAP pass (map to technology primitives).

9.18.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

9.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~244 debug messages>

9.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

9.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module kianv_soc:
  creating $macc model for $add$kianv_soc_icebreaker.v:148$388 ($add).
  creating $macc model for $add$kianv_soc_icebreaker.v:98$384 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:260$569 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:270$583 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:275$585 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:276$586 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:334$628 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:335$632 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:343$637 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:344$638 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:352$645 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:423$665 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:438$673 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:439$677 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:593$751 ($add).
  creating $macc model for $flatten\kianv_i.$add$../kianv.v:603$752 ($add).
  creating $macc model for $flatten\kianv_i.$sub$../kianv.v:271$584 ($sub).
  creating $macc model for $flatten\kianv_i.$sub$../kianv.v:394$662 ($sub).
  creating $macc model for $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$889 ($add).
  creating $macc model for $flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$892 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:0$851 ($add).
  creating $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$854 ($add).
  creating $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$867 ($add).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$852 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$846 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850 ($sub).
  creating $macc model for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$857 ($sub).
  creating $macc model for $flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$878 ($sub).
  merging $macc model for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:0$851 into $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$852.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$857.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$846.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$867.
  creating $alu model for $macc $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$854.
  creating $alu model for $macc $flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$878.
  creating $alu model for $macc $flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$892.
  creating $alu model for $macc $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$889.
  creating $alu model for $macc $flatten\kianv_i.$sub$../kianv.v:394$662.
  creating $alu model for $macc $flatten\kianv_i.$sub$../kianv.v:271$584.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:603$752.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:593$751.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:439$677.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:438$673.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:423$665.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:352$645.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:344$638.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:343$637.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:335$632.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:334$628.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:276$586.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:275$585.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:270$583.
  creating $alu model for $macc $flatten\kianv_i.$add$../kianv.v:260$569.
  creating $alu model for $macc $add$kianv_soc_icebreaker.v:98$384.
  creating $alu model for $macc $add$kianv_soc_icebreaker.v:148$388.
  creating $macc cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:0$852: $auto$alumacc.cc:365:replace_macc$4169
  creating $alu model for $flatten\kianv_i.$ge$../kianv.v:532$730 ($ge): new $alu
  creating $alu model for $flatten\kianv_i.$lt$../kianv.v:252$563 ($lt): merged with $flatten\kianv_i.$ge$../kianv.v:532$730.
  creating $alu model for $flatten\kianv_i.$lt$../kianv.v:253$564 ($lt): new $alu
  creating $alu model for $flatten\oled_ssd1331_i.$gt$oled_sdd1331.v:151$848 ($gt): new $alu
  creating $alu model for $ge$kianv_soc_icebreaker.v:246$394 ($ge): new $alu
  creating $alu model for $ge$kianv_soc_icebreaker.v:257$398 ($ge): new $alu
  creating $alu model for $ge$kianv_soc_icebreaker.v:269$402 ($ge): new $alu
  creating $alu model for $lt$kianv_soc_icebreaker.v:246$395 ($lt): new $alu
  creating $alu model for $lt$kianv_soc_icebreaker.v:257$399 ($lt): new $alu
  creating $alu model for $lt$kianv_soc_icebreaker.v:269$403 ($lt): new $alu
  creating $alu model for $flatten\kianv_i.$eq$../kianv.v:529$725 ($eq): merged with $flatten\kianv_i.$ge$../kianv.v:532$730.
  creating $alu model for $flatten\kianv_i.$ne$../kianv.v:530$726 ($ne): merged with $flatten\kianv_i.$ge$../kianv.v:532$730.
  creating $alu cell for $lt$kianv_soc_icebreaker.v:269$403: $auto$alumacc.cc:485:replace_alu$4179
  creating $alu cell for $lt$kianv_soc_icebreaker.v:257$399: $auto$alumacc.cc:485:replace_alu$4190
  creating $alu cell for $lt$kianv_soc_icebreaker.v:246$395: $auto$alumacc.cc:485:replace_alu$4201
  creating $alu cell for $ge$kianv_soc_icebreaker.v:269$402: $auto$alumacc.cc:485:replace_alu$4212
  creating $alu cell for $ge$kianv_soc_icebreaker.v:257$398: $auto$alumacc.cc:485:replace_alu$4221
  creating $alu cell for $ge$kianv_soc_icebreaker.v:246$394: $auto$alumacc.cc:485:replace_alu$4230
  creating $alu cell for $flatten\oled_ssd1331_i.$gt$oled_sdd1331.v:151$848: $auto$alumacc.cc:485:replace_alu$4239
  creating $alu cell for $add$kianv_soc_icebreaker.v:148$388: $auto$alumacc.cc:485:replace_alu$4244
  creating $alu cell for $add$kianv_soc_icebreaker.v:98$384: $auto$alumacc.cc:485:replace_alu$4247
  creating $alu cell for $flatten\kianv_i.$lt$../kianv.v:253$564: $auto$alumacc.cc:485:replace_alu$4250
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:260$569: $auto$alumacc.cc:485:replace_alu$4261
  creating $alu cell for $flatten\kianv_i.$ge$../kianv.v:532$730, $flatten\kianv_i.$lt$../kianv.v:252$563, $flatten\kianv_i.$eq$../kianv.v:529$725, $flatten\kianv_i.$ne$../kianv.v:530$726: $auto$alumacc.cc:485:replace_alu$4264
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:270$583: $auto$alumacc.cc:485:replace_alu$4279
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:275$585: $auto$alumacc.cc:485:replace_alu$4282
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:276$586: $auto$alumacc.cc:485:replace_alu$4285
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:334$628: $auto$alumacc.cc:485:replace_alu$4288
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:335$632: $auto$alumacc.cc:485:replace_alu$4291
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:343$637: $auto$alumacc.cc:485:replace_alu$4294
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:344$638: $auto$alumacc.cc:485:replace_alu$4297
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:352$645: $auto$alumacc.cc:485:replace_alu$4300
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:423$665: $auto$alumacc.cc:485:replace_alu$4303
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:438$673: $auto$alumacc.cc:485:replace_alu$4306
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:439$677: $auto$alumacc.cc:485:replace_alu$4309
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:593$751: $auto$alumacc.cc:485:replace_alu$4312
  creating $alu cell for $flatten\kianv_i.$add$../kianv.v:603$752: $auto$alumacc.cc:485:replace_alu$4315
  creating $alu cell for $flatten\kianv_i.$sub$../kianv.v:271$584: $auto$alumacc.cc:485:replace_alu$4318
  creating $alu cell for $flatten\kianv_i.$sub$../kianv.v:394$662: $auto$alumacc.cc:485:replace_alu$4321
  creating $alu cell for $flatten\my_tx_uart_i.$add$my_tx_uart.v:84$889: $auto$alumacc.cc:485:replace_alu$4324
  creating $alu cell for $flatten\my_tx_uart_i.$sub$my_tx_uart.v:101$892: $auto$alumacc.cc:485:replace_alu$4327
  creating $alu cell for $flatten\spi_flash_mem_i.$sub$spi_flash_mem.v:114$878: $auto$alumacc.cc:485:replace_alu$4330
  creating $alu cell for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:160$854: $auto$alumacc.cc:485:replace_alu$4333
  creating $alu cell for $flatten\oled_ssd1331_i.$add$oled_sdd1331.v:199$867: $auto$alumacc.cc:485:replace_alu$4336
  creating $alu cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:146$846: $auto$alumacc.cc:485:replace_alu$4339
  creating $alu cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850: $auto$alumacc.cc:485:replace_alu$4342
  creating $alu cell for $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:164$857: $auto$alumacc.cc:485:replace_alu$4345
  created 35 $alu and 1 $macc cells.

9.22. Executing OPT pass (performing simple optimizations).

9.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~81 debug messages>

9.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New ctrl vector for $pmux cell $flatten\kianv_i.$procmux$1968: { $auto$opt_reduce.cc:134:opt_pmux$3624 $auto$opt_reduce.cc:134:opt_pmux$4349 \kianv_i.cpu_state [5] }
    New ctrl vector for $pmux cell $flatten\my_tx_uart_i.$procmux$1177: { $auto$opt_reduce.cc:134:opt_pmux$4351 $flatten\my_tx_uart_i.$procmux$1179_CMP $flatten\my_tx_uart_i.$procmux$1178_CMP }
    New ctrl vector for $pmux cell $flatten\my_tx_uart_i.$procmux$1223: { $auto$opt_reduce.cc:134:opt_pmux$4353 $flatten\my_tx_uart_i.$procmux$1178_CMP }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1384: { $auto$opt_reduce.cc:134:opt_pmux$4355 $auto$opt_reduce.cc:134:opt_pmux$3616 }
    New ctrl vector for $pmux cell $flatten\oled_ssd1331_i.$procmux$1409: { $auto$opt_reduce.cc:134:opt_pmux$4357 $auto$opt_reduce.cc:134:opt_pmux$3616 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4352: { $flatten\my_tx_uart_i.$procmux$1179_CMP $flatten\my_tx_uart_i.$procmux$1180_CMP $flatten\my_tx_uart_i.$procmux$1184_CMP }
  Optimizing cells in module \kianv_soc.
Performed a total of 6 changes.

9.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

9.22.6. Executing OPT_DFF pass (perform DFF optimizations).

9.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 3 unused cells and 17 unused wires.
<suppressed ~4 debug messages>

9.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.22.9. Rerunning OPT passes. (Maybe there is more to do..)

9.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

9.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.22.13. Executing OPT_DFF pass (perform DFF optimizations).

9.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.22.16. Finished OPT passes. (There is nothing left to do.)

9.23. Executing MEMORY pass.

9.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

9.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 6 transformations.

9.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing kianv_soc.bram_i.mem write port 0.
  Analyzing kianv_soc.bram_i.mem write port 1.
  Analyzing kianv_soc.bram_i.mem write port 2.
  Analyzing kianv_soc.bram_i.mem write port 3.
  Analyzing kianv_soc.kianv_i.register_file_i.register_file0 write port 0.
  Analyzing kianv_soc.kianv_i.register_file_i.register_file1 write port 0.

9.23.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\bram_i.mem'[0] in module `\kianv_soc': merging output FF to cell.
    Write port 0: non-transparent.
    Write port 1: non-transparent.
    Write port 2: non-transparent.
    Write port 3: non-transparent.
Checking read port `\kianv_i.register_file_i.register_file0'[0] in module `\kianv_soc': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\kianv_i.register_file_i.register_file1'[0] in module `\kianv_soc': merging output FF to cell.
    Write port 0: non-transparent.

9.23.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 3 unused cells and 99 unused wires.
<suppressed ~4 debug messages>

9.23.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory kianv_soc.bram_i.mem by address:
  Merging ports 0, 1 (address { 2'00 \mem_bram_addr }).
  Merging ports 0, 2 (address { 2'00 \mem_bram_addr }).
  Merging ports 0, 3 (address { 2'00 \mem_bram_addr }).

9.23.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

9.23.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.23.9. Executing MEMORY_COLLECT pass (generating $mem cells).

9.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing kianv_soc.bram_i.mem:
  Properties: ports=2 bits=262144 rports=1 wports=1 dbits=32 abits=13 words=8192
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=100, cells=64, acells=4
    Efficiency for rule 4.2: efficiency=100, cells=64, acells=8
    Efficiency for rule 4.1: efficiency=100, cells=64, acells=16
    Efficiency for rule 1.1: efficiency=100, cells=64, acells=32
    Selected rule 4.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: bram_i.mem.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 1 0>: bram_i.mem.0.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 2 0>: bram_i.mem.0.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 3 0>: bram_i.mem.0.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: bram_i.mem.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 1 0>: bram_i.mem.1.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 2 0>: bram_i.mem.1.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 3 0>: bram_i.mem.1.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: bram_i.mem.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 1 0>: bram_i.mem.2.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 2 0>: bram_i.mem.2.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 3 0>: bram_i.mem.2.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: bram_i.mem.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 1 0>: bram_i.mem.3.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 2 0>: bram_i.mem.3.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 3 0>: bram_i.mem.3.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: bram_i.mem.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 1 0>: bram_i.mem.4.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 2 0>: bram_i.mem.4.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 3 0>: bram_i.mem.4.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: bram_i.mem.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 1 0>: bram_i.mem.5.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 2 0>: bram_i.mem.5.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 3 0>: bram_i.mem.5.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: bram_i.mem.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 1 0>: bram_i.mem.6.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 2 0>: bram_i.mem.6.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 3 0>: bram_i.mem.6.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: bram_i.mem.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 1 0>: bram_i.mem.7.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 2 0>: bram_i.mem.7.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 3 0>: bram_i.mem.7.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: bram_i.mem.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 1 0>: bram_i.mem.8.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 2 0>: bram_i.mem.8.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 3 0>: bram_i.mem.8.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: bram_i.mem.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 1 0>: bram_i.mem.9.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 2 0>: bram_i.mem.9.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 3 0>: bram_i.mem.9.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: bram_i.mem.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 1 0>: bram_i.mem.10.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 2 0>: bram_i.mem.10.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 3 0>: bram_i.mem.10.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: bram_i.mem.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 1 0>: bram_i.mem.11.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 2 0>: bram_i.mem.11.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 3 0>: bram_i.mem.11.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: bram_i.mem.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 1 0>: bram_i.mem.12.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 2 0>: bram_i.mem.12.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 3 0>: bram_i.mem.12.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: bram_i.mem.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 1 0>: bram_i.mem.13.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 2 0>: bram_i.mem.13.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 3 0>: bram_i.mem.13.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: bram_i.mem.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 1 0>: bram_i.mem.14.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 2 0>: bram_i.mem.14.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 3 0>: bram_i.mem.14.3.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: bram_i.mem.15.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 1 0>: bram_i.mem.15.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 2 0>: bram_i.mem.15.2.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 3 0>: bram_i.mem.15.3.0
Processing kianv_soc.kianv_i.register_file_i.register_file0:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: kianv_i.register_file_i.register_file0.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: kianv_i.register_file_i.register_file0.1.0.0
Processing kianv_soc.kianv_i.register_file_i.register_file1:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \bram_i.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \bram_i.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: kianv_i.register_file_i.register_file1.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: kianv_i.register_file_i.register_file1.1.0.0

9.26. Executing TECHMAP pass (map to technology primitives).

9.26.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

9.26.2. Continuing TECHMAP pass.
Using template $paramod$d55fd1cb52d452eb42db4e2fc27f2e38299e6d7b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$dade217c779ba420acd33f13957ed334b8a2efa3\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$915053528f44fd522ec271b771ea815a9c31e09b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b1ffe55f5fa8329a5f133f9d30887752dd43bf48\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~271 debug messages>

9.27. Executing ICE40_BRAMINIT pass.

9.28. Executing OPT pass (performing simple optimizations).

9.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~702 debug messages>

9.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

9.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3793 ($sdffe) from module kianv_soc (D = $flatten\oled_ssd1331_i.$procmux$1339_Y [2:0], Q = \oled_ssd1331_i.setpixel_cmd_pos [2:0]).
Removing always-active EN on $auto$memory_bram.cc:970:replace_memory$4902 ($dffe) from module kianv_soc.
Removing always-active EN on $auto$memory_bram.cc:970:replace_memory$4704 ($dffe) from module kianv_soc.
Setting constant 0-bit at position 0 on $auto$memory_bram.cc:970:replace_memory$4704 ($dff) from module kianv_soc.
Setting constant 1-bit at position 0 on $auto$memory_bram.cc:970:replace_memory$4902 ($dff) from module kianv_soc.

9.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 6 unused cells and 1919 unused wires.
<suppressed ~7 debug messages>

9.28.5. Rerunning OPT passes. (Removed registers in this run.)

9.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.28.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$3606 ($dff) from module kianv_soc (D = \pwm [1:0], Q = \pwm [1:0]).
Handling D = Q on $auto$ff.cc:262:slice$5353 ($dffe) from module kianv_soc (removing D path).

9.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

9.28.10. Rerunning OPT passes. (Removed registers in this run.)

9.28.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.28.13. Executing OPT_DFF pass (perform DFF optimizations).

9.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.28.15. Finished fast OPT passes.

9.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

9.30. Executing OPT pass (performing simple optimizations).

9.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5162.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5162.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5162.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5163.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5163.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5163.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5164.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5164.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5164.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5165.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5165.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5165.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5166.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5166.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5166.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5167.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5167.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5167.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5168.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5168.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5168.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5169.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5169.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5169.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5170.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5170.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5170.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5171.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5171.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5171.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5172.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5172.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5172.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5173.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5173.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5173.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5174.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5174.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5174.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5175.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5175.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5175.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5176.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5176.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5176.
    dead port 2/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5177.
    dead port 3/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5177.
    dead port 4/4 on $pmux $auto$memory_bram.cc:997:replace_memory$5177.
Removed 48 multiplexer ports.
<suppressed ~75 debug messages>

9.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$5351: { $auto$opt_dff.cc:194:make_patterns_logic$3794 $auto$opt_dff.cc:194:make_patterns_logic$3796 $auto$opt_dff.cc:194:make_patterns_logic$3798 $auto$opt_dff.cc:194:make_patterns_logic$5348 }
    Consolidated identical input bits for $mux cell $auto$share.cc:660:make_supercell$4162:
      Old ports: A={ \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file [31] \kianv_i.register_file_i.rs1_reg_file }, B={ 32'00000000000000000000000000000000 \kianv_i.register_file_i.rs1_reg_file }, Y=$auto$share.cc:657:make_supercell$4160
      New ports: A=\kianv_i.register_file_i.rs1_reg_file [31], B=1'0, Y=$auto$share.cc:657:make_supercell$4160 [32]
      New connections: { $auto$share.cc:657:make_supercell$4160 [63:33] $auto$share.cc:657:make_supercell$4160 [31:0] } = { $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] $auto$share.cc:657:make_supercell$4160 [32] \kianv_i.register_file_i.rs1_reg_file }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1902:
      Old ports: A=7'1000000, B=7'0010000, Y=$flatten\kianv_i.$procmux$1902_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\kianv_i.$procmux$1902_Y [6] $flatten\kianv_i.$procmux$1902_Y [4] }
      New connections: { $flatten\kianv_i.$procmux$1902_Y [5] $flatten\kianv_i.$procmux$1902_Y [3:0] } = 5'00000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1906:
      Old ports: A=6'100000, B=6'000001, Y=$auto$wreduce.cc:454:run$4125 [5:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$4125 [5] $auto$wreduce.cc:454:run$4125 [0] }
      New connections: $auto$wreduce.cc:454:run$4125 [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1910:
      Old ports: A=6'010000, B=6'100000, Y=$auto$wreduce.cc:454:run$4126 [5:0]
      New ports: A=2'01, B=2'10, Y=$auto$wreduce.cc:454:run$4126 [5:4]
      New connections: $auto$wreduce.cc:454:run$4126 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1912:
      Old ports: A=7'0100000, B={ 1'0 $auto$wreduce.cc:454:run$4126 [5:0] }, Y=$auto$wreduce.cc:454:run$4127
      New ports: A=6'100000, B=$auto$wreduce.cc:454:run$4126 [5:0], Y=$auto$wreduce.cc:454:run$4127 [5:0]
      New connections: $auto$wreduce.cc:454:run$4127 [6] = 1'0
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1916:
      Old ports: A=7'0001000, B=7'1000000, Y=$flatten\kianv_i.$procmux$1916_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\kianv_i.$procmux$1916_Y [6] $flatten\kianv_i.$procmux$1916_Y [3] }
      New connections: { $flatten\kianv_i.$procmux$1916_Y [5:4] $flatten\kianv_i.$procmux$1916_Y [2:0] } = 5'00000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1920:
      Old ports: A=7'0001000, B=7'1000000, Y=$flatten\kianv_i.$procmux$1920_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\kianv_i.$procmux$1920_Y [6] $flatten\kianv_i.$procmux$1920_Y [3] }
      New connections: { $flatten\kianv_i.$procmux$1920_Y [5:4] $flatten\kianv_i.$procmux$1920_Y [2:0] } = 5'00000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2022:
      Old ports: A={ \kianv_i.register_file_i.rs2_reg_file [7:0] \kianv_i.register_file_i.rs2_reg_file [7:0] }, B=\kianv_i.register_file_i.rs2_reg_file [15:0], Y=$flatten\kianv_i.$2\rs2_store_rslt[31:0] [31:16]
      New ports: A=\kianv_i.register_file_i.rs2_reg_file [7:0], B=\kianv_i.register_file_i.rs2_reg_file [15:8], Y=$flatten\kianv_i.$2\rs2_store_rslt[31:0] [31:24]
      New connections: $flatten\kianv_i.$2\rs2_store_rslt[31:0] [23:16] = \kianv_i.register_file_i.rs2_reg_file [7:0]
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2049:
      Old ports: A={ \kianv_i.div_rslt [30:0] 1'1 }, B={ \kianv_i.div_rslt [30:0] 1'0 }, Y=$flatten\kianv_i.$procmux$2049_Y
      New ports: A=1'1, B=1'0, Y=$flatten\kianv_i.$procmux$2049_Y [0]
      New connections: $flatten\kianv_i.$procmux$2049_Y [31:1] = \kianv_i.div_rslt [30:0]
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2101:
      Old ports: A=3'010, B=3'100, Y=$flatten\kianv_i.$procmux$2101_Y
      New ports: A=2'01, B=2'10, Y=$flatten\kianv_i.$procmux$2101_Y [2:1]
      New connections: $flatten\kianv_i.$procmux$2101_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2113:
      Old ports: A=3'010, B=3'100, Y=$flatten\kianv_i.$procmux$2113_Y
      New ports: A=2'01, B=2'10, Y=$flatten\kianv_i.$procmux$2113_Y [2:1]
      New connections: $flatten\kianv_i.$procmux$2113_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:144$464:
      Old ports: A=0, B={ \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [19:12] \kianv_i.instr [20] \kianv_i.instr [30:21] 1'0 }, Y=$flatten\kianv_i.$ternary$../kianv.v:144$464_Y
      New ports: A=20'00000000000000000000, B={ \kianv_i.instr [31] \kianv_i.instr [19:12] \kianv_i.instr [20] \kianv_i.instr [30:21] }, Y=$flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20:1]
      New connections: { $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [31:21] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [0] } = { $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:470$698:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\kianv_i.$ternary$../kianv.v:470$698_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\kianv_i.$ternary$../kianv.v:470$698_Y [2] $flatten\kianv_i.$ternary$../kianv.v:470$698_Y [0] }
      New connections: { $flatten\kianv_i.$ternary$../kianv.v:470$698_Y [3] $flatten\kianv_i.$ternary$../kianv.v:470$698_Y [1] } = { $flatten\kianv_i.$ternary$../kianv.v:470$698_Y [2] $flatten\kianv_i.$ternary$../kianv.v:470$698_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:491$713:
      Old ports: A={ $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] $auto$wreduce.cc:454:run$4133 [7] }, B=24'000000000000000000000000, Y=$auto$wreduce.cc:454:run$4137
      New ports: A=$auto$wreduce.cc:454:run$4133 [7], B=1'0, Y=$auto$wreduce.cc:454:run$4137 [0]
      New connections: $auto$wreduce.cc:454:run$4137 [23:1] = { $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:497$720:
      Old ports: A={ $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] $auto$wreduce.cc:454:run$4138 [15] }, B=16'0000000000000000, Y=$auto$wreduce.cc:454:run$4139
      New ports: A=$auto$wreduce.cc:454:run$4138 [15], B=1'0, Y=$auto$wreduce.cc:454:run$4139 [0]
      New connections: $auto$wreduce.cc:454:run$4139 [15:1] = { $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4139 [0] }
    Consolidated identical input bits for $pmux cell $flatten\my_tx_uart_i.$procmux$1210:
      Old ports: A=3'001, B={ 1'0 $flatten\my_tx_uart_i.$ternary$my_tx_uart.v:87$891_Y [1:0] 3'000 }, Y=$flatten\my_tx_uart_i.$procmux$1210_Y
      New ports: A=2'01, B={ $flatten\my_tx_uart_i.$ternary$my_tx_uart.v:87$891_Y [1:0] 2'00 }, Y=$flatten\my_tx_uart_i.$procmux$1210_Y [1:0]
      New connections: $flatten\my_tx_uart_i.$procmux$1210_Y [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\oled_ssd1331_i.$procmux$1339:
      Old ports: A=7'1000000, B={ $auto$wreduce.cc:454:run$4144 [6:3] 3'x }, Y=$flatten\oled_ssd1331_i.$procmux$1339_Y
      New ports: A=5'10000, B={ $auto$wreduce.cc:454:run$4144 [6:3] 1'x }, Y={ $flatten\oled_ssd1331_i.$procmux$1339_Y [6:3] $flatten\oled_ssd1331_i.$procmux$1339_Y [0] }
      New connections: $flatten\oled_ssd1331_i.$procmux$1339_Y [2:1] = { $flatten\oled_ssd1331_i.$procmux$1339_Y [0] $flatten\oled_ssd1331_i.$procmux$1339_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\spi_flash_mem_i.$procmux$1269:
      Old ports: A={ 8'00000011 \spi_flash_mem_i.addr 2'00 }, B={ \spi_flash_mem_i.shift_reg [30:0] 1'0 }, Y=$flatten\spi_flash_mem_i.$procmux$1269_Y
      New ports: A={ 8'00000011 \spi_flash_mem_i.addr 1'0 }, B=\spi_flash_mem_i.shift_reg [30:0], Y=$flatten\spi_flash_mem_i.$procmux$1269_Y [31:1]
      New connections: $flatten\spi_flash_mem_i.$procmux$1269_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$2502:
      Old ports: A=0, B={ 24'x \gpio_output_en }, Y=$9\mem_dout[31:0]
      New ports: A=9'000000000, B={ 1'x \gpio_output_en }, Y=$9\mem_dout[31:0] [8:0]
      New connections: $9\mem_dout[31:0] [31:9] = { $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] $9\mem_dout[31:0] [8] }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1912:
      Old ports: A=6'100000, B=$auto$wreduce.cc:454:run$4126 [5:0], Y=$auto$wreduce.cc:454:run$4127 [5:0]
      New ports: A=2'10, B=$auto$wreduce.cc:454:run$4126 [5:4], Y=$auto$wreduce.cc:454:run$4127 [5:4]
      New connections: $auto$wreduce.cc:454:run$4127 [3:0] = 4'0000
    Consolidated identical input bits for $pmux cell $flatten\kianv_i.$procmux$1918:
      Old ports: A=7'0010000, B={ $flatten\kianv_i.$procmux$1920_Y $flatten\kianv_i.$procmux$1916_Y }, Y=$flatten\kianv_i.$procmux$1918_Y
      New ports: A=3'010, B={ $flatten\kianv_i.$procmux$1920_Y [6] 1'0 $flatten\kianv_i.$procmux$1920_Y [3] $flatten\kianv_i.$procmux$1916_Y [6] 1'0 $flatten\kianv_i.$procmux$1916_Y [3] }, Y={ $flatten\kianv_i.$procmux$1918_Y [6] $flatten\kianv_i.$procmux$1918_Y [4:3] }
      New connections: { $flatten\kianv_i.$procmux$1918_Y [5] $flatten\kianv_i.$procmux$1918_Y [2:0] } = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2010:
      Old ports: A={ $auto$wreduce.cc:454:run$4137 $auto$wreduce.cc:454:run$4133 [7:0] }, B={ $auto$wreduce.cc:454:run$4139 $auto$wreduce.cc:454:run$4138 [15:0] }, Y=$flatten\kianv_i.$2\rs2_load_rslt[31:0]
      New ports: A={ $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4137 [0] $auto$wreduce.cc:454:run$4133 [7:0] }, B={ $auto$wreduce.cc:454:run$4139 [0] $auto$wreduce.cc:454:run$4138 [15:0] }, Y=$flatten\kianv_i.$2\rs2_load_rslt[31:0] [16:0]
      New connections: $flatten\kianv_i.$2\rs2_load_rslt[31:0] [31:17] = { $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] $flatten\kianv_i.$2\rs2_load_rslt[31:0] [16] }
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$2019:
      Old ports: A={ $flatten\kianv_i.$2\rs2_store_rslt[31:0] [31:16] $flatten\kianv_i.$2\rs2_store_rslt[31:0] [31:16] }, B=\kianv_i.register_file_i.rs2_reg_file, Y=\kianv_i.rs2_store_rslt
      New ports: A={ $flatten\kianv_i.$2\rs2_store_rslt[31:0] [31:24] \kianv_i.register_file_i.rs2_reg_file [7:0] $flatten\kianv_i.$2\rs2_store_rslt[31:0] [31:24] }, B=\kianv_i.register_file_i.rs2_reg_file [31:8], Y=\kianv_i.rs2_store_rslt [31:8]
      New connections: \kianv_i.rs2_store_rslt [7:0] = \kianv_i.register_file_i.rs2_reg_file [7:0]
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:143$465:
      Old ports: A=$flatten\kianv_i.$ternary$../kianv.v:144$464_Y, B={ \kianv_i.instr [31:12] 12'000000000000 }, Y=$flatten\kianv_i.$ternary$../kianv.v:143$465_Y
      New ports: A={ $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20] $flatten\kianv_i.$ternary$../kianv.v:144$464_Y [20:1] }, B={ \kianv_i.instr [31:12] 11'00000000000 }, Y=$flatten\kianv_i.$ternary$../kianv.v:143$465_Y [31:1]
      New connections: $flatten\kianv_i.$ternary$../kianv.v:143$465_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$2591:
      Old ports: A={ 24'000000000000000000000000 $10\mem_dout[31:0] }, B=$9\mem_dout[31:0], Y=$8\mem_dout[31:0]
      New ports: A={ 1'0 $10\mem_dout[31:0] }, B=$9\mem_dout[31:0] [8:0], Y=$8\mem_dout[31:0] [8:0]
      New connections: $8\mem_dout[31:0] [31:9] = { $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8] }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$procmux$1923:
      Old ports: A=7'0001000, B=$flatten\kianv_i.$procmux$1918_Y, Y=$flatten\kianv_i.$procmux$1923_Y
      New ports: A=3'001, B={ $flatten\kianv_i.$procmux$1918_Y [6] $flatten\kianv_i.$procmux$1918_Y [4:3] }, Y={ $flatten\kianv_i.$procmux$1923_Y [6] $flatten\kianv_i.$procmux$1923_Y [4:3] }
      New connections: { $flatten\kianv_i.$procmux$1923_Y [5] $flatten\kianv_i.$procmux$1923_Y [2:0] } = 4'0000
    Consolidated identical input bits for $mux cell $flatten\kianv_i.$ternary$../kianv.v:142$466:
      Old ports: A=$flatten\kianv_i.$ternary$../kianv.v:143$465_Y, B={ \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [7] \kianv_i.instr [30:25] \kianv_i.instr [11:8] 1'0 }, Y=$flatten\kianv_i.$ternary$../kianv.v:142$466_Y
      New ports: A=$flatten\kianv_i.$ternary$../kianv.v:143$465_Y [31:1], B={ \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [31] \kianv_i.instr [7] \kianv_i.instr [30:25] \kianv_i.instr [11:8] }, Y=$flatten\kianv_i.$ternary$../kianv.v:142$466_Y [31:1]
      New connections: $flatten\kianv_i.$ternary$../kianv.v:142$466_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$2690:
      Old ports: A=$8\mem_dout[31:0], B=20000000, Y=$7\mem_dout[31:0]
      New ports: A={ $8\mem_dout[31:0] [8] $8\mem_dout[31:0] [8:0] }, B=10'0100000000, Y=$7\mem_dout[31:0] [9:0]
      New connections: $7\mem_dout[31:0] [31:10] = { $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9:8] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9:8] $7\mem_dout[31:0] [8] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9:8] $7\mem_dout[31:0] [9] $7\mem_dout[31:0] [9:8] $7\mem_dout[31:0] [9:8] $7\mem_dout[31:0] [8] }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $procmux$2939:
      Old ports: A=$7\mem_dout[31:0], B=0, Y=$6\mem_dout[31:0]
      New ports: A=$7\mem_dout[31:0] [9:0], B=10'0000000000, Y=$6\mem_dout[31:0] [9:0]
      New connections: $6\mem_dout[31:0] [31:10] = { $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9:8] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9:8] $6\mem_dout[31:0] [8] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9:8] $6\mem_dout[31:0] [9] $6\mem_dout[31:0] [9:8] $6\mem_dout[31:0] [9:8] $6\mem_dout[31:0] [8] }
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $mux cell $procmux$3053:
      Old ports: A=$6\mem_dout[31:0], B={ 31'0000000000000000000000000000000 $5\mem_dout[31:0] }, Y=$4\mem_dout[31:0]
      New ports: A=$6\mem_dout[31:0] [9:0], B={ 9'000000000 $5\mem_dout[31:0] }, Y=$4\mem_dout[31:0] [9:0]
      New connections: $4\mem_dout[31:0] [31:10] = { $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9:8] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9:8] $4\mem_dout[31:0] [8] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9:8] $4\mem_dout[31:0] [9] $4\mem_dout[31:0] [9:8] $4\mem_dout[31:0] [9:8] $4\mem_dout[31:0] [8] }
  Optimizing cells in module \kianv_soc.
Performed a total of 31 changes.

9.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.30.6. Executing OPT_DFF pass (perform DFF optimizations).

9.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 48 unused cells and 112 unused wires.
<suppressed ~49 debug messages>

9.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.30.9. Rerunning OPT passes. (Maybe there is more to do..)

9.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

9.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3758 ($sdffe) from module kianv_soc.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3918 ($dffe) from module kianv_soc.

9.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.30.16. Rerunning OPT passes. (Maybe there is more to do..)

9.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

9.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
    Consolidated identical input bits for $pmux cell $flatten\my_tx_uart_i.$procmux$1223:
      Old ports: A=3'000, B={ 4'0110 \my_tx_uart_i.return_state [1:0] }, Y=$flatten\my_tx_uart_i.$procmux$1223_Y
      New ports: A=2'00, B={ 2'11 \my_tx_uart_i.return_state [1:0] }, Y=$flatten\my_tx_uart_i.$procmux$1223_Y [1:0]
      New connections: $flatten\my_tx_uart_i.$procmux$1223_Y [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\spi_flash_mem_i.$procmux$1269:
      Old ports: A={ 8'00000011 \spi_flash_mem_i.addr 1'0 }, B={ \spi_flash_mem_i.shift_reg [30:1] 1'0 }, Y=$flatten\spi_flash_mem_i.$procmux$1269_Y [31:1]
      New ports: A={ 8'00000011 \spi_flash_mem_i.addr }, B=\spi_flash_mem_i.shift_reg [30:1], Y=$flatten\spi_flash_mem_i.$procmux$1269_Y [31:2]
      New connections: $flatten\spi_flash_mem_i.$procmux$1269_Y [1] = 1'0
  Optimizing cells in module \kianv_soc.
Performed a total of 2 changes.

9.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.30.20. Executing OPT_DFF pass (perform DFF optimizations).

9.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.30.23. Rerunning OPT passes. (Maybe there is more to do..)

9.30.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

9.30.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.30.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.30.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3926 ($sdffe) from module kianv_soc.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5357 ($sdffe) from module kianv_soc.

9.30.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.30.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.30.30. Rerunning OPT passes. (Maybe there is more to do..)

9.30.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kianv_soc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

9.30.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kianv_soc.
Performed a total of 0 changes.

9.30.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.30.34. Executing OPT_DFF pass (perform DFF optimizations).

9.30.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.30.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.30.37. Finished OPT passes. (There is nothing left to do.)

9.31. Executing ICE40_WRAPCARRY pass (wrap carries).

9.32. Executing TECHMAP pass (map to technology primitives).

9.32.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.32.2. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

9.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$9092dba25a25751068dbf0cae527500958d78252\_80_ice40_alu for cells of type $alu.
Using template $paramod$d0e4c797aa680bb54c964a262954ce9f5bfee2c5\_80_ice40_alu for cells of type $alu.
Using template $paramod$623933ad3e90fc22092cd1f55770151cf78c2317\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using template $paramod$531b0e8664cf0177363f10a943e616839f246c95\_80_ice40_alu for cells of type $alu.
Using template $paramod$165fdf60338663c1b1095d1639bc2761df5db061\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $tribuf.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$92adee9538f2381d8e5006822c900eb986d754e8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$6b2e55a5f89bfecc6aebd640439f7b15a0e51965\_80_ice40_alu for cells of type $alu.
Using template $paramod$51d09f51f8e4e709467c94f1487f4e47b5087bf0\_90_pmux for cells of type $pmux.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$d7eca7fea788e6b7d09fb68b4ebcd45dcedbf732\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:902addbe43b529906d88c60bd6ede384c28df4ef$paramod$9bcab9888511a0ec374ac1aaf19b50998e4ad571\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$0cb8c8207ef60c40f3d931234779bbc53d5f6b86\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:1a987e06140b8e46c2ffc4db3cf9131af5625a71$paramod$8ac871070b39278edeb641f861d5303fc1816c81\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_80_ice40_alu for cells of type $alu.
Using template $paramod$54a4503cc57b9df40b70c1899504d6aac2650719\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$a9f023b7f9387cc24984a8fa4722169e6d5f74aa\_90_pmux for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add { $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [31] $flatten\oled_ssd1331_i.$sub$oled_sdd1331.v:153$850_Y [6:0] } (32 bits, unsigned)
  add 32'11111111111111111111111111111001 (32 bits, unsigned)
Using template $paramod$constmap:33b894a087f593659774904bb52656098f4c6cf0$paramod$8adf3a58680218fb6a23e758b618fb2d0a9745b2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$e194a9e890de0a7be18db8bd15a1479dea055e42\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~4393 debug messages>

9.33. Executing OPT pass (performing simple optimizations).

9.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~5113 debug messages>

9.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~6549 debug messages>
Removed a total of 2183 cells.

9.33.3. Executing OPT_DFF pass (perform DFF optimizations).

9.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1412 unused cells and 2909 unused wires.
<suppressed ~1432 debug messages>

9.33.5. Finished fast OPT passes.

9.34. Executing ICE40_OPT pass (performing simple optimizations).

9.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4179.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4179.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4190.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4179.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4201.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4179.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4212.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4179.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4221.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4179.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4230.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4179.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4239.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4239.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4247.slice[0].carry: CO=\pwm [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4247.slice[11].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4285.slice[0].carry: CO=\kianv_i.pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4288.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4250.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4291.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4291.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4297.slice[0].carry: CO=\kianv_i.mul_bit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[33].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [33]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[34].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [34]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[35].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [35]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[36].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [36]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[37].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [37]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[38].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [38]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[39].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [39]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[40].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [40]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[41].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [41]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[42].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [42]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[43].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [43]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[44].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [44]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[45].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [45]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[46].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [46]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[47].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [47]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[48].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [48]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[49].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [49]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[50].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [50]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[51].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [51]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[52].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [52]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[53].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [53]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[54].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [54]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[55].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [55]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[56].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [56]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[57].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [57]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[58].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [58]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[59].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [59]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[60].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [60]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[61].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [61]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[62].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [62]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[63].carry: CO=$auto$alumacc.cc:485:replace_alu$4300.C [63]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4303.slice[0].carry: CO=\kianv_i.div_bit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4306.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4306.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4309.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4309.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4312.slice[0].carry: CO=\kianv_i.cycle_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4315.slice[0].carry: CO=\kianv_i.instr_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4324.slice[0].carry: CO=\my_tx_uart_i.bit_idx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4327.slice[0].carry: CO=\my_tx_uart_i.wait_states [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4330.slice[0].carry: CO=\spi_flash_mem_i.shift_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4336.slice[0].carry: CO=\oled_ssd1331_i.rom_addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4339.slice[0].carry: CO=\oled_ssd1331_i.setpixel_cmd_pos [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[0].carry: CO=\oled_ssd1331_i.setpixel_cmd_pos [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$4342.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4345.slice[0].carry: CO=\oled_ssd1331_i.shift_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4342.Y [0]

9.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~97 debug messages>

9.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

9.34.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$9999 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [50], Q = \kianv_i.mul_rslt [50], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9998 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [49], Q = \kianv_i.mul_rslt [49], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9997 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [48], Q = \kianv_i.mul_rslt [48], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9996 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [47], Q = \kianv_i.mul_rslt [47], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9995 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [46], Q = \kianv_i.mul_rslt [46], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9994 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [45], Q = \kianv_i.mul_rslt [45], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9993 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [44], Q = \kianv_i.mul_rslt [44], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9992 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [43], Q = \kianv_i.mul_rslt [43], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9991 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [42], Q = \kianv_i.mul_rslt [42], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9990 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [41], Q = \kianv_i.mul_rslt [41], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9989 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [40], Q = \kianv_i.mul_rslt [40], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9988 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [39], Q = \kianv_i.mul_rslt [39], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9987 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [38], Q = \kianv_i.mul_rslt [38], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9986 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [37], Q = \kianv_i.mul_rslt [37], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9985 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [36], Q = \kianv_i.mul_rslt [36], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9984 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [35], Q = \kianv_i.mul_rslt [35], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9983 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [34], Q = \kianv_i.mul_rslt [34], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9982 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [33], Q = \kianv_i.mul_rslt [33], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9981 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [32], Q = \kianv_i.mul_rslt [32], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9980 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [31], Q = \kianv_i.mul_rslt [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9979 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [30], Q = \kianv_i.mul_rslt [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9978 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [29], Q = \kianv_i.mul_rslt [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9977 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [28], Q = \kianv_i.mul_rslt [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9976 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [27], Q = \kianv_i.mul_rslt [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9975 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [26], Q = \kianv_i.mul_rslt [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9974 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [25], Q = \kianv_i.mul_rslt [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9973 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [24], Q = \kianv_i.mul_rslt [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9972 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [23], Q = \kianv_i.mul_rslt [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9971 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [22], Q = \kianv_i.mul_rslt [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9970 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [21], Q = \kianv_i.mul_rslt [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9969 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [20], Q = \kianv_i.mul_rslt [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9968 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [19], Q = \kianv_i.mul_rslt [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9967 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [18], Q = \kianv_i.mul_rslt [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9966 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [17], Q = \kianv_i.mul_rslt [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9965 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [16], Q = \kianv_i.mul_rslt [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9964 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [15], Q = \kianv_i.mul_rslt [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9963 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [14], Q = \kianv_i.mul_rslt [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9962 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [13], Q = \kianv_i.mul_rslt [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9961 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [12], Q = \kianv_i.mul_rslt [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9960 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [11], Q = \kianv_i.mul_rslt [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9959 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [10], Q = \kianv_i.mul_rslt [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9958 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [9], Q = \kianv_i.mul_rslt [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9957 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [8], Q = \kianv_i.mul_rslt [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9956 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [7], Q = \kianv_i.mul_rslt [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9955 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [6], Q = \kianv_i.mul_rslt [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9954 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [5], Q = \kianv_i.mul_rslt [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9953 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [4], Q = \kianv_i.mul_rslt [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9952 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [3], Q = \kianv_i.mul_rslt [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9951 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [2], Q = \kianv_i.mul_rslt [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9950 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [1], Q = \kianv_i.mul_rslt [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9949 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [0], Q = \kianv_i.mul_rslt [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9948 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2099.B_AND_S [5], Q = \kianv_i.div_state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9947 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2099.Y_B [1], Q = \kianv_i.div_state [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7758 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [24], Q = \my_tx_uart_i.wait_states [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7757 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [23], Q = \my_tx_uart_i.wait_states [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7756 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [22], Q = \my_tx_uart_i.wait_states [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7755 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [21], Q = \my_tx_uart_i.wait_states [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7754 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [20], Q = \my_tx_uart_i.wait_states [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7753 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [19], Q = \my_tx_uart_i.wait_states [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7752 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [18], Q = \my_tx_uart_i.wait_states [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7751 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [17], Q = \my_tx_uart_i.wait_states [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7750 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [16], Q = \my_tx_uart_i.wait_states [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7749 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [15], Q = \my_tx_uart_i.wait_states [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7748 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [14], Q = \my_tx_uart_i.wait_states [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7747 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [13], Q = \my_tx_uart_i.wait_states [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7746 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [12], Q = \my_tx_uart_i.wait_states [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7745 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [11], Q = \my_tx_uart_i.wait_states [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7744 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [10], Q = \my_tx_uart_i.wait_states [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7743 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [9], Q = \my_tx_uart_i.wait_states [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7742 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.Y_B [8], Q = \my_tx_uart_i.wait_states [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7741 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [7], Q = \my_tx_uart_i.wait_states [7], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7740 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.Y_B [6], Q = \my_tx_uart_i.wait_states [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7739 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [5], Q = \my_tx_uart_i.wait_states [5], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7738 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.Y_B [4], Q = \my_tx_uart_i.wait_states [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7737 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.Y_B [3], Q = \my_tx_uart_i.wait_states [3], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7736 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [2], Q = \my_tx_uart_i.wait_states [2], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7735 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.Y_B [1], Q = \my_tx_uart_i.wait_states [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7734 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1177.B_AND_S [0], Q = \my_tx_uart_i.wait_states [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7527 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1210.B_AND_S [3], Q = \my_tx_uart_i.return_state [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7526 ($_DFFE_PP_) from module kianv_soc (D = $flatten\my_tx_uart_i.$procmux$1210.B_AND_S [2], Q = \my_tx_uart_i.return_state [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7484 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1278.Y_B [4], Q = \spi_flash_mem_i.shift_cnt [4], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7483 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1278.Y_B [3], Q = \spi_flash_mem_i.shift_cnt [3], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7482 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1278.Y_B [2], Q = \spi_flash_mem_i.shift_cnt [2], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7481 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1278.Y_B [1], Q = \spi_flash_mem_i.shift_cnt [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7480 ($_DFFE_PP_) from module kianv_soc (D = $flatten\spi_flash_mem_i.$procmux$1278.Y_B [0], Q = \spi_flash_mem_i.shift_cnt [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$7271 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2111.B_AND_S [5], Q = \kianv_i.mul_state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7270 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2111.Y_B [1], Q = \kianv_i.mul_state [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11091 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$1904.Y_B [6], Q = \kianv_i.cpu_state [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11090 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$1904.Y_B [5], Q = \kianv_i.cpu_state [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11089 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$1904.Y_B [4], Q = \kianv_i.cpu_state [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11088 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$1904.Y_B [3], Q = \kianv_i.cpu_state [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11087 ($_SDFF_PN0_) from module kianv_soc (D = \kianv_i.cpu_state [1], Q = \kianv_i.cpu_state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11086 ($_SDFF_PN0_) from module kianv_soc (D = $flatten\kianv_i.$procmux$1904.B_AND_S [43], Q = \kianv_i.cpu_state [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11085 ($_SDFF_PN1_) from module kianv_soc (D = $flatten\kianv_i.$procmux$1904.Y_B [0], Q = \kianv_i.cpu_state [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$10012 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [63], Q = \kianv_i.mul_rslt [63], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10011 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [62], Q = \kianv_i.mul_rslt [62], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10010 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [61], Q = \kianv_i.mul_rslt [61], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10009 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [60], Q = \kianv_i.mul_rslt [60], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10008 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [59], Q = \kianv_i.mul_rslt [59], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10007 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [58], Q = \kianv_i.mul_rslt [58], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10006 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [57], Q = \kianv_i.mul_rslt [57], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10005 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [56], Q = \kianv_i.mul_rslt [56], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10004 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [55], Q = \kianv_i.mul_rslt [55], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10003 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [54], Q = \kianv_i.mul_rslt [54], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10002 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [53], Q = \kianv_i.mul_rslt [53], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10001 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [52], Q = \kianv_i.mul_rslt [52], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10000 ($_DFFE_PP_) from module kianv_soc (D = $flatten\kianv_i.$procmux$2170.Y_B [51], Q = \kianv_i.mul_rslt [51], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9218 ($_SDFFE_PN0P_) from module kianv_soc.

9.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 112 unused cells and 22 unused wires.
<suppressed ~113 debug messages>

9.34.6. Rerunning OPT passes. (Removed registers in this run.)

9.34.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4342.C [2]

9.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~3 debug messages>

9.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

9.34.10. Executing OPT_DFF pass (perform DFF optimizations).

9.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

9.34.12. Rerunning OPT passes. (Removed registers in this run.)

9.34.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4239.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4239.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4239.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[3].carry: CO=\oled_ssd1331_i.setpixel_cmd_pos [3]

9.34.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.34.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.34.16. Executing OPT_DFF pass (perform DFF optimizations).

9.34.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

9.34.18. Rerunning OPT passes. (Removed registers in this run.)

9.34.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$alumacc.cc:485:replace_alu$4239.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4239.BB [3]

9.34.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.34.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.34.22. Executing OPT_DFF pass (perform DFF optimizations).

9.34.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

9.34.24. Rerunning OPT passes. (Removed registers in this run.)

9.34.25. Running ICE40 specific optimizations.

9.34.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.34.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.34.28. Executing OPT_DFF pass (perform DFF optimizations).

9.34.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.34.30. Finished OPT passes. (There is nothing left to do.)

9.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

9.36. Executing TECHMAP pass (map to technology primitives).

9.36.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

9.36.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~735 debug messages>

9.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4247.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4247.slice[11].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4285.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4288.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4291.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4297.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4300.slice[32].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4303.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4306.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4309.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4312.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4315.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4324.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4327.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4330.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4336.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4339.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[0].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[1].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[3].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4342.slice[7].carry ($lut).
Mapping kianv_soc.$auto$alumacc.cc:485:replace_alu$4345.slice[0].carry ($lut).
Mapping kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[0].carry ($lut).

9.39. Executing ICE40_OPT pass (performing simple optimizations).

9.39.1. Running ICE40 specific optimizations.

9.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~980 debug messages>

9.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~2880 debug messages>
Removed a total of 960 cells.

9.39.4. Executing OPT_DFF pass (perform DFF optimizations).

9.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 0 unused cells and 5064 unused wires.
<suppressed ~1 debug messages>

9.39.6. Rerunning OPT passes. (Removed registers in this run.)

9.39.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[2].carry: CO=$auto$maccmap.cc:240:synth$11092.C [2]

9.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~11 debug messages>

9.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.39.10. Executing OPT_DFF pass (perform DFF optimizations).

9.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.39.12. Rerunning OPT passes. (Removed registers in this run.)

9.39.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[3].carry: CO=1'1

9.39.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~2 debug messages>

9.39.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.39.16. Executing OPT_DFF pass (perform DFF optimizations).

9.39.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.39.18. Rerunning OPT passes. (Removed registers in this run.)

9.39.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[4].carry: CO=1'1

9.39.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.
<suppressed ~1 debug messages>

9.39.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.39.22. Executing OPT_DFF pass (perform DFF optimizations).

9.39.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.39.24. Rerunning OPT passes. (Removed registers in this run.)

9.39.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[5].carry: CO=1'1

9.39.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.39.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.39.28. Executing OPT_DFF pass (perform DFF optimizations).

9.39.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.39.30. Rerunning OPT passes. (Removed registers in this run.)

9.39.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) kianv_soc.$auto$maccmap.cc:240:synth$11092.slice[6].carry: CO=1'1

9.39.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.39.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.39.34. Executing OPT_DFF pass (perform DFF optimizations).

9.39.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..
Removed 26 unused cells and 2 unused wires.
<suppressed ~27 debug messages>

9.39.36. Rerunning OPT passes. (Removed registers in this run.)

9.39.37. Running ICE40 specific optimizations.

9.39.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module kianv_soc.

9.39.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kianv_soc'.
Removed a total of 0 cells.

9.39.40. Executing OPT_DFF pass (perform DFF optimizations).

9.39.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kianv_soc..

9.39.42. Finished OPT passes. (There is nothing left to do.)

9.40. Executing TECHMAP pass (map to technology primitives).

9.40.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

9.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.41. Executing ABC pass (technology mapping using ABC).

9.41.1. Extracting gate netlist of module `\kianv_soc' to `<abc-temp-dir>/input.blif'..
Extracted 5525 gates and 6807 wires to a netlist network with 1280 inputs and 988 outputs.

9.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1901.
ABC: Participating nodes from both networks       =    4108.
ABC: Participating nodes from the first network   =    1931. (  67.17 % of nodes)
ABC: Participating nodes from the second network  =    2177. (  75.72 % of nodes)
ABC: Node pairs (any polarity)                    =    1918. (  66.71 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1236. (  42.99 % of names can be moved)
ABC: Total runtime =     0.43 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

9.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2874
ABC RESULTS:        internal signals:     4539
ABC RESULTS:           input signals:     1280
ABC RESULTS:          output signals:      988
Removing temp directory.

9.42. Executing ICE40_WRAPCARRY pass (wrap carries).

9.43. Executing TECHMAP pass (map to technology primitives).

9.43.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

9.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 276 unused cells and 3183 unused wires.

9.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3491
  1-LUT              195
  2-LUT              483
  3-LUT             1703
  4-LUT             1109
  with \SB_CARRY    (#0)  592
  with \SB_CARRY    (#1)  592

Eliminating LUTs.
Number of LUTs:     3475
  1-LUT              191
  2-LUT              481
  3-LUT             1703
  4-LUT             1100
  with \SB_CARRY    (#0)  592
  with \SB_CARRY    (#1)  592

Combining LUTs.
Number of LUTs:     3453
  1-LUT              189
  2-LUT              457
  3-LUT             1691
  4-LUT             1116
  with \SB_CARRY    (#0)  592
  with \SB_CARRY    (#1)  592

Eliminated 16 LUTs.
Combined 22 LUTs.
<suppressed ~20461 debug messages>

9.45. Executing TECHMAP pass (map to technology primitives).

9.45.1. Executing Verilog-2005 frontend: /home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/hd/hacking/eda-tools/oss-cad-suite-build/_outputs/linux-x64/default/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

9.45.2. Continuing TECHMAP pass.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$054ed57e5dcca76e2c3a3834b394c52525d949ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$d9b36ce2fdd8ce897e45d62a5761501fd1d217bc\$lut for cells of type $lut.
Using template $paramod$8c8483b8dba6dbd9a5f43a97c71ce4530d6e6ded\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$54dc9aafe6e8a348026d60f9910d7f8d3f4d92e9\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$44322768708ea1617c4f8f4845eb883e6765da22\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$62982cca7069de3707116b74c6df774a649aefd3\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$6fbe8a8bf1c23ea35bdc3a55bb5f8ec77b50d9bd\$lut for cells of type $lut.
Using template $paramod$25ce03f90631e67c5e443b0900c3d90fee95a96b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$f9ade28f1669c608093cfc771d07571aec15660d\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$36b988f3de6aff4381bf4723137445be9ee44684\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$246006d276d15b0766d6d890a33a28800bfa7295\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$ec68da5892a57dd3ef23273063c77fe922ac8307\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$1674868d909954f1798905b10bc8fc182227e6d9\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$49308c380d4434ff502cc9276068deff427c75f2\$lut for cells of type $lut.
Using template $paramod$388dbf93bee91918d385c696f1b8d4515b94b317\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$162eacaa56f6f80a5a27551a5f2071c174364807\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100001 for cells of type $lut.
Using template $paramod$90edad2b6a4dec5adef9ce6a532f7a1edb48db32\$lut for cells of type $lut.
Using template $paramod$440c55e9b86a4d19d2d9af4513ac1f3c626292af\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$fceb3a526de44b8f6b38e567360f59f7cf5878fb\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$cc14edb43bcbbd83b718cef08414cb23048bb6d0\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$30234ddca80ec18fbcf4d45d8bd1821aad47e8fd\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$6dc00590ec1f2f22d7e489e662a8d787a23a0ca2\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$802e2b37f907aa9b0ccd4714ce122525a4bfd492\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$51307cdec77060d17363ea3d60427c9afef1ddc2\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$6e41d5c82b0452899b528d0d360abbf915da07e6\$lut for cells of type $lut.
Using template $paramod$6a3eb93fd9661461fcc4400313ec58f204fd785a\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$a54d8b8d2c90a828ee71c2d82e7e1612992a7ab8\$lut for cells of type $lut.
Using template $paramod$e13d53d2f7f4329c814f78d8202f66066122bbc4\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$c7b0f1a2bcc0ee781db0ea8fe1d89c36c0610e43\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$9ce83c401f07863ef6c07aa36141bf86d010bac8\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$2f99e7dde0142f5eb4336d05fd90a596d3f2e038\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod$a44bfc089ebe40b83c2c06bb965c500df992ecfb\$lut for cells of type $lut.
Using template $paramod$7588420f63f3791cee6d21415f8efdc9003d581d\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod$b22e1de0c50840dcbbf24001663ffaaba9d5d7b8\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$bab3258ad21cb83a958fbc51f2a3a88704f4353a\$lut for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000001 for cells of type $lut.
Using template $paramod$331a929fbca16601c98dbe93d42bf63951c7d24c\$lut for cells of type $lut.
Using template $paramod$05e1aa03f4032f091e9babe2ae153c9bb3e7b396\$lut for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$7bb7236ce20a36cdbf35e8771d229b86f7f4a914\$lut for cells of type $lut.
Using template $paramod$d990503bd4013812de761df73674b53eeb4f2408\$lut for cells of type $lut.
Using template $paramod$9c2dece5be18da29d8c978059399d07b00f5921c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$9850450c7f2ce6ec6d61697515f47872a7c4eee5\$lut for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod$f240e8d6ae1c4b8a7008ce9f14aa76387ffdce87\$lut for cells of type $lut.
Using template $paramod$88b20fc653908aab5d0e1a4e4d07b8412b532a9b\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$919913053442636797f134875849d3babaa148ac\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$2167383712a3ef5a7aa9a279cd8db29e1fc2db5f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$0ff6ec80b8c41d71e56d36455122aa93f8a4a113\$lut for cells of type $lut.
Using template $paramod$6e3b22478ca21c5590744f2e30b92938c4d90996\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$12c7f1171b139e4f4e6443ddc13932509cabbc36\$lut for cells of type $lut.
Using template $paramod$a77b247dc82afb0bad62a5bf71a80ce789a88d64\$lut for cells of type $lut.
Using template $paramod$f372bf1b294e01fd043eb05a6280cd9dfb6e2e04\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod$7bcf8a0acb4facd1dfe70d22caec4edc2292bba2\$lut for cells of type $lut.
Using template $paramod$986ef48dd69022da353b9244bee94fa6ac8df5c0\$lut for cells of type $lut.
Using template $paramod$d0bf26260eea0e8530fb2e72eb38c60e28a47da8\$lut for cells of type $lut.
Using template $paramod$ce4de48da1dae474e040e32e00891e27893389af\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$fd1e68d43235621014e35437b4508a97628b7e8f\$lut for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$0d709b8c133785f04f3bc7f0657ef7e79d5ab1ce\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$e916f29461b84dba3e4f29f50c50271deb94400b\$lut for cells of type $lut.
Using template $paramod$114084964309d823f12697631bc0cd5c7a0bacb4\$lut for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$a17a133740b5f12f6e4aad08abbaec00d76aa657\$lut for cells of type $lut.
Using template $paramod$0bdd0ea3a368de5cc9b8e715a13529d6c4c63bad\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$c7da182350c463dac9341b9202c767a484f2d529\$lut for cells of type $lut.
Using template $paramod$cd05f04889088c47a0a5abae8c2d644fd314805e\$lut for cells of type $lut.
Using template $paramod$2d73cf21e7a3b53006ebbae47ecc48e73975ec46\$lut for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$05f19d9c2311a3d1ab38ece311a1bb9f96c62043\$lut for cells of type $lut.
Using template $paramod$b4d59a169df3392cc49f75ff3f36786eb368b5e7\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~6160 debug messages>
Removed 0 unused cells and 7665 unused wires.

9.46. Executing AUTONAME pass.
Renamed 317635 objects in module kianv_soc (164 iterations).
<suppressed ~6531 debug messages>

9.47. Executing HIERARCHY pass (managing design hierarchy).

9.47.1. Analyzing design hierarchy..
Top module:  \kianv_soc

9.47.2. Analyzing design hierarchy..
Top module:  \kianv_soc
Removed 0 unused modules.

9.48. Printing statistics.

=== kianv_soc ===

   Number of wires:               1718
   Number of wire bits:           9244
   Number of public wires:        1718
   Number of public wire bits:    9244
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5042
     $_TBUF_                         8
     SB_CARRY                      843
     SB_DFF                         36
     SB_DFFE                        98
     SB_DFFESR                     475
     SB_DFFESS                      23
     SB_DFFSR                       77
     SB_DFFSS                        4
     SB_LUT4                      3453
     SB_PLL40_PAD                    1
     SB_RAM40_4K                    20
     SB_SPRAM256KA                   4

9.49. Executing CHECK pass (checking for obvious problems).
Checking module kianv_soc...
Found and reported 0 problems.

9.50. Executing JSON backend.

Warnings: 8 unique messages, 8 total
End of script. Logfile hash: 05dc5b3e74, CPU: user 16.30s system 0.09s, MEM: 121.04 MB peak
Yosys 0.15+38 (git sha1 66914b6eb, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 22% 53x opt_expr (4 sec), 22% 1x abc (4 sec), ...
